<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>e-miao</title>
  
  <subtitle>em-miao</subtitle>
  <link href="https://e-miao.github.io/atom.xml" rel="self"/>
  
  <link href="https://e-miao.github.io/"/>
  <updated>2024-08-29T00:00:00.000Z</updated>
  <id>https://e-miao.github.io/</id>
  
  <author>
    <name>e-miao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sqlserver开启cdc配置</title>
    <link href="https://e-miao.github.io/datasource/2024-08-29-sqlserver%E5%BC%80%E5%90%AFcdc%E9%85%8D%E7%BD%AE/"/>
    <id>https://e-miao.github.io/datasource/2024-08-29-sqlserver%E5%BC%80%E5%90%AFcdc%E9%85%8D%E7%BD%AE/</id>
    <published>2024-08-29T00:00:00.000Z</published>
    <updated>2024-08-29T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>docker部署的sqlserver开启 flink-cdc配置</p><h2 id="进入容器-开启SqlServer-Agent-服务"><a href="#进入容器-开启SqlServer-Agent-服务" class="headerlink" title="进入容器,开启SqlServer-Agent 服务"></a>进入容器,开启SqlServer-Agent 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it sqlserver_docker_cname bash<br><br>/opt/mssql/bin/mssql-conf <span class="hljs-built_in">set</span> sqlagent.enabled <span class="hljs-literal">true</span><br><br><span class="hljs-built_in">exit</span><br><br>docker restart sqlserver_docker_cname<br></code></pre></td></tr></table></figure><h2 id="使用SQL命令对库和表开启CDC"><a href="#使用SQL命令对库和表开启CDC" class="headerlink" title="使用SQL命令对库和表开启CDC"></a>使用SQL命令对库和表开启CDC</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-comment">-- 对库开启</span><br>use db_name;<br><span class="hljs-keyword">EXEC</span> sys.sp_cdc_enable_db GO;<br><br><br><span class="hljs-comment">-- 对表开启</span><br>use db_name;<br><span class="hljs-keyword">EXEC</span> sys.sp_cdc_enable_table<br><span class="hljs-variable">@source</span>_schema <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;dbo&#x27;</span>,<br><span class="hljs-variable">@source</span>_name   <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;t_performance_test_1&#x27;</span>,<br><span class="hljs-variable">@role</span>_name     <span class="hljs-operator">=</span> <span class="hljs-keyword">NULL</span>,<br><span class="hljs-variable">@filegroup</span>_name <span class="hljs-operator">=</span> <span class="hljs-keyword">NULL</span>,<br><span class="hljs-variable">@supports</span>_net_changes <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>GO<br><br><span class="hljs-comment">-- 禁用:</span><br>use db_name;<br><span class="hljs-keyword">EXEC</span> sp_cdc_disable_table<br><span class="hljs-variable">@source</span>_schema <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;dbo&#x27;</span>,<br><span class="hljs-variable">@source</span>_name <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;t_performance_test_1&#x27;</span>,<br><span class="hljs-variable">@capture</span>_instance <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;dbo_t_performance_test_1&#x27;</span><br>GO<br><br><span class="hljs-comment">-- 查看是否开启</span><br><span class="hljs-keyword">SELECT</span> s.name <span class="hljs-keyword">AS</span> Schema_Name, tb.name <span class="hljs-keyword">AS</span> Table_Name<br>, tb.object_id, tb.type, tb.type_desc, tb.is_tracked_by_cdc<br><span class="hljs-keyword">FROM</span> sys.tables tb<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> sys.schemas s <span class="hljs-keyword">on</span> s.schema_id <span class="hljs-operator">=</span> tb.schema_id<br><span class="hljs-keyword">WHERE</span> tb.is_tracked_by_cdc <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br><br><br><span class="hljs-keyword">SELECT</span> is_cdc_enabled <span class="hljs-keyword">FROM</span> sys.databases <span class="hljs-keyword">WHERE</span> NAME <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test_1&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="扩展-SqlServer-CDC不支持采集DDL"><a href="#扩展-SqlServer-CDC不支持采集DDL" class="headerlink" title="扩展(SqlServer-CDC不支持采集DDL)"></a>扩展(SqlServer-CDC不支持采集DDL)</h2><p>目前SQL Server CDC自身对新增列不支持动态的采集.<br><br>兼容方案:<br>总体思路: 可以的中已存在的采集实例重建,来达到采集新增列的采集</p><ol><li>热部署：<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">1. 将所有更改应用于源表架构<br>2. 使用sys.sp_cdc_enable_table具有唯一参数值的过程为更新源表创建新的捕获表@capture_instance<br>3. 当Debezium从新的捕获表开始流式传输时，可以使用sys.sp_cdc_disable_table参数@capture_instance设置为旧捕获实例名称的存储过程删除旧的<br></code></pre></td></tr></table></figure></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- Modify the source table schema</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> test_dbo.customers <span class="hljs-keyword">ADD</span> phone_number <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>);<br><br><span class="hljs-comment">-- Create the new capture instance</span><br><span class="hljs-keyword">EXEC</span> sys.sp_cdc_enable_table <span class="hljs-variable">@source</span>_schema <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test_dbo&#x27;</span>, <span class="hljs-variable">@source</span>_name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;customers&#x27;</span>, <span class="hljs-variable">@role</span>_name <span class="hljs-operator">=</span> <span class="hljs-keyword">NULL</span>, <span class="hljs-variable">@supports</span>_net_changes <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, <span class="hljs-variable">@capture</span>_instance <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test_dbo_customers_v2&#x27;</span>;<br>GO<br><br><span class="hljs-comment">-- Drop the old capture instance</span><br><span class="hljs-keyword">EXEC</span> sys.sp_cdc_disable_table <span class="hljs-variable">@source</span>_schema <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test_dbo&#x27;</span>, <span class="hljs-variable">@source</span>_name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;customers&#x27;</span>, <span class="hljs-variable">@capture</span>_instance <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test_dbo_customers&#x27;</span>;<br>GO<br><br><span class="hljs-comment">-- Insert new data</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> customers(first_name,last_name,email,phone_number) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;John&#x27;</span>,<span class="hljs-string">&#x27;Doe&#x27;</span>,<span class="hljs-string">&#x27;john.doe@example.com&#x27;</span>, <span class="hljs-string">&#x27;+1-555-123456&#x27;</span>);<br>GO<br></code></pre></td></tr></table></figure><p>热部署缺点:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">热模式更新有一个缺点。从数据库架构更新到创建新的捕获实例之间有一段时间。<br>在此期间将要到达的所有更改都由具有旧结构的旧实例捕获。例如，这意味着对于新添加的列，在此期间产生的任何更改事件都将不包含该新列的字段。<br>如果您的应用程序不允许这样的过渡期，我们建议您遵循冷模式更新。(这也是官网原话)<br><br></code></pre></td></tr></table></figure><ol start="2"><li>冷部署<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">1. 挂起生成数据库记录的应用程序<br>2. 等待Debezium流所有未流的更改<br>3. 停止连接器<br>4. 将所有更改应用于源表架构<br>5. 使用sys.sp_cdc_enable_table具有唯一参数值的过程为更新源表创建新的捕获表@capture_instance<br>6. 恢复应用<br>7. 启动连接器<br>8. 当Debezium从新的捕获表开始流式传输时，可以使用sys.sp_cdc_disable_table参数@capture_instance设置为旧捕获实例名称的存储过程删除旧的<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">sqlserver开启cdc配置</summary>
    
    
    
    <category term="SqlServer" scheme="https://e-miao.github.io/categories/SqlServer/"/>
    
    
    <category term="SqlServer" scheme="https://e-miao.github.io/tags/SqlServer/"/>
    
  </entry>
  
  <entry>
    <title>Log4j2使用和问题记录</title>
    <link href="https://e-miao.github.io/other/2024-08-14-log4j2%E4%BD%BF%E7%94%A8%E5%92%8C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://e-miao.github.io/other/2024-08-14-log4j2%E4%BD%BF%E7%94%A8%E5%92%8C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2024-08-14T00:00:00.000Z</published>
    <updated>2024-08-14T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>记录自己在使用Log4j2的一些问题和技巧</p><h2 id="Log4j2采集日志输出到MQ-kafka-中"><a href="#Log4j2采集日志输出到MQ-kafka-中" class="headerlink" title="Log4j2采集日志输出到MQ(kafka)中"></a>Log4j2采集日志输出到MQ(kafka)中</h2><p>xml格式:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">Configuration</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;KafkaAppender&quot;</span> <span class="hljs-attr">status</span>=<span class="hljs-string">&quot;OFF&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Appenders</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Kafka</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Kafka&quot;</span> <span class="hljs-attr">topic</span>=<span class="hljs-string">&quot;log-topic&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">JsonTemplateLayout</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">EventTemplateAdditionalField</span></span><br><span class="hljs-tag"><span class="hljs-attr">key</span>=<span class="hljs-string">&quot;yarnContainerId&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">format</span>=<span class="hljs-string">&quot;JSON&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&quot;$&#123;sys:yarnContainerId&#125;&quot;&#x27;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">EventTemplateAdditionalField</span></span><br><span class="hljs-tag"><span class="hljs-attr">key</span>=<span class="hljs-string">&quot;jobName&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">format</span>=<span class="hljs-string">&quot;JSON&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&quot;$&#123;sys:jobName&#125;&quot;&#x27;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">EventTemplateAdditionalField</span></span><br><span class="hljs-tag"><span class="hljs-attr">key</span>=<span class="hljs-string">&quot;jobId&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">format</span>=<span class="hljs-string">&quot;JSON&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&quot;$&#123;sys:jobId&#125;&quot;&#x27;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">EventTemplateAdditionalField</span></span><br><span class="hljs-tag"><span class="hljs-attr">key</span>=<span class="hljs-string">&quot;taskId&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">format</span>=<span class="hljs-string">&quot;JSON&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&quot;$&#123;sys:taskId&#125;&quot;&#x27;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">JsonTemplateLayout</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bootstrap.servers&quot;</span>&gt;</span>192.168.xxx.xxx:9092<span class="hljs-tag">&lt;/<span class="hljs-name">Property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- if kafka have password ,else cancel  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;security.protocol&quot;</span>&gt;</span>SASL_PLAINTEXT<span class="hljs-tag">&lt;/<span class="hljs-name">Property</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sasl.mechanism&quot;</span>&gt;</span>PLAIN<span class="hljs-tag">&lt;/<span class="hljs-name">Property</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">Property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sasl.jaas.config&quot;</span>&gt;</span>org.apache.kafka.common.security.plain.PlainLoginModule required username=&quot;admin&quot; password=&quot;passwd-123&quot;;<span class="hljs-tag">&lt;/<span class="hljs-name">Property</span>&gt;</span><br>        <br><span class="hljs-tag">&lt;/<span class="hljs-name">Kafka</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Console</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;SYSTEM_OUT&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">PatternLayout</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>%d&#123;yy-MM-dd HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">PatternLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Console</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Appenders</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Loggers</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;INFO&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">AppenderRef</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;Kafka&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">AppenderRef</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;STDOUT&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Root</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.kafka&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WARN&quot;</span> <span class="hljs-attr">additivity</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span> <span class="hljs-comment">&lt;!-- avoid recursive logging --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Loggers</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Configuration</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>propertites格式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><br><span class="hljs-string">rootLogger.level</span> <span class="hljs-string">=</span> <span class="hljs-string">INFO</span><br><span class="hljs-string">rootLogger.appenderRef.console.ref</span> <span class="hljs-string">=</span> <span class="hljs-string">ConsoleAppender</span><br><span class="hljs-string">rootLogger.appenderRef.kafka.ref</span> <span class="hljs-string">=</span> <span class="hljs-string">KafkaLog4jAppender</span><br><br><br><span class="hljs-string">appender.console.name</span> <span class="hljs-string">=</span> <span class="hljs-string">ConsoleAppender</span><br><span class="hljs-string">appender.console.type</span> <span class="hljs-string">=</span> <span class="hljs-string">CONSOLE</span><br><span class="hljs-string">appender.console.layout.type</span> <span class="hljs-string">=</span> <span class="hljs-string">PatternLayout</span><br><span class="hljs-string">appender.console.layout.pattern</span> <span class="hljs-string">=</span> <span class="hljs-string">%d&#123;yyyy-MM-dd</span> <span class="hljs-string">HH:mm:ss,SSS&#125;</span> <span class="hljs-string">%-5p</span> <span class="hljs-string">%-60c</span> <span class="hljs-string">%x</span> <span class="hljs-bullet">-</span> <span class="hljs-string">%m%n</span><br><br><br><span class="hljs-comment">#log4j.appender.console=org.apache.log4j.ConsoleAppender</span><br><span class="hljs-comment">#log4j.appender.console.layout=org.apache.log4j.PatternLayout</span><br><span class="hljs-comment">#log4j.appender.console.layout.pattern=%d %p [%t] %m%n</span><br><span class="hljs-comment">#appender.kafka=org.apache.kafka.log4jappender.KafkaLog4jAppender</span><br><span class="hljs-string">appender.kafka.name</span> <span class="hljs-string">=</span> <span class="hljs-string">KafkaLog4jAppender</span><br><span class="hljs-string">appender.kafka.type</span> <span class="hljs-string">=</span> <span class="hljs-string">kafka</span><br><span class="hljs-string">appender.kafka.topic</span> <span class="hljs-string">=</span> <span class="hljs-string">log-topic</span><br><br><span class="hljs-string">appender.kafka.properties[0].type=Property</span><br><span class="hljs-string">appender.kafka.properties[0].name=bootstrap.servers</span><br><span class="hljs-string">appender.kafka.properties[0].value=192.168.xxx.xxx:9094</span><br><span class="hljs-string">appender.kafka.properties[1].type=Property</span><br><span class="hljs-string">appender.kafka.properties[1].name=timeout.ms</span><br><span class="hljs-string">appender.kafka.properties[1].value=30000</span><br><br><span class="hljs-comment">#appender.kafka.brokerList=192.168.12.234:9094</span><br><span class="hljs-comment">#appender.kafka.lingerMs=200</span><br><span class="hljs-comment">#appender.kafka.retries=3</span><br><span class="hljs-comment">#appender.kafka.layout=org.apache.logging.log4j.layout.template.json.JsonTemplateLayout</span><br><span class="hljs-comment">#appender.kafka.json.type = JsonTemplateLayout</span><br><span class="hljs-string">appender.kafka.layout.type</span> <span class="hljs-string">=</span> <span class="hljs-string">JsonTemplateLayout</span><br><span class="hljs-comment">#appender.kafka.layout.pattern = %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; %-5p %-60c %x - %m%n</span><br><span class="hljs-comment">#appender.kafka.layout=org.apache.logging.log4j.layout.template.json.JsonTemplateLayout</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[0].type=EventTemplateAdditionalField</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[0].key=yarnContainerId</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[0].value=&quot;$&#123;sys:yarnContainerId&#125;&quot;</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[0].format=JSON</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[1].type=EventTemplateAdditionalField</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[1].key=jobName</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[1].value=&quot;$&#123;sys:jobName&#125;&quot;</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[1].format=JSON</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[2].type=EventTemplateAdditionalField</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[2].key=jobId</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[2].value=&quot;$&#123;sys:jobId&#125;&quot;</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[2].format=JSON</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[3].type=EventTemplateAdditionalField</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[3].key=taskId</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[3].value=&quot;$&#123;sys:taskId&#125;&quot;</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[3].format=JSON</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[4].type=EventTemplateAdditionalField</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[4].key=logId</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[4].value=&quot;$&#123;sys:logId&#125;&quot;</span><br><span class="hljs-string">appender.kafka.layout.eventTemplateAdditionalField[4].format=JSON</span><br><br></code></pre></td></tr></table></figure><h2 id="Log4j2设置指定包或类日志的打印级别"><a href="#Log4j2设置指定包或类日志的打印级别" class="headerlink" title="Log4j2设置指定包或类日志的打印级别"></a>Log4j2设置指定包或类日志的打印级别</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">################################################################################</span><br><span class="hljs-string">rootLogger.level=INFO</span><br><span class="hljs-string">rootLogger.appenderRef.test.ref</span> <span class="hljs-string">=</span> <span class="hljs-string">TestLogger</span><br><br><span class="hljs-string">appender.testlogger.name</span> <span class="hljs-string">=</span> <span class="hljs-string">TestLogger</span><br><span class="hljs-string">appender.testlogger.type</span> <span class="hljs-string">=</span> <span class="hljs-string">CONSOLE</span><br><span class="hljs-string">appender.testlogger.target</span> <span class="hljs-string">=</span> <span class="hljs-string">SYSTEM_ERR</span><br><span class="hljs-string">appender.testlogger.layout.type</span> <span class="hljs-string">=</span> <span class="hljs-string">PatternLayout</span><br><span class="hljs-string">appender.testlogger.layout.pattern</span> <span class="hljs-string">=</span> <span class="hljs-string">%-4r</span> [<span class="hljs-string">%t</span>] <span class="hljs-string">%-5p</span> <span class="hljs-string">%c</span> <span class="hljs-bullet">-</span> <span class="hljs-string">%m%n</span><br><span class="hljs-comment">#指定包日志级别</span><br><span class="hljs-string">logger.kafkaLog.name</span> <span class="hljs-string">=</span> <span class="hljs-string">org.apache.kafka</span><br><span class="hljs-string">logger.kafkaLog.level</span> <span class="hljs-string">=</span> <span class="hljs-string">WARN</span><br><span class="hljs-string">logger.kafkaLog.additivity</span> <span class="hljs-string">=</span> <span class="hljs-literal">false</span><br><span class="hljs-comment"># 设置特定包的日志级别  </span><br><span class="hljs-string">logger.com.example.mypackage.name</span> <span class="hljs-string">=</span> <span class="hljs-string">com.example.mypackage</span>  <br><span class="hljs-string">logger.com.example.mypackage.level</span> <span class="hljs-string">=</span> <span class="hljs-string">DEBUG</span>  <br><span class="hljs-string">logger.com.example.mypackage.additivity</span> <span class="hljs-string">=</span> <span class="hljs-literal">false</span>  <br><br><span class="hljs-comment"># 设置另一个包的日志级别  </span><br><span class="hljs-string">logger.com.example.myotherpackage.name</span> <span class="hljs-string">=</span> <span class="hljs-string">com.example.myotherpackage</span>  <br><span class="hljs-string">logger.com.example.myotherpackage.level</span> <span class="hljs-string">=</span> <span class="hljs-string">INFO</span>  <br><span class="hljs-string">logger.com.example.myotherpackage.additivity</span> <span class="hljs-string">=</span> <span class="hljs-literal">false</span>  <br><br><span class="hljs-comment"># 设置特定类的日志级别  </span><br><span class="hljs-string">logger.com.example.mypackage.MyClass.name</span> <span class="hljs-string">=</span> <span class="hljs-string">com.example.mypackage.MyClass</span>  <br><span class="hljs-string">logger.com.example.mypackage.MyClass.level</span> <span class="hljs-string">=</span> <span class="hljs-string">TRACE</span>  <br><span class="hljs-string">logger.com.example.mypackage.MyClass.additivity</span> <span class="hljs-string">=</span> <span class="hljs-literal">false</span> <br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">记录log4j2使用的一些问题和技巧</summary>
    
    
    
    <category term="Other" scheme="https://e-miao.github.io/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>Mysql开启flink-cdc同步的相关配置</title>
    <link href="https://e-miao.github.io/datasource/2024-06-27-mysql%E5%BC%80%E5%90%AFflink-cdc%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    <id>https://e-miao.github.io/datasource/2024-06-27-mysql%E5%BC%80%E5%90%AFflink-cdc%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</id>
    <published>2024-06-27T00:00:00.000Z</published>
    <updated>2024-06-27T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置my-cnf"><a href="#配置my-cnf" class="headerlink" title="配置my.cnf"></a>配置my.cnf</h1><p>文件所在目录: &#x2F;etc&#x2F;my.cnf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs conf">[client]<br>default-character-set=utf8mb4<br><br>[mysqld] <br># 配置时区<br>default_time_zone=&#x27;+8:00&#x27;<br># 数据所在目录<br>datadir=/var/lib/mysql<br>socket=/var/lib/mysql/mysql.sock<br><br># server-id,每个实例不能重复<br>server-id=1<br># binlog格式 <br>binlog_format=ROW<br># binlog所在目录<br>log_bin=/var/lib/mysql/log_bin<br><br>log-error=/var/log/mysqld.log<br>pid-file=/var/run/mysqld/mysqld.pid<br><br># 默认引擎和编码配置<br>default-storage-engine=INNODB<br>character-set-server=utf8mb4<br>collation-server=utf8mb4_unicode_ci<br><br># 配置开启gtid,此时cdc同步时,可以指定gtid启动,默认关闭. show variables like &#x27;gtid_mode&#x27;<br>gtid_mode=on                 #开启gtid模式<br>enforce_gtid_consistency=on  #强制gtid一致性，开启后对于特定create table不被支持<br></code></pre></td></tr></table></figure><h2 id="GTID-说明"><a href="#GTID-说明" class="headerlink" title="GTID 说明"></a>GTID 说明</h2><p>GTID (Global Transaction IDentifier) 是全局事务标识。它具有全局唯一性，一个事务对应一个GTID。唯一性不仅限于主服务器，GTID在所有的从服务器上也是唯一的。一个GTID在一个服务器上只执行一次，从而避免重复执行导致数据混乱或主从不一致。</p><p>在传统的复制里面，当发生故障需要主从切换时，服务器需要找到binlog和pos点，然后将其设定为新的主节点开启复制。相对来说比较麻烦，也容易出错。在MySQL 5.6里面，MySQL会通过内部机制自动匹配GTID断点，不再寻找binlog和pos点。我们只需要知道主节点的ip，端口，以及账号密码就可以自动复制。<br>更多说明参考: <a href="http://mysql.taobao.org/monthly/2020/05/09/">MySQL · 引擎特性 · 基于GTID复制实现的工作原理</a></p><h2 id="查看cdc相关配置开启情况"><a href="#查看cdc相关配置开启情况" class="headerlink" title="查看cdc相关配置开启情况"></a>查看cdc相关配置开启情况</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;log_bin&#x27;</span>; <span class="hljs-comment">-- binlog是否开启</span><br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;binlog_format&#x27;</span>; <span class="hljs-comment">-- binlog格式</span><br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;gtid_mode&#x27;</span>; <span class="hljs-comment">-- gitd模式是否开启</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">mysql开启flink-cdc同步的相关配置</summary>
    
    
    
    <category term="Mysql" scheme="https://e-miao.github.io/categories/Mysql/"/>
    
    
    <category term="Mysql" scheme="https://e-miao.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Postgres开启Flink-CDC同步配置</title>
    <link href="https://e-miao.github.io/flink/2024-06-27-Postgres%E5%BC%80%E5%90%AFcdc%E5%90%8C%E6%AD%A5%E9%85%8D%E7%BD%AE/"/>
    <id>https://e-miao.github.io/flink/2024-06-27-Postgres%E5%BC%80%E5%90%AFcdc%E5%90%8C%E6%AD%A5%E9%85%8D%E7%BD%AE/</id>
    <published>2024-06-27T00:00:00.000Z</published>
    <updated>2024-06-27T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本:"></a>软件版本:</h1><p>PostgreSQL: </p><p>主要步骤: 1.配置conf, 2对用户进行授权</p><h1 id="1-配置conf"><a href="#1-配置conf" class="headerlink" title="1. 配置conf"></a>1. 配置conf</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs conf">#更改wal日志方式为logical（方式有：minimal、replica 、logical ）<br>wal_level = logical  <br><br># 更改solts最大数量（默认值为10），flink-cdc默认一张表占用一个slots<br>max_replication_slots = 20<br><br># 更改wal发送最大进程数（默认值为10），这个值和上面的solts设置一样<br>max_wal_senders = 20     <br><br># 中断那些停止活动超过指定毫秒数的复制连接，可以适当设置大一点（默认60s，0表示禁用）<br>wal_sender_timeout = 180s   <br></code></pre></td></tr></table></figure><h1 id="2-创建用户并授权"><a href="#2-创建用户并授权" class="headerlink" title="2. 创建用户并授权"></a>2. 创建用户并授权</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- pg新建用户</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> cdc_user <span class="hljs-keyword">WITH</span> PASSWORD <span class="hljs-string">&#x27;cdc_user123&#x27;</span>;<br><br><br><span class="hljs-comment">-- 给用户复制流权限</span><br><span class="hljs-keyword">ALTER</span> ROLE ODPS_ETL replication;<br><br><span class="hljs-comment">-- 给用户登录数据库权限</span><br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">ON</span> DATABASE test_db <span class="hljs-keyword">to</span> cdc_user;<br><br><span class="hljs-comment">-- 把当前库public下所有表查询权限赋给用户</span><br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-keyword">ALL</span> TABLES <span class="hljs-keyword">IN</span> SCHEMA public <span class="hljs-keyword">TO</span> cdc_user;<br> <br></code></pre></td></tr></table></figure><ol start="3"><li>发布表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 设置发布为true</span><br><span class="hljs-keyword">update</span> pg_publication <span class="hljs-keyword">set</span> puballtables<span class="hljs-operator">=</span><span class="hljs-literal">true</span> <span class="hljs-keyword">where</span> pubname <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>;<br><br><span class="hljs-comment">-- 把所有表进行发布,实际使用中,根据自身需要同步的进行发布</span><br><span class="hljs-keyword">CREATE</span> PUBLICATION dbz_publication <span class="hljs-keyword">FOR</span> <span class="hljs-keyword">ALL</span> TABLES;<br><br><span class="hljs-comment">-- 查询哪些表已经发布</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> pg_publication_tables;<br><br><br><span class="hljs-comment">-- 更改复制标识包含更新和删除之前值（目的是为了确保表 test_tb 在实时同步过程中能够正确地捕获并同步更新和删除的数据变化。如果不执行这两条语句，那么 test_tb 表的复制标识可能默认为 NOTHING，这可能导致实时同步时丢失更新和删除的数据行信息，从而影响同步的准确性）</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> test_tb REPLICA <span class="hljs-keyword">IDENTITY</span> <span class="hljs-keyword">FULL</span>;<br><br><span class="hljs-comment">-- 查看复制标识（为f标识说明设置成功，f（表示 full），否则为 n（表示 nothing），即复制标识未设置）</span><br><span class="hljs-keyword">select</span> relreplident <span class="hljs-keyword">from</span> pg_class <span class="hljs-keyword">where</span> relname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;test_tb&#x27;</span>;<br><br><span class="hljs-comment">-- 给表查询权限</span><br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">TABLE</span> test_tb <span class="hljs-keyword">to</span> ODPS_ETL;<br><br><span class="hljs-comment">-- 把当前库所有表查询权限赋给用户</span><br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">ALL</span> TABLES <span class="hljs-keyword">IN</span> SCHEMA public <span class="hljs-keyword">TO</span> ODPS_ETL;<br><span class="hljs-comment">-- 把当前库以后新建的表查询权限赋给用户</span><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">default</span> privileges <span class="hljs-keyword">in</span> schema public <span class="hljs-keyword">grant</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">on</span> tables <span class="hljs-keyword">to</span> ODPS_ETL;<br><br><span class="hljs-comment">-- 更改复制标识包含更新和删除之前值</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> test_tb REPLICA <span class="hljs-keyword">IDENTITY</span> <span class="hljs-keyword">FULL</span>;<br><br><span class="hljs-comment">-- 查看复制标识</span><br><span class="hljs-keyword">select</span> relreplident <span class="hljs-keyword">from</span> pg_class <span class="hljs-keyword">where</span> relname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;test_tb&#x27;</span>;<br><br><span class="hljs-comment">-- 查看solt使用情况</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> pg_replication_slots;<br><br><span class="hljs-comment">-- 删除solt</span><br><span class="hljs-keyword">SELECT</span> pg_drop_replication_slot(<span class="hljs-string">&#x27;flink_slot_test&#x27;</span>);<br><br><span class="hljs-comment">-- 查询用户当前连接数</span><br><span class="hljs-keyword">select</span> usename, <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> pg_stat_activity <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> usename <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">desc</span>;<br><br><span class="hljs-comment">-- 设置用户最大连接数</span><br><span class="hljs-keyword">alter</span> role odps_etl connection limit <span class="hljs-number">200</span>;<br><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">Postgres开启Flink-CDC同步配置</summary>
    
    
    
    <category term="Flink-CDC" scheme="https://e-miao.github.io/categories/Flink-CDC/"/>
    
    <category term="Postgres" scheme="https://e-miao.github.io/categories/Flink-CDC/Postgres/"/>
    
    
    <category term="Flink-CDC" scheme="https://e-miao.github.io/tags/Flink-CDC/"/>
    
    <category term="Postgres" scheme="https://e-miao.github.io/tags/Postgres/"/>
    
  </entry>
  
  <entry>
    <title>Flink On K8S 实践分享</title>
    <link href="https://e-miao.github.io/flink/Flink%20On%20K8S%20%E5%AE%9E%E8%B7%B5%E5%88%86%E4%BA%AB/"/>
    <id>https://e-miao.github.io/flink/Flink%20On%20K8S%20%E5%AE%9E%E8%B7%B5%E5%88%86%E4%BA%AB/</id>
    <published>2023-08-06T18:25:22.000Z</published>
    <updated>2023-08-06T18:25:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="各软件版本"><a href="#各软件版本" class="headerlink" title="各软件版本"></a>各软件版本</h2><ul><li>k8s: 1.24.2</li><li>flink: 1.14.5</li><li>JDK: 1.8</li><li>Hadoop: 3.0.0</li></ul><h2 id="K8S"><a href="#K8S" class="headerlink" title="K8S"></a>K8S</h2><p>Kubernetes是一个由谷歌开发的开源容器编排平台，用于自动化部署、扩展和管理容器化应用程序。Kubernetes旨在管理在主机集群上部署和扩展容器化应用程序时的复杂性。</p><h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><ul><li><p>Master节点：</p><blockquote><p>kube-apiserver（API Server）： 提供Kubernetes API，允许用户和其他组件与集群交互。所有集群操作都通过API Server进行。</p></blockquote><blockquote><p>etcd： 分布式键值存储系统，用于存储集群的配置数据、元数据和状态。</p></blockquote><blockquote><p>kube-scheduler： 根据资源需求和约束，将未分配的Pod（容器组）调度到合适的节点上。</p></blockquote><blockquote><p>kube-controller-manager： 运行控制器，监控集群状态并根据期望状态进行调整。常见的控制器包括副本控制器、节点控制器、服务控制器等。</p></blockquote><blockquote><p>cloud-controller-manager： 如果集群在云服务提供商上运行，这个组件会与云提供商的API交互，执行与云环境相关的任务。</p></blockquote></li><li><p>Node节点：</p><blockquote><p>kubelet： 在每个节点上运行，负责管理容器和Pod的生命周期，确保它们在所需的状态下运行。</p></blockquote><blockquote><p>kube-proxy： 负责为Pod设置网络代理和负载均衡规则，以实现服务发现和访问。</p></blockquote><blockquote><p>Container Runtime： 负责运行容器，如Docker、containerd等。</p></blockquote></li><li><p>其他关键组件：</p><blockquote><p>Pod： 一个或多个容器的组合，它们共享网络和存储，是Kubernetes的最小部署单位。</p></blockquote><blockquote><p>Deployment： 控制器的一种，用于声明性地定义Pod的部署方式，支持滚动更新和回滚。</p></blockquote><blockquote><p>Service： 用于公开Pod组成的应用程序，为其提供稳定的网络地址，实现负载均衡和服务发现。</p></blockquote><blockquote><p>Namespace： 用于将集群内的资源划分为不同的虚拟组，以帮助管理和隔离。</p></blockquote><blockquote><p>ConfigMap和Secret： 用于将配置信息和敏感信息（如密码、证书）与Pod分开，实现配置的分离和安全性。</p></blockquote><blockquote><p>Volume： 提供容器级别的持久性存储，以便数据在容器之间和容器重启之间持久保存。</p></blockquote><blockquote><p>Ingress： 允许外部流量进入集群，将请求路由到相应的服务和Pod。</p></blockquote><blockquote><p>StatefulSet： 用于管理有状态应用程序的控制器，确保有状态应用程序的有序部署、伸缩和更新。</p></blockquote></li></ul><h3 id="关键特性"><a href="#关键特性" class="headerlink" title="关键特性"></a>关键特性</h3><ul><li><p>容器编排： Kubernetes管理容器，这些容器是将应用程序及其依赖项打包在一起的隔离环境。它确保容器按照用户定义的规范运行、保持健康，并根据需要进行扩展。</p></li><li><p>自动扩展： Kubernetes可以根据资源使用情况或定义的规则自动扩展容器的数量。这确保了最佳性能和资源利用。</p></li><li><p>服务发现和负载均衡： Kubernetes提供机制来公开服务并将传入的网络流量分发到服务的实例。这有助于负载均衡并将流量路由到适当的容器。</p></li><li><p>自愈性： 如果容器或节点发生故障，Kubernetes可以自动用新容器替换失败的容器，以维护期望的应用程序状态和可用性。</p></li><li><p>配置管理： Kubernetes允许您单独管理应用程序配置和设置，而不与应用程序代码混在一起。这使得可以在不重新部署整个应用程序的情况下修改配置。</p></li><li><p>存储编排： Kubernetes提供了管理和挂载容器的存储的方式，从而实现数据持久性和在容器实例之间的共享。</p></li><li><p>声明式管理： Kubernetes使用声明性配置文件（YAML或JSON）来定义应用程序和基础架构的期望状态。系统会持续工作，确保当前状态与配置中指定的期望状态相匹配。</p></li><li><p>滚动更新和回滚： Kubernetes支持滚动更新，允许您在不停机的情况下更新应用程序。如果更新引发问题，您可以轻松回滚到先前的版本。</p></li><li><p>可扩展性： Kubernetes采用模块化架构，允许添加自定义插件和扩展，使其适应各种环境和需求。</p></li></ul><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>Docker是一种开源的容器化平台，用于构建、发布和运行应用程序及其依赖项在轻量级、可移植的容器中。Docker容器是一种轻量级的虚拟化技术，允许应用程序在隔离的环境中运行，同时共享主机操作系统的内核。这使得应用程序可以在不同的环境中以一致的方式运行，从开发环境到生产环境，从本地机器到云服务器。</p><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><ul><li><p>容器： 容器是一个独立且可执行的软件包，包括应用程序及其运行时所需的库、环境变量、配置文件等。容器是轻量级的，因为它们共享主机操作系统的内核。</p></li><li><p>镜像： 镜像是用于构建容器的模板。它包含了一切应用程序运行所需的文件、依赖项和配置信息。镜像是不可变的，一旦创建就不会改变。可以通过在Docker镜像上创建多个容器来实现应用程序的运行。</p></li><li><p>容器运行时： Docker容器运行时是负责启动、停止和管理容器的组件。常用的容器运行时包括Docker Engine、containerd等。</p></li><li><p>Docker引擎： Docker引擎是Docker平台的核心组件，包括Docker守护进程、CLI工具和REST API。它负责管理容器、镜像、网络等。</p></li></ul><h3 id="优势特性"><a href="#优势特性" class="headerlink" title="优势特性"></a>优势特性</h3><ul><li><p>轻量级和快速启动： 容器与传统虚拟机相比更轻量级，可以在几秒钟内启动。这使得应用程序的部署和扩展更加高效。</p></li><li><p>一致性： 应用程序在不同环境中以相同的方式运行，避免了“在我的机器上可工作”等问题。</p></li><li><p>隔离性： 容器之间以及容器与宿主机之间有强大的隔离性，可以防止应用程序之间的冲突和干扰。</p></li><li><p>可移植性： Docker容器可以在任何支持Docker的环境中运行，无论是开发人员的笔记本电脑还是云服务器。</p></li><li><p>可扩展性： Docker容器可以轻松地在多个主机上进行复制和扩展，实现应用程序的水平扩展。</p></li></ul><h2 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h2><p>一个开源的流处理和批处理框架，用于处理和分析大规模数据流和批量数据。</p><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><ul><li>JobManager</li><li>TaskManager</li></ul><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>k8s集群环境</li><li>Docker私有仓库</li><li>Hadoop(Hive)环境<br>write data to iceberg,hudi, or flink checkpoint use hdfs</li></ol><h1 id="编写Flink-APP"><a href="#编写Flink-APP" class="headerlink" title="编写Flink-APP"></a>编写Flink-APP</h1><h2 id="maven-依赖引入"><a href="#maven-依赖引入" class="headerlink" title="maven 依赖引入"></a>maven 依赖引入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">iceberg.version</span>&gt;</span>1.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">iceberg.version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hive.version</span>&gt;</span>2.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">hive.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--        flink --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-streaming-java_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-json<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-connector-base<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-clients_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-shaded-hadoop-2-uber<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.8.3-9.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-log4j12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-table-planner_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-table-common<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-table-api-java-bridge_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-table-api-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-table-runtime_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-sql-connector-kafka_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-connector-hive_$&#123;scala.binary.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hive<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hive-metastore<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-sql-connector-hive-2.2.0_2.12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-lang<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang3<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hive<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hive-metastore<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--    flink end    --&gt;</span><br>        <span class="hljs-comment">&lt;!--     hive    --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hive<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hive-metastore<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;hive.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-lang<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang3<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hive<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hive-exec<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;hive.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>antlr-runtime<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.antlr<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hadoop<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hadoop-common<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-lang<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-lang3<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--  hive end    --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>xml-apis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>xml-apis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.4.01<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.25<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.postgresql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>postgresql<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>42.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.microsoft.sqlserver<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mssql-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>11.2.0.jre8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.oracle.ojdbc<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ojdbc8<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>19.3.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--  iceberg      --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.iceberg<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>iceberg-flink-runtime-1.14<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;iceberg.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--  iceberg   end   --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- log4j2 日志layout json模板        --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-layout-template-json<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 日志组件往kafka中写日志       --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>kafka-log4j-appender<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>kafka-clients<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>kafka-clients<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;kafka.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-runtime-web_2.12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!-- Java Compiler --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>$&#123;target.java.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>$&#123;target.java.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!-- We use the maven-shade plugin to create a fat jar that contains all necessary dependencies. --&gt;</span><br>            <span class="hljs-comment">&lt;!-- Change the value of &lt;mainClass&gt;...&lt;/mainClass&gt; if your program entry point changes. --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-shade-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactSet</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">excludes</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>org.apache.flink:flink-shaded-force-shading<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>com.google.code.findbugs:jsr305<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>org.slf4j:*<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>org.apache.logging.log4j:*<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">excludes</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">artifactSet</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">minimizeJar</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">minimizeJar</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">filters</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">artifact</span>&gt;</span>*:*<span class="hljs-tag">&lt;/<span class="hljs-name">artifact</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">excludes</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>META-INF/*.SF<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>META-INF/*.DSA<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>META-INF/*.RSA<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">excludes</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">filters</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">transformers</span>&gt;</span><br><span class="hljs-comment">&lt;!--                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ServicesResourceTransformer&quot;/&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ServicesResourceTransformer&quot;/&gt;--&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">transformer</span>  <span class="hljs-attr">implementation</span>=<span class="hljs-string">&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">mainClass</span>&gt;</span>com.xxx.xxx.MainClass<span class="hljs-tag">&lt;/<span class="hljs-name">mainClass</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">transformer</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">transformers</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!-- Run shade goal on package phase --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>shade<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.6.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>copy-compile-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>copy-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/deps<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">excludeTransitive</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">excludeTransitive</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">stripVersion</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">stripVersion</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">includeScope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">includeScope</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>copy-provided-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>copy-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">excludeTransitive</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">excludeTransitive</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">stripVersion</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">stripVersion</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">includeScope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">includeScope</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">pluginManagement</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">pluginManagement</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>hive2<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">repositories</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- hive-jdbc hive2版本,依赖org.pentaho:pentaho-aggdesigner-algorithm:pom:5.1.5-jhyde --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven-sp<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>spring-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">repositories</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--  -P hive3           --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>hive3<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">hive.version</span>&gt;</span>3.1.3<span class="hljs-tag">&lt;/<span class="hljs-name">hive.version</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.flink<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>flink-sql-connector-hive-3.1.2_2.12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!--            &lt;scope&gt;provided&lt;/scope&gt;--&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.hive<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hive-metastore<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;hive.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.6.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>copy-compile-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>copy-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                             <br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">excludeTransitive</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">excludeTransitive</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">stripVersion</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">stripVersion</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">includeScope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">includeScope</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                                        flink-sql-connector-hive-2.2.0_$&#123;scala.binary.version&#125;<br>                                    <span class="hljs-tag">&lt;/<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>copy-provided-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>copy-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/lib<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">excludeTransitive</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">excludeTransitive</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">stripVersion</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">stripVersion</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">includeScope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">includeScope</span>&gt;</span><br>                                    <span class="hljs-tag">&lt;<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                                        flink-sql-connector-hive-2.2.0_$&#123;scala.binary.version&#125;<br>                                    <span class="hljs-tag">&lt;/<span class="hljs-name">excludeArtifactIds</span>&gt;</span><br>                                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                            <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br></code></pre></td></tr></table></figure><p>程序主要逻辑:<br>读取kafka中json数据,写入到iceberg中.</p><h1 id="Build-Docker-Image"><a href="#Build-Docker-Image" class="headerlink" title="Build-Docker-Image"></a>Build-Docker-Image</h1><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> flink:<span class="hljs-number">1.14</span>.<span class="hljs-number">5</span>-scala_2.<span class="hljs-number">12</span>-java8<br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">set</span> -ex; \</span><br><span class="language-bash">  apt-get update; \</span><br><span class="language-bash">  apt-get -y  install s3fs; \</span><br><span class="language-bash">  <span class="hljs-built_in">rm</span> -rf /var/lib/apt/lists/*</span><br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">set</span> -ex; <span class="hljs-built_in">rm</span> -rf /opt/flink/lib/*</span><br><br><span class="hljs-keyword">COPY</span><span class="language-bash"> docker-entrypoint.sh /</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$FLINK_HOME</span>/usrlib</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> ./xxxxx.jar <span class="hljs-variable">$FLINK_HOME</span>/usrlib/</span><br></code></pre></td></tr></table></figure><h2 id="docker-entrypoint-sh"><a href="#docker-entrypoint-sh" class="headerlink" title="docker-entrypoint.sh"></a>docker-entrypoint.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin/env bash</span><br><br><span class="hljs-comment">###############################################################################</span><br><span class="hljs-comment">#  Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="hljs-comment">#  or more contributor license agreements.  See the NOTICE file</span><br><span class="hljs-comment">#  distributed with this work for additional information</span><br><span class="hljs-comment">#  regarding copyright ownership.  The ASF licenses this file</span><br><span class="hljs-comment">#  to you under the Apache License, Version 2.0 (the</span><br><span class="hljs-comment">#  &quot;License&quot;); you may not use this file except in compliance</span><br><span class="hljs-comment">#  with the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">#  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment">#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">#  See the License for the specific language governing permissions and</span><br><span class="hljs-comment"># limitations under the License.</span><br><span class="hljs-comment">###############################################################################</span><br><br><span class="hljs-comment">###################### minio mount start#####################</span><br>AWS_S3_ACCESS_KEY_ID=<span class="hljs-variable">$&#123;AWS_S3_ACCESS_KEY_ID:-&quot;&quot;&#125;</span><br>AWS_S3_SECRET_ACCESS_KEY=<span class="hljs-variable">$&#123;AWS_S3_SECRET_ACCESS_KEY:-&quot;&quot;&#125;</span><br>AWS_S3_ROOT_DIR=<span class="hljs-variable">$&#123;AWS_S3_ROOT_DIR:-&quot;/&quot;&#125;</span><br>AWS_S3_AUTH_FILE=<span class="hljs-variable">$&#123;AWS_S3_ROOTDIR&#125;</span>/passwd-s3fs<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;AWS_S3_ACCESS_KEY_ID&#125;</span>:<span class="hljs-variable">$&#123;AWS_S3_SECRET_ACCESS_KEY&#125;</span>&quot;</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;AWS_S3_AUTH_FILE&#125;</span>&quot;</span><br><br><span class="hljs-built_in">chmod</span> 600 <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;AWS_S3_AUTH_FILE&#125;</span>&quot;</span><br><span class="hljs-comment">#cat $&#123;AWS_S3_AUTH_FILE&#125;</span><br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;<span class="hljs-variable">$AWS_S3_MOUNT</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$AWS_S3_MOUNT</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$AWS_S3_ACCESS_KEY_ID</span> != <span class="hljs-string">&#x27;&#x27;</span> ]];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-------------minio info---------------------&quot;</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;AWS_S3_ACCESS_KEY_ID=<span class="hljs-variable">$&#123;AWS_S3_ACCESS_KEY_ID&#125;</span>,AWS_S3_SECRET_ACCESS_KEY=<span class="hljs-variable">$&#123;AWS_S3_SECRET_ACCESS_KEY&#125;</span>,AWS_S3_BUCKET=<span class="hljs-variable">$&#123;AWS_S3_BUCKET&#125;</span>,AWS_S3_MOUNT=<span class="hljs-variable">$&#123;AWS_S3_MOUNT&#125;</span>,AWS_S3_URL=<span class="hljs-variable">$&#123;AWS_S3_URL&#125;</span>&quot;</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;--------------------------------------------&quot;</span><br>  <span class="hljs-comment"># s3fs -o passwd_file=/root/.passwd-s3fs -o url=$&#123;MINIO_URL&#125; -o allow_other -o nonempty -o no_check_certificate -o use_path_request_style -o umask=000 $&#123;MINIO_VOLUME&#125; $&#123;MOUNT_PATH&#125;</span><br>  mount_cmd=<span class="hljs-string">&quot;s3fs -o <span class="hljs-variable">$&#123;S3FS_ARGS&#125;</span> -o passwd_file=<span class="hljs-variable">$&#123;AWS_S3_AUTH_FILE&#125;</span> -o url=<span class="hljs-variable">$&#123;AWS_S3_URL&#125;</span> <span class="hljs-variable">$&#123;AWS_S3_BUCKET&#125;</span> <span class="hljs-variable">$&#123;AWS_S3_MOUNT&#125;</span>&quot;</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;mount_cmd=[<span class="hljs-variable">$&#123;mount_cmd&#125;</span>]&quot;</span><br>  <span class="hljs-built_in">which</span> s3fs<br>  <span class="hljs-keyword">if</span> [[ $? != <span class="hljs-string">&#x27;0&#x27;</span> ]];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;need first install s3fs,install cmd: apt-get update;  apt-get install -y s3fs&quot;</span><br>  <span class="hljs-keyword">fi</span><br>  <span class="hljs-built_in">eval</span> <span class="hljs-variable">$mount_cmd</span><br>  <span class="hljs-keyword">if</span> [[ $? == <span class="hljs-string">&#x27;0&#x27;</span> ]];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;mount minio success&quot;</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;mount minio fail...&quot;</span><br>    <span class="hljs-built_in">cat</span> <span class="hljs-variable">$&#123;AWS_S3_AUTH_FILE&#125;</span><br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment">##################### minio mount end###############################</span><br><span class="hljs-built_in">ls</span> -alh /opt/flink/lib<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;print origin lib dir end -----------&quot;</span><br><br><br>FLINK_EXTRA_LIBS=<span class="hljs-variable">$&#123;FLINK_EXTRA_LIBS:-&quot;&quot;&#125;</span><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$FLINK_EXTRA_LIBS</span> != <span class="hljs-string">&#x27;&#x27;</span> ]];<span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;copy flink extra libs to /opt/flink/lib&quot;</span><br>   <span class="hljs-built_in">cp</span> -rf <span class="hljs-variable">$&#123;FLINK_EXTRA_LIBS&#125;</span>/* /opt/flink/lib<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">### print flink lib dir #########</span><br><span class="hljs-built_in">ls</span> -alh /opt/flink/lib<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;print lib dir end -----------&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;----------list flink/conf------------&quot;</span><br><span class="hljs-built_in">ls</span> -alh /opt/flink/conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;----------list flink/conf--end------------&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;FLINK_HOME=<span class="hljs-variable">$&#123;FLINK_HOME&#125;</span>&quot;</span><br><br>COMMAND_STANDALONE=<span class="hljs-string">&quot;standalone-job&quot;</span><br>COMMAND_HISTORY_SERVER=<span class="hljs-string">&quot;history-server&quot;</span><br><br><span class="hljs-comment"># If unspecified, the hostname of the container is taken as the JobManager address</span><br>JOB_MANAGER_RPC_ADDRESS=<span class="hljs-variable">$&#123;JOB_MANAGER_RPC_ADDRESS:-$(hostname -f)&#125;</span><br>CONF_FILE=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_HOME&#125;</span>/conf/flink-conf.yaml&quot;</span><br><br><span class="hljs-built_in">chmod</span> 775 <span class="hljs-variable">$CONF_FILE</span><br>exec_chmod=`$?`<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;chmod ret-----------<span class="hljs-variable">$&#123;exec_chmod&#125;</span>&quot;</span><br><br>kerberos_principal=<span class="hljs-variable">$&#123;kerberos_principal:-&quot;&quot;&#125;</span><br>kerberos_keytab=<span class="hljs-variable">$&#123;kerberos_keytab:-&quot;&quot;&#125;</span><br>kerberos_krb5=<span class="hljs-variable">$&#123;kerberos_krb5:-&quot;&quot;&#125;</span><br><br><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$kerberos_krb5</span> != <span class="hljs-string">&#x27;&#x27;</span> ]];<span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;cp kerberos_krb5&quot;</span><br>   <span class="hljs-built_in">cp</span> <span class="hljs-variable">$kerberos_krb5</span> /etc/<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$kerberos_principal</span> != <span class="hljs-string">&#x27;&#x27;</span> ]];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;security.kerberos.login.use-ticket-cache: true&quot;</span> &gt;&gt; <span class="hljs-variable">$CONF_FILE</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;security.kerberos.login.contexts: Client&quot;</span> &gt;&gt; <span class="hljs-variable">$CONF_FILE</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;security.kerberos.login.keytab: <span class="hljs-variable">$&#123;kerberos_keytab&#125;</span>&quot;</span> &gt;&gt; <span class="hljs-variable">$CONF_FILE</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;security.kerberos.login.principal: <span class="hljs-variable">$&#123;kerberos_principal&#125;</span>&quot;</span> &gt;&gt; <span class="hljs-variable">$CONF_FILE</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;security.kerberos.krb5-conf.path: <span class="hljs-variable">$&#123;kerberos_krb5&#125;</span>&quot;</span> &gt;&gt; <span class="hljs-variable">$CONF_FILE</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----kerberos files ----------------&quot;</span><br><span class="hljs-built_in">ls</span> -al /opt/kerberos/<br><span class="hljs-built_in">ls</span> -al /opt/kerberos/kerberos_keytab/<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----kerberos files ----------------end&quot;</span><br><br><span class="hljs-function"><span class="hljs-title">drop_privs_cmd</span></span>() &#123;<br>    <span class="hljs-keyword">if</span> [ $(<span class="hljs-built_in">id</span> -u) != 0 ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-comment"># Don&#x27;t need to drop privs if EUID != 0</span><br>        <span class="hljs-built_in">return</span><br>    <span class="hljs-keyword">elif</span> [ -x /sbin/su-exec ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-comment"># Alpine</span><br>        <span class="hljs-built_in">echo</span> su-exec flink<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-comment"># Others</span><br>        <span class="hljs-built_in">echo</span> gosu flink<br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-title">copy_plugins_if_required</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$ENABLE_BUILT_IN_PLUGINS</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">return</span> 0<br>  <span class="hljs-keyword">fi</span><br><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Enabling required built-in plugins&quot;</span><br>  <span class="hljs-keyword">for</span> target_plugin <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ENABLE_BUILT_IN_PLUGINS</span>&quot;</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;;&#x27;</span> <span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Linking <span class="hljs-variable">$&#123;target_plugin&#125;</span> to plugin directory&quot;</span><br>    plugin_name=<span class="hljs-variable">$&#123;target_plugin%.jar&#125;</span><br><br>    <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_HOME&#125;</span>/plugins/<span class="hljs-variable">$&#123;plugin_name&#125;</span>&quot;</span><br>    <span class="hljs-keyword">if</span> [ ! -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_HOME&#125;</span>/opt/<span class="hljs-variable">$&#123;target_plugin&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Plugin <span class="hljs-variable">$&#123;target_plugin&#125;</span> does not exist. Exiting.&quot;</span><br>      <span class="hljs-built_in">exit</span> 1<br>    <span class="hljs-keyword">else</span><br>      <span class="hljs-built_in">ln</span> -fs <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_HOME&#125;</span>/opt/<span class="hljs-variable">$&#123;target_plugin&#125;</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_HOME&#125;</span>/plugins/<span class="hljs-variable">$&#123;plugin_name&#125;</span>&quot;</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Successfully enabled <span class="hljs-variable">$&#123;target_plugin&#125;</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">done</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">set_config_option</span></span>() &#123;<br>  <span class="hljs-built_in">local</span> option=<span class="hljs-variable">$1</span><br>  <span class="hljs-built_in">local</span> value=<span class="hljs-variable">$2</span><br><br>  <span class="hljs-comment"># escape periods for usage in regular expressions</span><br>  <span class="hljs-built_in">local</span> escaped_option=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;option&#125;</span> | sed -e <span class="hljs-string">&quot;s/\./\\\./g&quot;</span>)<br><br>  <span class="hljs-comment"># either override an existing entry, or append a new one</span><br>  <span class="hljs-keyword">if</span> grep -E <span class="hljs-string">&quot;^<span class="hljs-variable">$&#123;escaped_option&#125;</span>:.*&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>&quot;</span> &gt; /dev/null; <span class="hljs-keyword">then</span><br>        sed -i -e <span class="hljs-string">&quot;s/<span class="hljs-variable">$&#123;escaped_option&#125;</span>:.*/<span class="hljs-variable">$option</span>: <span class="hljs-variable">$value</span>/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>&quot;</span><br>  <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;option&#125;</span>: <span class="hljs-variable">$&#123;value&#125;</span>&quot;</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>&quot;</span><br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">prepare_configuration</span></span>() &#123;<br>    set_config_option jobmanager.rpc.address <span class="hljs-variable">$&#123;JOB_MANAGER_RPC_ADDRESS&#125;</span><br>    set_config_option blob.server.port 6124<br>    set_config_option query.server.port 6125<br><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;TASK_MANAGER_NUMBER_OF_TASK_SLOTS&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        set_config_option taskmanager.numberOfTaskSlots <span class="hljs-variable">$&#123;TASK_MANAGER_NUMBER_OF_TASK_SLOTS&#125;</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_PROPERTIES&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FLINK_PROPERTIES&#125;</span>&quot;</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    envsubst &lt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>&quot;</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>.tmp&quot;</span> &amp;&amp; <span class="hljs-built_in">mv</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>.tmp&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CONF_FILE&#125;</span>&quot;</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">maybe_enable_jemalloc</span></span>() &#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;DISABLE_JEMALLOC:-false&#125;</span>&quot;</span> == <span class="hljs-string">&quot;false&quot;</span> ]; <span class="hljs-keyword">then</span><br>        JEMALLOC_PATH=<span class="hljs-string">&quot;/usr/lib/<span class="hljs-subst">$(uname -m)</span>-linux-gnu/libjemalloc.so&quot;</span><br>        JEMALLOC_FALLBACK=<span class="hljs-string">&quot;/usr/lib/x86_64-linux-gnu/libjemalloc.so&quot;</span><br>        <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$JEMALLOC_PATH</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">export</span> LD_PRELOAD=<span class="hljs-variable">$LD_PRELOAD</span>:<span class="hljs-variable">$JEMALLOC_PATH</span><br>        <span class="hljs-keyword">elif</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$JEMALLOC_FALLBACK</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">export</span> LD_PRELOAD=<span class="hljs-variable">$LD_PRELOAD</span>:<span class="hljs-variable">$JEMALLOC_FALLBACK</span><br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$JEMALLOC_PATH</span>&quot;</span> = <span class="hljs-string">&quot;<span class="hljs-variable">$JEMALLOC_FALLBACK</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>                MSG_PATH=<span class="hljs-variable">$JEMALLOC_PATH</span><br>            <span class="hljs-keyword">else</span><br>                MSG_PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$JEMALLOC_PATH</span> and <span class="hljs-variable">$JEMALLOC_FALLBACK</span>&quot;</span><br>            <span class="hljs-keyword">fi</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;WARNING: attempted to load jemalloc from <span class="hljs-variable">$MSG_PATH</span> but the library couldn&#x27;t be found. glibc will be used instead.&quot;</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br>maybe_enable_jemalloc<br><br>copy_plugins_if_required<br><br>prepare_configuration<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;------------print flink-conf.yaml--------------------&quot;</span><br><span class="hljs-built_in">cat</span> <span class="hljs-variable">$CONF_FILE</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;------------print flink-conf.yaml---end--------------&quot;</span><br><br>args=(<span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>)<br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&quot;help&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;Usage: <span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$0</span>&quot;</span>)</span> (jobmanager|<span class="hljs-variable">$&#123;COMMAND_STANDALONE&#125;</span>|taskmanager|<span class="hljs-variable">$&#123;COMMAND_HISTORY_SERVER&#125;</span>)\n&quot;</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;    Or <span class="hljs-subst">$(basename <span class="hljs-string">&quot;<span class="hljs-variable">$0</span>&quot;</span>)</span> help\n\n&quot;</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;By default, Flink image adopts jemalloc as default memory allocator. This behavior can be disabled by setting the &#x27;DISABLE_JEMALLOC&#x27; environment variable to &#x27;true&#x27;.\n&quot;</span><br>    <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&quot;jobmanager&quot;</span> ]; <span class="hljs-keyword">then</span><br>    args=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]:1&#125;</span>&quot;</span>)<br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting Job Manager&quot;</span><br><br>    <span class="hljs-built_in">exec</span> $(drop_privs_cmd) <span class="hljs-string">&quot;<span class="hljs-variable">$FLINK_HOME</span>/bin/jobmanager.sh&quot;</span> start-foreground <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-variable">$&#123;COMMAND_STANDALONE&#125;</span> ]; <span class="hljs-keyword">then</span><br>    args=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]:1&#125;</span>&quot;</span>)<br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting Job Manager&quot;</span><br><br>    <span class="hljs-built_in">exec</span> $(drop_privs_cmd) <span class="hljs-string">&quot;<span class="hljs-variable">$FLINK_HOME</span>/bin/standalone-job.sh&quot;</span> start-foreground <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-variable">$&#123;COMMAND_HISTORY_SERVER&#125;</span> ]; <span class="hljs-keyword">then</span><br>    args=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]:1&#125;</span>&quot;</span>)<br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting History Server&quot;</span><br><br>    <span class="hljs-built_in">exec</span> $(drop_privs_cmd) <span class="hljs-string">&quot;<span class="hljs-variable">$FLINK_HOME</span>/bin/historyserver.sh&quot;</span> start-foreground <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&quot;taskmanager&quot;</span> ]; <span class="hljs-keyword">then</span><br>    args=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]:1&#125;</span>&quot;</span>)<br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting Task Manager&quot;</span><br><br>    <span class="hljs-built_in">exec</span> $(drop_privs_cmd) <span class="hljs-string">&quot;<span class="hljs-variable">$FLINK_HOME</span>/bin/taskmanager.sh&quot;</span> start-foreground <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]&#125;</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br>args=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># Running command in pass-through mode</span><br><span class="hljs-built_in">exec</span> $(drop_privs_cmd) <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;args[@]&#125;</span>&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="pod-template-yaml"><a href="#pod-template-yaml" class="headerlink" title="pod-template.yaml"></a>pod-template.yaml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Pod</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">jobmanager-pod-template</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">containers:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flink-main-container</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.12</span><span class="hljs-number">.101</span><span class="hljs-string">/dev/flink1.14.5-base:latest</span><br>      <span class="hljs-attr">securityContext:</span><br>        <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">AWS_S3_BUCKET</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;kt-volume&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">S3FS_ARGS</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;use_path_request_style,allow_other,no_check_certificate,umask=000,nonempty&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">AWS_S3_ACCESS_KEY_ID</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;admin&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">AWS_S3_SECRET_ACCESS_KEY</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;admin123&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">AWS_S3_MOUNT</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;/mnt/kt-volume&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">AWS_S3_URL</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;http://192.168.12.178:9000&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">TZ</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">Asia/Shanghai</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FLINK_LIBS</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">Asia/Shanghai</span><br><br></code></pre></td></tr></table></figure><h1 id="Deploy-Flink-APP"><a href="#Deploy-Flink-APP" class="headerlink" title="Deploy Flink-APP"></a>Deploy Flink-APP</h1><p>submit cmd</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> FLINK_CONF_DIR=/opt/flink-1.14.5/conf;<br>/opt/flink-1.14.5/bin/flink run-application \<br>--target kubernetes-application \<br>-Dkubernetes.cluster-id=app-001 \<br>-Dkubernetes.container.image=192.168.1.110/dev/flink1.14.5-base:latest \<br>-Dkubernetes.container.image.pull-policy=Always \<br>-Dkubernetes.pod-template-file=/opt/flink-1.14.5/pod-template.yml \<br>-Dkubernetes.namespace=rts \<br>-Dkubernetes.config.file=/mnt/kt-volume/resource/rts/k8s/conf/config \<br>-Dkubernetes.rest-service.exposed.type=NodePort \<br>-Dcontainerized.master.env.HADOOP_CLASSPATH=/opt/hadoop/hdfs-conf:/opt/flink-1.14.5/conf/flink-conf.yaml:/opt/flink-1.14.5/conf/log4j2.xml \<br>-Dcontainerized.master.env.kerberos_krb5=/opt/hadoop/hdfs-conf/krb5.conf \<br>-Dcontainerized.taskmanager.env.HADOOP_CLASSPATH=/opt/hadoop/hdfs-conf:/opt/flink-1.14.5/conf/flink-conf.yaml:/opt/flink-1.14.5/conf/log4j2.xml \<br>-Dcontainerized.taskmanager.env.kerberos_krb5=/opt/hadoop/hdfs-conf/krb5.conf \<br>-Dclassloader.resolve-order=parent-first \<br>-Dsecurity.kerberos.login.principal=hive/cdh-100@KEENDATA.COM \<br>-Dsecurity.kerberos.login.use-ticket-cache=<span class="hljs-literal">true</span> \<br>-Dsecurity.kerberos.login.keytab=/opt/hadoop/hdfs-conf/hive100.keytab \<br>-D<span class="hljs-string">&#x27;$internal.pipeline.job-id&#x27;</span>=629ff7a21c24f10998f66e46d63bc2d3 \<br>-c com.keendata.rts.SyncSink \<br><span class="hljs-built_in">local</span>:///mnt/kt-volume/resource/rts/rts-sink-2.3-SNAPSHOT.jar -job /mnt/kt-volume/resource/temp/tmpjson/kafka_hive_iceberg.json \<br>-taskId 1669239192347009000 -mode INITIAL -jobName kafka_hive_iceberg \<br>-principal hive/cdh-100@KEENDATA.COM -keytabPath /opt/hadoop/hdfs-conf/hive100.keytab \<br>-krb5Conf /opt/hadoop/hdfs-conf/krb5.conf -useLocalFile <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">记录下flink on k8s运行的一些经验和总结.</summary>
    
    
    
    <category term="Flink" scheme="https://e-miao.github.io/categories/Flink/"/>
    
    
  </entry>
  
  <entry>
    <title>Mysql-Flink-Hudi数据同步</title>
    <link href="https://e-miao.github.io/flink/Mysql-Flink-Hudi%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/"/>
    <id>https://e-miao.github.io/flink/Mysql-Flink-Hudi%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/</id>
    <published>2023-05-08T15:31:58.000Z</published>
    <updated>2023-05-08T15:31:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mysql-Flink-Hudi数据同步"><a href="#Mysql-Flink-Hudi数据同步" class="headerlink" title="Mysql-Flink-Hudi数据同步"></a>Mysql-Flink-Hudi数据同步</h1><p>使用Flink-Cdc同步mysql数据到Hudi中.使用Kafka作为中间缓存组件.</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li><p>开启MySQL-binglog日志</p></li><li><p>编译好相关hudi版本,本次使用Hudi:0.12.3</p></li><li><p>其他软件版本:</p><p> flink:1.15.4</p><p> Java:1.8</p><p> hadoop: 3.3.0</p></li></ol><h1 id="同步数据操作"><a href="#同步数据操作" class="headerlink" title="同步数据操作"></a>同步数据操作</h1><h2 id="1-启动Flink-Yarn-Session"><a href="#1-启动Flink-Yarn-Session" class="headerlink" title="1.启动Flink-Yarn-Session"></a>1.启动Flink-Yarn-Session</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bin/yarn-session -d<br></code></pre></td></tr></table></figure><h2 id="2-启动Flink-Sq客户端"><a href="#2-启动Flink-Sq客户端" class="headerlink" title="2.启动Flink-Sq客户端."></a>2.启动Flink-Sq客户端.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bin/sql-client.sh embedded -s yarn-session<br></code></pre></td></tr></table></figure><h2 id="3-创建cdc-mysql连接器"><a href="#3-创建cdc-mysql连接器" class="headerlink" title="3.创建cdc-mysql连接器."></a>3.创建cdc-mysql连接器.</h2><p>在flink-sql中创建.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  school string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string,<br>  <span class="hljs-keyword">primary</span> key (id) <span class="hljs-keyword">not</span> enforced<br>) <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;mysql-cdc&#x27;</span>,<br>  <span class="hljs-string">&#x27;hostname&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd000&#x27;</span>,<br>  <span class="hljs-string">&#x27;port&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;3306&#x27;</span>,<br>  <span class="hljs-string">&#x27;username&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;root&#x27;</span>,<br>  <span class="hljs-string">&#x27;password&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;root&#x27;</span>,<br>  <span class="hljs-string">&#x27;database-name&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test&#x27;</span>,<br>  <span class="hljs-string">&#x27;table-name&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;stu3&#x27;</span><br>);<br><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">sql</span><span class="hljs-operator">-</span>client.execution.result<span class="hljs-operator">-</span>mode<span class="hljs-operator">=</span>tableau; <br></code></pre></td></tr></table></figure><h2 id="4-创建Kafka表"><a href="#4-创建Kafka表" class="headerlink" title="4.创建Kafka表"></a>4.创建Kafka表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog_sink_kafka(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  school string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string,<br>  <span class="hljs-keyword">primary</span> key (id) <span class="hljs-keyword">not</span> enforced<br>) <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;upsert-kafka&#x27;</span><br>  ,<span class="hljs-string">&#x27;topic&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;cdc_mysql_stu3_sink&#x27;</span><br>  ,<span class="hljs-string">&#x27;properties.zookeeper.connect&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd001:2181,hd002:2181,hd003:2181&#x27;</span><br>  ,<span class="hljs-string">&#x27;properties.bootstrap.servers&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd001:9092,hd003:9092,hd002:9092&#x27;</span><br>  ,<span class="hljs-string">&#x27;key.format&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;json&#x27;</span><br>  ,<span class="hljs-string">&#x27;value.format&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;json&#x27;</span><br>);<br></code></pre></td></tr></table></figure><h2 id="5-将mysql-binlog日志写入kafka"><a href="#5-将mysql-binlog日志写入kafka" class="headerlink" title="5.将mysql binlog日志写入kafka"></a>5.将mysql binlog日志写入kafka</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stu3_binlog_sink_kafka<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> stu3_binlog;<br></code></pre></td></tr></table></figure><h2 id="6-创建kafka源表"><a href="#6-创建kafka源表" class="headerlink" title="6.创建kafka源表"></a>6.创建kafka源表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog_source_kafka(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  school string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string<br> ) <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;kafka&#x27;</span>,<br>  <span class="hljs-string">&#x27;topic&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;cdc_mysql_stu3_sink&#x27;</span>,<br>  <span class="hljs-string">&#x27;properties.bootstrap.servers&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd001:9092,hd003:9092,hd002:9092&#x27;</span>,<br>  <span class="hljs-string">&#x27;format&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;json&#x27;</span>,<br>  <span class="hljs-string">&#x27;scan.startup.mode&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;earliest-offset&#x27;</span>,<br>  <span class="hljs-string">&#x27;properties.group.id&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;testGroup&#x27;</span><br>  );<br></code></pre></td></tr></table></figure><h2 id="7-创建hudi目标表"><a href="#7-创建hudi目标表" class="headerlink" title="7.创建hudi目标表"></a>7.创建hudi目标表</h2>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog_sink_hudi(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  `school` string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string,<br>  <span class="hljs-keyword">primary</span> key (id) <span class="hljs-keyword">not</span> enforced<br>)<br> partitioned <span class="hljs-keyword">by</span> (`school`)<br> <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hudi&#x27;</span>,<br>  <span class="hljs-string">&#x27;path&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hdfs:///tmp/hudi_flink/stu3_binlog_sink_hudi&#x27;</span>,<br>  <span class="hljs-string">&#x27;table.type&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;MERGE_ON_READ&#x27;</span>,<br>  <span class="hljs-string">&#x27;write.option&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;insert&#x27;</span>,<br>  <span class="hljs-string">&#x27;write.precombine.field&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;school&#x27;</span><br>  );<br></code></pre></td></tr></table></figure><h2 id="8-将kafka数据写入到hudi中"><a href="#8-将kafka数据写入到hudi中" class="headerlink" title="8.将kafka数据写入到hudi中"></a>8.将kafka数据写入到hudi中</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stu3_binlog_sink_hudi<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>  stu3_binlog_source_kafka;<br></code></pre></td></tr></table></figure><h1 id="使用sql文件形式进行同步"><a href="#使用sql文件形式进行同步" class="headerlink" title="使用sql文件形式进行同步"></a>使用sql文件形式进行同步</h1><h2 id="定义flink-sql文件"><a href="#定义flink-sql文件" class="headerlink" title="定义flink_sql文件"></a>定义flink_sql文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  school string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string,<br>  <span class="hljs-keyword">primary</span> key (id) <span class="hljs-keyword">not</span> enforced<br>) <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;mysql-cdc&#x27;</span>,<br>  <span class="hljs-string">&#x27;hostname&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd000&#x27;</span>,<br>  <span class="hljs-string">&#x27;port&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;3306&#x27;</span>,<br>  <span class="hljs-string">&#x27;username&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;root&#x27;</span>,<br>  <span class="hljs-string">&#x27;password&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;root&#x27;</span>,<br>  <span class="hljs-string">&#x27;database-name&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test&#x27;</span>,<br>  <span class="hljs-string">&#x27;table-name&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;stu3&#x27;</span><br>);<br><br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog_sink_kafka(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  school string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string,<br>  <span class="hljs-keyword">primary</span> key (id) <span class="hljs-keyword">not</span> enforced<br>) <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;upsert-kafka&#x27;</span><br>  ,<span class="hljs-string">&#x27;topic&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;cdc_mysql_stu3_sink&#x27;</span><br>  ,<span class="hljs-string">&#x27;properties.zookeeper.connect&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd001:2181,hd002:2181,hd003:2181&#x27;</span><br>  ,<span class="hljs-string">&#x27;properties.bootstrap.servers&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd001:9092,hd003:9092,hd002:9092&#x27;</span><br>  ,<span class="hljs-string">&#x27;key.format&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;json&#x27;</span><br>  ,<span class="hljs-string">&#x27;value.format&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;json&#x27;</span><br>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stu3_binlog_sink_kafka<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> stu3_binlog;<br><br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog_source_kafka(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  school string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string<br> ) <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;kafka&#x27;</span>,<br>  <span class="hljs-string">&#x27;topic&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;cdc_mysql_stu3_sink&#x27;</span>,<br>  <span class="hljs-string">&#x27;properties.bootstrap.servers&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hd001:9092,hd003:9092,hd002:9092&#x27;</span>,<br>  <span class="hljs-string">&#x27;format&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;json&#x27;</span>,<br>  <span class="hljs-string">&#x27;scan.startup.mode&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;earliest-offset&#x27;</span>,<br>  <span class="hljs-string">&#x27;properties.group.id&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;testGroup&#x27;</span><br>  );<br><br><br> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3_binlog_sink_hudi(<br>  id <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  name string,<br>  `school` string,<br>  nickname string,<br>  age <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  class_num <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  phone <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>  email string,<br>  ip string,<br>  <span class="hljs-keyword">primary</span> key (id) <span class="hljs-keyword">not</span> enforced<br>)<br> partitioned <span class="hljs-keyword">by</span> (`school`)<br> <span class="hljs-keyword">with</span> (<br>  <span class="hljs-string">&#x27;connector&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hudi&#x27;</span>,<br>  <span class="hljs-string">&#x27;path&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;hdfs:///tmp/hudi_flink/stu3_binlog_sink_hudi&#x27;</span>,<br>  <span class="hljs-string">&#x27;table.type&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;MERGE_ON_READ&#x27;</span>,<br>  <span class="hljs-string">&#x27;write.option&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;insert&#x27;</span>,<br>  <span class="hljs-string">&#x27;write.precombine.field&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;school&#x27;</span>,<br>  <span class="hljs-string">&#x27;read.streaming.enabled&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;true&#x27;</span>,<br>  <span class="hljs-string">&#x27;read.streaming.check-interval&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;10&#x27;</span><br>  );<br><br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> stu3_binlog_sink_hudi<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>  stu3_binlog_source_kafka;<br></code></pre></td></tr></table></figure><h2 id="执行sql文件"><a href="#执行sql文件" class="headerlink" title="执行sql文件"></a>执行sql文件</h2><p>前提需启动yarn-session</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bin/sql-client.sh embedded -s yarn-session -f sqls/xxxx.sql<br></code></pre></td></tr></table></figure><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ul><li>flink-conf.yml配置</li></ul><p>开启flink-cps, 并设置有效一次消费.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># execution.checkpointing.interval: 3min</span><br><span class="hljs-attr">execution.checkpointing.interval:</span> <span class="hljs-string">10000ms</span><br><span class="hljs-comment"># execution.checkpointing.externalized-checkpoint-retention: [DELETE_ON_CANCELLATION, RETAIN_ON_CANCELLATION]</span><br><span class="hljs-comment"># execution.checkpointing.max-concurrent-checkpoints: 1</span><br><span class="hljs-attr">execution.checkpointing.max-concurrent-checkpoints:</span> <span class="hljs-number">1</span><br><span class="hljs-comment"># execution.checkpointing.min-pause: 0</span><br><span class="hljs-comment"># execution.checkpointing.mode: [EXACTLY_ONCE, AT_LEAST_ONCE]</span><br><span class="hljs-attr">execution.checkpointing.mode:</span> <span class="hljs-string">EXACTLY_ONCE</span><br><span class="hljs-comment"># execution.checkpointing.timeout: 10min</span><br><span class="hljs-comment"># execution.checkpointing.tolerable-failed-checkpoints: 0</span><br><span class="hljs-comment"># execution.checkpointing.unaligned: false</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Supported backends are &#x27;hashmap&#x27;, &#x27;rocksdb&#x27;, or the</span><br><span class="hljs-comment"># &lt;class-name-of-factory&gt;.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># state.backend: hashmap</span><br><span class="hljs-attr">state.backend:</span> <span class="hljs-string">rocksdb</span><br><br><span class="hljs-comment"># Directory for checkpoints filesystem, when using any of the default bundled</span><br><span class="hljs-comment"># state backends.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># state.checkpoints.dir: hdfs://namenode-host:port/flink-checkpoints</span><br><span class="hljs-attr">state.checkpoints.dir:</span> <span class="hljs-string">hdfs:///flink/checkpoints</span><br><br><span class="hljs-comment"># Default target directory for savepoints, optional.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># state.savepoints.dir: hdfs://namenode-host:port/flink-savepoints</span><br><span class="hljs-attr">state.savepoints.dir:</span> <span class="hljs-string">hdfs:///flink/savepoints</span><br><br><span class="hljs-comment"># Flag to enable/disable incremental checkpoints for backends that</span><br><span class="hljs-comment"># support incremental checkpoints (like the RocksDB state backend). </span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># state.backend.incremental: false</span><br><span class="hljs-attr">state.backend.incremental:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ul><li>配置启动所需的环境变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim bin/config.sh<br><span class="hljs-built_in">export</span> HADOOP_CLASSPATH=`hadoop classpath`<br><br>vim /ect/profile.d/my_env.sh<br><span class="hljs-built_in">export</span> HADOOP_CONF_DIR=<span class="hljs-variable">$HADOOP_HOME</span>/etc/hadoop<br><span class="hljs-built_in">export</span> YARN_CONF_DIR=<span class="hljs-variable">$HADOOP_HOME</span>/etc/hadoop<br></code></pre></td></tr></table></figure></li></ul><p>&#x2F;etc&#x2F;profil.d&#x2F;my_env.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-arm64<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><br><span class="hljs-built_in">export</span> HADOOP_HOME=/opt/ha/hadoop-3.3.0<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HADOOP_HOME</span>/bin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HADOOP_HOME</span>/sbin<br><br><span class="hljs-built_in">export</span> ZK_HOME=/opt/zk/zookeeper<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$ZK_HOME</span>/bin<br><br><span class="hljs-built_in">export</span> HIVE_HOME=/opt/hive/hive3.1.3<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HIVE_HOME</span>/bin<br><br><span class="hljs-built_in">export</span> HADOOP_CONF_DIR=<span class="hljs-variable">$HADOOP_HOME</span>/etc/hadoop<br><span class="hljs-built_in">export</span> YARN_CONF_DIR=<span class="hljs-variable">$HADOOP_HOME</span>/etc/hadoop<br><br><span class="hljs-built_in">export</span> HADOOP_CLASSPATH=`hadoop classpath`<br></code></pre></td></tr></table></figure><ul><li><p>启动yarn-session,及提交sql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动yarn-session</span><br>./bin/yarn-session.sh -jm 2048M -yn <span class="hljs-string">&quot;flink-hudi&quot;</span> -d<br><br><span class="hljs-comment"># 通过文件形式提交sql到yarn-session中.</span><br>./bin/sql-client.sh embedded -s yarn-session -f sqls/xxxx.sql<br></code></pre></td></tr></table></figure></li><li><p>MySQL开启binlog</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs conf">cat my.cnf<br>#设置日志三种格式：STATEMENT、ROW、MIXED 。<br>binlog_format = ROW<br>#设置日志路径，注意路经需要mysql用户有权限写<br>log-bin = /var/lib/mysql/mysql-bin<br>#设置binlog清理时间<br>expire_logs_days = 15<br>#binlog每个日志文件大小<br>max_binlog_size = 200m<br>#binlog缓存大小<br>binlog_cache_size = 4m<br>#最大binlog缓存大小<br>max_binlog_cache_size = 512m<br><br>server-id=1<br><br>default-time_zone = &#x27;+8:00&#x27;<br></code></pre></td></tr></table></figure></li><li><p>使用工具批量插入数据到mysql</p><p>  <a href="https://developer.aliyun.com/article/852227">https://developer.aliyun.com/article/852227</a></p>  <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs txt">id||int||自增id[:inc(id,30000)]<br>name||varchar(20)||学生名字<br>school||varchar(20)||学校名字[:enum(qinghua,beida,shanghaijiaoda,fudan,xidian,zhongda)]<br>nickname||varchar(20)||学生小名[:enum(tom,tony,mick,rich,jasper)]<br>age||int||学生年龄[:age]<br>class_num||int||班级人数[:int(10, 100)]<br>phone||bigint||电话号码[:phone_number]<br>email||varchar(64)||家庭网络邮箱[:email]<br>ip||varchar(32)||IP地址[:ipv4]<br></code></pre></td></tr></table></figure>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- auto-generated definition</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> stu3<br>(<br>    id        <span class="hljs-type">int</span> unsigned auto_increment comment <span class="hljs-string">&#x27;自增id&#x27;</span><br>        <span class="hljs-keyword">primary</span> key,<br>    name      <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;学生名字&#x27;</span>,<br>    school    <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;学校名字&#x27;</span>,<br>    nickname  <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;学生小名&#x27;</span>,<br>    age       <span class="hljs-type">int</span>         <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;学生年龄&#x27;</span>,<br>    class_num <span class="hljs-type">int</span>         <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;班级人数&#x27;</span>,<br>    phone     <span class="hljs-type">bigint</span>      <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;电话号码&#x27;</span>,<br>    email     <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;家庭网络邮箱&#x27;</span>,<br>    ip        <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;IP地址&#x27;</span><br>)<br>    charset <span class="hljs-operator">=</span> utf8mb3;<br><br><br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">datafaker rdb mysql+mysqldb://root:root@hd000:3306/test?charset=utf8 stu3 30000 --meta meta.txt<br></code></pre></td></tr></table></figure></li><li><p>hudi-hdfs目录最终效果</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">hdfs dfs -<span class="hljs-built_in">ls</span> -h /tmp/hudi_flink/stu3_binlog_sink_hudi<br><br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:52 /tmp/hudi_flink/stu3_binlog_sink_hudi/.hoodie<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:44 /tmp/hudi_flink/stu3_binlog_sink_hudi/beida<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:44 /tmp/hudi_flink/stu3_binlog_sink_hudi/fudan<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:44 /tmp/hudi_flink/stu3_binlog_sink_hudi/qinghua<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:44 /tmp/hudi_flink/stu3_binlog_sink_hudi/shanghaijiaoda<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:44 /tmp/hudi_flink/stu3_binlog_sink_hudi/xidian<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:44 /tmp/hudi_flink/stu3_binlog_sink_hudi/zhongda<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:43 /tmp/hudi_flink/stu3_binlog_sink_hudi/北京大学<br>drwxr-xr-x   - miao supergroup          0 2023-05-08 06:52 /tmp/hudi_flink/stu3_binlog_sink_hudi/清华<br></code></pre></td></tr></table></figure></li><li><p>Flink依赖jar包:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">miao@hd001:/opt/flink/flink-1.15.4$ ll -ht lib/<br>total 317M<br>drwxr-xr-x 12 miao miao 4.0K May  8 06:19 ../<br>-rw-rw-r--  1 miao miao  22M May  4 11:12 flink-sql-connector-mysql-cdc-2.2.0.jar<br>drwxr-xr-x  2 miao miao 4.0K May  4 11:12 ./<br>-rw-rw-r--  1 miao miao 5.0M May  4 11:12 flink-sql-connector-kafka-1.15.4.jar<br>-rw-r--r--  1 miao miao 1.6M May  4 10:54 hadoop-mapreduce-client-core-3.3.0.jar<br>-rw-r--r--  1 miao miao 2.4M May  4 10:34 guava-20.0.jar<br>-rw-rw-r--  1 miao miao  91M May  4 10:14 hudi-flink1.15-bundle-0.12.3.jar<br>-rw-r--r--  1 miao miao 111M Mar  9 08:57 flink-dist-1.15.4.jar<br>-rw-r--r--  1 miao miao  35M Mar  9 08:55 flink-table-planner-loader-1.15.4.jar<br>-rw-r--r--  1 miao miao  15M Mar  9 08:55 flink-table-api-java-uber-1.15.4.jar<br>-rw-r--r--  1 miao miao  21M Mar  9 08:55 flink-scala_2.12-1.15.4.jar<br>-rw-r--r--  1 miao miao 172K Mar  9 08:51 flink-json-1.15.4.jar<br>-rw-r--r--  1 miao miao  93K Mar  9 08:49 flink-csv-1.15.4.jar<br>-rw-r--r--  1 miao miao 475K Mar  9 08:43 flink-connector-files-1.15.4.jar<br>-rw-r--r--  1 miao miao 2.9M Mar  9 08:42 flink-table-runtime-1.15.4.jar<br>-rw-r--r--  1 miao miao 190K Mar  9 08:41 flink-cep-1.15.4.jar<br>-rw-r--r--  1 miao miao  11M Feb  8  2022 flink-shaded-zookeeper-3.5.9.jar<br>-rw-r--r--  1 miao miao 204K Jan  4  2022 log4j-1.2-api-2.17.1.jar<br>-rw-r--r--  1 miao miao 295K Jan  4  2022 log4j-api-2.17.1.jar<br>-rw-r--r--  1 miao miao 1.8M Jan  4  2022 log4j-core-2.17.1.jar<br>-rw-r--r--  1 miao miao  24K Jan  4  2022 log4j-slf4j-impl-2.17.1.jar<br></code></pre></td></tr></table></figure><p>  需要新增jar包:</p>  <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">flink-sql-connector-mysql-cdc-2.2.0.jar # 需要下载<br>flink-sql-connector-kafka-1.15.4.jar # 需要下载<br>hadoop-mapreduce-client-core-3.3.0.jar # 需从hadoop环境中copy<br>guava-20.0.jar # 解决冲突放入<br>hudi-flink1.15-bundle-0.12.3.jar # 需手动编译hudi得到<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">使用flink-cdc 同步 mysql数据到hudi数据湖中.</summary>
    
    
    
    <category term="Flink" scheme="https://e-miao.github.io/categories/Flink/"/>
    
    <category term="Hudi" scheme="https://e-miao.github.io/categories/Flink/Hudi/"/>
    
    
    <category term="Flink" scheme="https://e-miao.github.io/tags/Flink/"/>
    
    <category term="Hudi" scheme="https://e-miao.github.io/tags/Hudi/"/>
    
  </entry>
  
  <entry>
    <title>Vim插件管理工具使用</title>
    <link href="https://e-miao.github.io/linux/Vim%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E4%BD%BF%E7%94%A8/"/>
    <id>https://e-miao.github.io/linux/Vim%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E4%BD%BF%E7%94%A8/</id>
    <published>2023-03-31T16:04:15.000Z</published>
    <updated>2023-03-31T16:04:15.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vim插件管理工具介绍"><a href="#Vim插件管理工具介绍" class="headerlink" title="Vim插件管理工具介绍"></a>Vim插件管理工具介绍</h1><p>vim插件管理工具主要用于对vim编辑器中自动提示，主题显示，代码补全各种插件的管理和更新。目前主流的插件管理工具有以下几种：</p><ol><li><p>vim-plug </p><p> 是一个轻量级且功能强大的插件管理器，易于设置和使用。配置和插件存放在一个目录中。</p></li><li><p>pathogen.vim</p><p> pathogen.vim 是最古老的 Vim 插件管理器之一。像大多数插件管理器一样，它将插件排列到单独的文件夹中。</p></li><li><p>Vundle</p><p> 受pathogen.vim启发，安装简便，github地址：<a href="https://github.com/VundleVim/Vundle.vim#quick-start">https://github.com/VundleVim/Vundle.vim#quick-start</a></p></li><li><p>dein.vim</p><p> 很现代的插件管理工具，是Vim&#x2F;Neovim 插件管理器</p></li><li><p>Volt</p><p> 速度很快的一个插件管理工具。</p></li><li><p>Vim8自带插件管理</p><p> 在 Vim 8 及更高版本上，Vim自带插件管理，需要插件复制到~&#x2F;.vim 指定目录下即可。</p></li></ol><h1 id="使用Vundle"><a href="#使用Vundle" class="headerlink" title="使用Vundle"></a>使用Vundle</h1><p>本文使用的是插件管理： Vundle. 在其github官网中的quickstart中已经可以满足基本使用了。<br><br><br>特点：安装简单, 插件安装方式多, 文档清晰.</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim<br></code></pre></td></tr></table></figure><h2 id="配置-x2F-vimrc"><a href="#配置-x2F-vimrc" class="headerlink" title="配置 ~&#x2F;.vimrc"></a>配置 ~&#x2F;.vimrc</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">set</span> nocompatible              <span class="hljs-comment">&quot; be iMproved, required</span><br><span class="hljs-keyword">filetype</span> off                  <span class="hljs-comment">&quot; required</span><br><br><span class="hljs-comment">&quot; set the runtime path to include Vundle and initialize</span><br><span class="hljs-keyword">set</span> rtp+=~/.<span class="hljs-keyword">vim</span>/bundle/Vundle.<span class="hljs-keyword">vim</span><br><span class="hljs-keyword">call</span> vundle#begin()<br><span class="hljs-comment">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class="hljs-comment">&quot;call vundle#begin(&#x27;~/some/path/here&#x27;)</span><br><br><span class="hljs-comment">&quot; let Vundle manage Vundle, required</span><br>Plugin <span class="hljs-string">&#x27;VundleVim/Vundle.vim&#x27;</span><br><br><span class="hljs-comment">&quot; 以下是Vundle支持的插件安装几种方式：</span><br><span class="hljs-comment">&quot; The following are examples of different formats supported.</span><br><span class="hljs-comment">&quot; Keep Plugin commands between vundle#begin/end.</span><br><span class="hljs-comment">&quot; plugin on GitHub repo ： 插件中github仓库中直接下载，只需要指定名称。</span><br>Plugin <span class="hljs-string">&#x27;tpope/vim-fugitive&#x27;</span><br><span class="hljs-comment">&quot; plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="hljs-comment">&quot; Plugin &#x27;L9&#x27;</span><br><span class="hljs-comment">&quot; Git plugin not hosted on GitHub ： 指定具体的git地址，从地址中下载插件。</span><br>Plugin <span class="hljs-string">&#x27;git://git.wincent.com/command-t.git&#x27;</span><br><span class="hljs-comment">&quot; git repos on your local machine (i.e. when working on your own plugin) ： 指定具体的插件所在本地系统路径。</span><br>Plugin <span class="hljs-string">&#x27;file:///home/gmarik/path/to/plugin&#x27;</span><br><span class="hljs-comment">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span><br><span class="hljs-comment">&quot; Pass the path to set the runtimepath properly. ： 从vim 的repo仓库中下载安装插件。</span><br>Plugin <span class="hljs-string">&#x27;rstacruz/sparkup&#x27;</span>, &#123;<span class="hljs-string">&#x27;rtp&#x27;</span>: <span class="hljs-string">&#x27;vim/&#x27;</span>&#125;<br><span class="hljs-comment">&quot; Install L9 and avoid a Naming conflict if you&#x27;ve already installed a</span><br><span class="hljs-comment">&quot; different version somewhere else.</span><br><span class="hljs-comment">&quot; Plugin &#x27;ascenator/L9&#x27;, &#123;&#x27;name&#x27;: &#x27;newL9&#x27;&#125;</span><br><br><span class="hljs-comment">&quot; All of your Plugins must be added before the following line</span><br><span class="hljs-keyword">call</span> vundle#end()            <span class="hljs-comment">&quot; required</span><br><span class="hljs-keyword">filetype</span> plugin <span class="hljs-built_in">indent</span> <span class="hljs-keyword">on</span>    <span class="hljs-comment">&quot; required</span><br><span class="hljs-comment">&quot; To ignore plugin indent changes, instead use:</span><br><span class="hljs-comment">&quot;filetype plugin on</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; Brief help</span><br><span class="hljs-comment">&quot; :PluginList       - lists configured plugins</span><br><span class="hljs-comment">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span><br><span class="hljs-comment">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span><br><span class="hljs-comment">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span><br><span class="hljs-comment">&quot;</span><br><span class="hljs-comment">&quot; see :h vundle for more details or wiki for FAQ</span><br><span class="hljs-comment">&quot; Put your non-Plugin stuff after this line</span><br></code></pre></td></tr></table></figure><p>至此Vundle安装完成.</p><h2 id="主题使用"><a href="#主题使用" class="headerlink" title="主题使用"></a>主题使用</h2><p>自己使用的主题：<a href="https://github.com/sonph/onehalf/tree/master/vim">onehalf</a><br>下载主题相关配色文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/tmp/<br>git <span class="hljs-built_in">clone</span> https://github.com/sonph/onehalf.git ~/tmp/onehalf<br><span class="hljs-built_in">cd</span> ~/tmp/onehalf &amp;&amp; <span class="hljs-built_in">cp</span> -r vim/autoload ~/.vim/ &amp;&amp; <span class="hljs-built_in">cp</span> -r vim/colors ~/.vim/<br><br></code></pre></td></tr></table></figure><br>github中提供的是vim-plug管理器安装方式，使用Vundle安装只需要修改前缀即可。<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-comment">&quot; vim主题，自动识别文本显示高亮等。</span><br>Plugin <span class="hljs-string">&#x27;sonph/onehalf&#x27;</span>, &#123; <span class="hljs-string">&#x27;rtp&#x27;</span>: <span class="hljs-string">&#x27;vim&#x27;</span> &#125;<br><br><span class="hljs-comment">&quot; vim状态栏目主题：</span><br>Plugin <span class="hljs-string">&#x27;itchyny/lightline.vim&#x27;</span><br></code></pre></td></tr></table></figure>启用主题插件和配置项：<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br><span class="hljs-keyword">set</span> t_Co=<span class="hljs-number">256</span><br><span class="hljs-keyword">set</span> cursorline<br><span class="hljs-comment">&quot; colorscheme onehalflight </span><br><span class="hljs-comment">&quot; 设置主题</span><br><span class="hljs-keyword">colorscheme</span> onehalfdark<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_theme</span>=<span class="hljs-string">&#x27;onehalfdark&#x27;</span><br><span class="hljs-comment">&quot; lightline</span><br><span class="hljs-comment">&quot; let g:lightline = &#123; &#x27;colorscheme&#x27;: &#x27;onehalfdark&#x27; &#125;</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">exists</span>(<span class="hljs-string">&#x27;+termguicolors&#x27;</span>)<br>  <span class="hljs-keyword">let</span> &amp;t_8f = <span class="hljs-string">&quot;\&lt;Esc&gt;[38;2;%lu;%lu;%lum&quot;</span><br>  <span class="hljs-keyword">let</span> &amp;t_8b = <span class="hljs-string">&quot;\&lt;Esc&gt;[48;2;%lu;%lu;%lum&quot;</span><br>  <span class="hljs-keyword">set</span> termguicolors<br><span class="hljs-keyword">endif</span><br><br><span class="hljs-comment">&quot; 启用状态栏主题。</span><br><span class="hljs-comment">&quot; 自定义 Plugin &#x27;itchyny/lightline.vim&#x27;</span><br><span class="hljs-keyword">if</span> !has(<span class="hljs-string">&#x27;gui_running&#x27;</span>)<br>  <span class="hljs-keyword">set</span> t_Co=<span class="hljs-number">256</span><br><span class="hljs-keyword">endif</span><br><br><span class="hljs-comment">&quot; 总是显示状态行</span><br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span><br><br></code></pre></td></tr></table></figure><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>两种方式：</p><ol><li><p>在终端运行</p><p> 运行后等待一会安装就好。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim +PluginInstall +qall<br></code></pre></td></tr></table></figure></li><li><p>在vim编辑器模式下运行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:PluginInstall<br></code></pre></td></tr></table></figure></li></ol><h2 id="安装后效果"><a href="#安装后效果" class="headerlink" title="安装后效果"></a>安装后效果</h2><p><img src="/img/blog/em_miao_20230425215733.png"></p>]]></content>
    
    
    <summary type="html">记录一下自己使用的Vim插件管理工具.和一些相关插件主题等.</summary>
    
    
    
    <category term="Linux" scheme="https://e-miao.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://e-miao.github.io/tags/Linux/"/>
    
    <category term="Vim" scheme="https://e-miao.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop源码解读</title>
    <link href="https://e-miao.github.io/hadoop/2022-11-15-Hadoop%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <id>https://e-miao.github.io/hadoop/2022-11-15-Hadoop%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</id>
    <published>2022-11-15T18:01:53.000Z</published>
    <updated>2022-11-15T18:01:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hadoop源码解读"><a href="#Hadoop源码解读" class="headerlink" title="Hadoop源码解读"></a>Hadoop源码解读</h1><p>以下解读基础Hadoop版本：3.2.4</p><h1 id="写流程解读："><a href="#写流程解读：" class="headerlink" title="写流程解读："></a>写流程解读：</h1><p>关键类：</p><p><code>DistributedFileSystem</code></p><p>DFSClient</p><p>org.apache.hadoop.hdfs.DFSClient#create()</p><p>org.apache.hadoop.hdfs.DFSOutputStream#newStreamForCreate()</p><p>org.apache.hadoop.hdfs.DFSOutputStream#DFSOutputStream()</p><p>org.apache.hadoop.hdfs.DataStreamer()</p><p>DataStreamer extend Thread</p><p>org.apache.hadoop.hdfs.DataStreamer#run</p><p>org.apache.hadoop.hdfs.DataStreamer.ResponseProcessor#run</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * Same as &#123;<span class="hljs-doctag">@link</span> #create(String, FsPermission, EnumSet, boolean, short, long,</span><br><span class="hljs-comment">   * Progressable, int, ChecksumOpt, InetSocketAddress[])&#125; with the addition of</span><br><span class="hljs-comment">   * ecPolicyName that is used to specify a specific erasure coding policy</span><br><span class="hljs-comment">   * instead of inheriting any policy from this new file&#x27;s parent directory.</span><br><span class="hljs-comment">   * This policy will be persisted in HDFS. A value of null means inheriting</span><br><span class="hljs-comment">   * parent groups&#x27; whatever policy.</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">public</span> DFSOutputStream <span class="hljs-title function_">create</span><span class="hljs-params">(String src, FsPermission permission,</span><br><span class="hljs-params">      EnumSet&lt;CreateFlag&gt; flag, <span class="hljs-type">boolean</span> createParent, <span class="hljs-type">short</span> replication,</span><br><span class="hljs-params">      <span class="hljs-type">long</span> blockSize, Progressable progress, <span class="hljs-type">int</span> buffersize,</span><br><span class="hljs-params">      ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,</span><br><span class="hljs-params">      String ecPolicyName)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    checkOpen();<br>    <span class="hljs-keyword">final</span> <span class="hljs-type">FsPermission</span> <span class="hljs-variable">masked</span> <span class="hljs-operator">=</span> applyUMask(permission);<br>    LOG.debug(<span class="hljs-string">&quot;&#123;&#125;: masked=&#123;&#125;&quot;</span>, src, masked);<br>    <span class="hljs-keyword">final</span> <span class="hljs-type">DFSOutputStream</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> DFSOutputStream.newStreamForCreate(<span class="hljs-built_in">this</span>,<br>        src, masked, flag, createParent, replication, blockSize, progress,<br>        dfsClientConf.createChecksum(checksumOpt),<br>        getFavoredNodesStr(favoredNodes), ecPolicyName);<br>    beginFileLease(result.getFileId(), result);<br>    <span class="hljs-keyword">return</span> result;<br>  &#125;<br></code></pre></td></tr></table></figure><p>DFSOutputStream.newStreamForCreate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">final</span> DFSOutputStream out;<br>    <span class="hljs-keyword">if</span>(stat.getErasureCodingPolicy() != <span class="hljs-literal">null</span>) &#123;<br>      out = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DFSStripedOutputStream</span>(dfsClient, src, stat,<br>          flag, progress, checksum, favoredNodes);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      out = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DFSOutputStream</span>(dfsClient, src, stat,<br>          flag, progress, checksum, favoredNodes, <span class="hljs-literal">true</span>);<br>    &#125;<br>    out.start();<br>    <span class="hljs-keyword">return</span> out;<br></code></pre></td></tr></table></figure><p>new DFSOutputStream(dfsClient, src, stat,  flag, progress, checksum, favoredNodes, true)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-title function_">DFSOutputStream</span><span class="hljs-params">(DFSClient dfsClient, String src,</span><br><span class="hljs-params">      HdfsFileStatus stat, EnumSet&lt;CreateFlag&gt; flag, Progressable progress,</span><br><span class="hljs-params">      DataChecksum checksum, String[] favoredNodes, <span class="hljs-type">boolean</span> createStreamer)</span> &#123;<br>    <span class="hljs-built_in">this</span>(dfsClient, src, flag, progress, stat, checksum);<br>    <span class="hljs-built_in">this</span>.shouldSyncBlock = flag.contains(CreateFlag.SYNC_BLOCK);<br><br>    computePacketChunkSize(dfsClient.getConf().getWritePacketSize(),<br>        bytesPerChecksum);<br><br>    <span class="hljs-keyword">if</span> (createStreamer) &#123;<br>      streamer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataStreamer</span>(stat, <span class="hljs-literal">null</span>, dfsClient, src, progress,<br>          checksum, cachingStrategy, byteArrayManager, favoredNodes,<br>          addBlockFlags);<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>new DataStreamer()   : <strong>DataStreamer extend</strong> <code>Daemod -&gt;</code> <code>Daemon</code> <strong>extend Thread</strong></p><p>真正和datanode通信的线程，并提交数据的线程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * streamer thread is the only thread that opens streams to datanode,</span><br><span class="hljs-comment"> * and closes them. Any error recovery is also done by this thread.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">TraceScope</span> <span class="hljs-variable">scope</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>  <span class="hljs-keyword">while</span> (!streamerClosed &amp;&amp; dfsClient.clientRunning) &#123;<br><span class="hljs-comment">// if the Responder encountered an error, shutdown Responder</span><br><span class="hljs-keyword">if</span> (errorState.hasError()) &#123;<br>      closeResponder();<br>    &#125;<br><br>    DFSPacket one;<br>    <span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// process datanode IO errors if any</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">doSleep</span> <span class="hljs-operator">=</span> processDatanodeOrExternalError();<br><br>      <span class="hljs-keyword">synchronized</span> (dataQueue) &#123;<br><span class="hljs-comment">// wait for a packet to be sent.</span><br><span class="hljs-keyword">while</span> ((!shouldStop() &amp;&amp; dataQueue.isEmpty()) || doSleep) &#123;<br>          <span class="hljs-type">long</span> <span class="hljs-variable">timeout</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span>;<br>          <span class="hljs-keyword">if</span> (stage == BlockConstructionStage.DATA_STREAMING) &#123;<br>            timeout = sendHeartbeat();<br>          &#125;<br>          <span class="hljs-keyword">try</span> &#123;<br>            dataQueue.wait(timeout);<br>          &#125; <span class="hljs-keyword">catch</span> (InterruptedException  e) &#123;<br>LOG.debug(<span class="hljs-string">&quot;Thread interrupted&quot;</span>, e);<br>          &#125;<br>          doSleep = <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (shouldStop()) &#123;<br>          <span class="hljs-keyword">continue</span>;<br>        &#125;<br><span class="hljs-comment">// get packet to be sent.</span><br><span class="hljs-keyword">try</span> &#123;<br>          backOffIfNecessary();<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>LOG.debug(<span class="hljs-string">&quot;Thread interrupted&quot;</span>, e);<br>        &#125;<br>        one = dataQueue.getFirst();<span class="hljs-comment">// regular data packet</span><br>SpanId[] parents = one.getTraceParents();<br>        <span class="hljs-keyword">if</span> (parents.length &gt; <span class="hljs-number">0</span>) &#123;<br>          scope = dfsClient.getTracer().<br>              newScope(<span class="hljs-string">&quot;dataStreamer&quot;</span>, parents[<span class="hljs-number">0</span>]);<br>          scope.getSpan().setParents(parents);<br>        &#125;<br>      &#125;<br><br><span class="hljs-comment">// get new block from namenode.</span><br>LOG.debug(<span class="hljs-string">&quot;stage=&#123;&#125;, &#123;&#125;&quot;</span>, stage, <span class="hljs-built_in">this</span>);<br><br>      <span class="hljs-keyword">if</span> (stage == BlockConstructionStage.PIPELINE_SETUP_CREATE) &#123;<br>LOG.debug(<span class="hljs-string">&quot;Allocating new block: &#123;&#125;&quot;</span>, <span class="hljs-built_in">this</span>);<br>        setPipeline(nextBlockOutputStream());<br>        initDataStreaming();<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (stage == BlockConstructionStage.PIPELINE_SETUP_APPEND) &#123;<br>LOG.debug(<span class="hljs-string">&quot;Append to block &#123;&#125;&quot;</span>, block);<br>        setupPipelineForAppendOrRecovery();<br>        <span class="hljs-keyword">if</span> (streamerClosed) &#123;<br>          <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        initDataStreaming();<br>      &#125;<br><br>      <span class="hljs-type">long</span> <span class="hljs-variable">lastByteOffsetInBlock</span> <span class="hljs-operator">=</span> one.getLastByteOffsetBlock();<br>      <span class="hljs-keyword">if</span> (lastByteOffsetInBlock &gt; stat.getBlockSize()) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IOException</span>(<span class="hljs-string">&quot;BlockSize &quot;</span> + stat.getBlockSize() +<br>            <span class="hljs-string">&quot; &lt; lastByteOffsetInBlock, &quot;</span> + <span class="hljs-built_in">this</span> + <span class="hljs-string">&quot;, &quot;</span> + one);<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (one.isLastPacketInBlock()) &#123;<br><span class="hljs-comment">// wait for all data packets have been successfully acked</span><br>waitForAllAcks();<br>        <span class="hljs-keyword">if</span>(shouldStop()) &#123;<br>          <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        stage = BlockConstructionStage.PIPELINE_CLOSE;<br>      &#125;<br><br><span class="hljs-comment">// send the packet</span><br><span class="hljs-type">SpanId</span> <span class="hljs-variable">spanId</span> <span class="hljs-operator">=</span> SpanId.INVALID;<br>      <span class="hljs-keyword">synchronized</span> (dataQueue) &#123;<br><span class="hljs-comment">// move packet from dataQueue to ackQueue</span><br><span class="hljs-keyword">if</span> (!one.isHeartbeatPacket()) &#123;<br>          <span class="hljs-keyword">if</span> (scope != <span class="hljs-literal">null</span>) &#123;<br>            spanId = scope.getSpanId();<br>            scope.detach();<br>            one.setTraceScope(scope);<br>          &#125;<br>          scope = <span class="hljs-literal">null</span>;<br>          dataQueue.removeFirst();<br>          ackQueue.addLast(one);<br>          packetSendTime.put(one.getSeqno(), Time.monotonicNow());<br>          dataQueue.notifyAll();<br>        &#125;<br>      &#125;<br><br>LOG.debug(<span class="hljs-string">&quot;&#123;&#125; sending &#123;&#125;&quot;</span>, <span class="hljs-built_in">this</span>, one);<br><br><span class="hljs-comment">// write out data to remote datanode</span><br><span class="hljs-keyword">try</span> (<span class="hljs-type">TraceScope</span> <span class="hljs-variable">ignored</span> <span class="hljs-operator">=</span> dfsClient.getTracer().<br>          newScope(<span class="hljs-string">&quot;DataStreamer#writeTo&quot;</span>, spanId)) &#123;<br>        sendPacket(one);<br>      &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br><span class="hljs-comment">// HDFS-3398 treat primary DN is down since client is unable to</span><br>        <span class="hljs-comment">// write to primary DN. If a failed or restarting node has already</span><br>        <span class="hljs-comment">// been recorded by the responder, the following call will have no</span><br>        <span class="hljs-comment">// effect. Pipeline recovery can handle only one node error at a</span><br>        <span class="hljs-comment">// time. If the primary node fails again during the recovery, it</span><br>        <span class="hljs-comment">// will be taken out then.</span><br>errorState.markFirstNodeIfNotMarked();<br>        <span class="hljs-keyword">throw</span> e;<br>      &#125;<br><br><span class="hljs-comment">// update bytesSent</span><br><span class="hljs-type">long</span> <span class="hljs-variable">tmpBytesSent</span> <span class="hljs-operator">=</span> one.getLastByteOffsetBlock();<br>      <span class="hljs-keyword">if</span> (bytesSent &lt; tmpBytesSent) &#123;<br>        bytesSent = tmpBytesSent;<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (shouldStop()) &#123;<br>        <span class="hljs-keyword">continue</span>;<br>      &#125;<br><br><span class="hljs-comment">// Is this block full?</span><br><span class="hljs-keyword">if</span> (one.isLastPacketInBlock()) &#123;<br><span class="hljs-comment">// wait for the close packet has been acked</span><br><span class="hljs-keyword">try</span> &#123;<br>          waitForAllAcks();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException ioe) &#123;<br><span class="hljs-comment">// No need to do a close recovery if the last packet was acked.</span><br>          <span class="hljs-comment">// i.e. ackQueue is empty.  waitForAllAcks() can get an exception</span><br>          <span class="hljs-comment">// (e.g. connection reset) while sending a heartbeat packet,</span><br>          <span class="hljs-comment">// if the DN sends the final ack and closes the connection.</span><br><span class="hljs-keyword">synchronized</span> (dataQueue) &#123;<br>            <span class="hljs-keyword">if</span> (!ackQueue.isEmpty()) &#123;<br>              <span class="hljs-keyword">throw</span> ioe;<br>            &#125;<br>          &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (shouldStop()) &#123;<br>          <span class="hljs-keyword">continue</span>;<br>        &#125;<br><br>        endBlock();<br>      &#125;<br>      <span class="hljs-keyword">if</span> (progress != <span class="hljs-literal">null</span>) &#123; progress.progress(); &#125;<br><br><span class="hljs-comment">// This is used by unit test to trigger race conditions.</span><br><span class="hljs-keyword">if</span> (artificialSlowdown != <span class="hljs-number">0</span> &amp;&amp; dfsClient.clientRunning) &#123;<br>        Thread.sleep(artificialSlowdown);<br>      &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Throwable e) &#123;<br><span class="hljs-comment">// Log warning if there was a real error.</span><br><span class="hljs-keyword">if</span> (!errorState.isRestartingNode()) &#123;<br><span class="hljs-comment">// Since their messages are descriptive enough, do not always</span><br>        <span class="hljs-comment">// log a verbose stack-trace WARN for quota exceptions.</span><br><span class="hljs-keyword">if</span> (e <span class="hljs-keyword">instanceof</span> QuotaExceededException) &#123;<br>LOG.debug(<span class="hljs-string">&quot;DataStreamer Quota Exception&quot;</span>, e);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>LOG.warn(<span class="hljs-string">&quot;DataStreamer Exception&quot;</span>, e);<br>        &#125;<br>      &#125;<br>      lastException.set(e);<br>      <span class="hljs-keyword">assert</span> !(e <span class="hljs-keyword">instanceof</span> NullPointerException);<br>      errorState.setInternalError();<br>      <span class="hljs-keyword">if</span> (!errorState.isNodeMarked()) &#123;<br><span class="hljs-comment">// Not a datanode issue</span><br>streamerClosed = <span class="hljs-literal">true</span>;<br>      &#125;<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>      <span class="hljs-keyword">if</span> (scope != <span class="hljs-literal">null</span>) &#123;<br>        scope.close();<br>        scope = <span class="hljs-literal">null</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  closeInternal();<br>&#125;<br><br></code></pre></td></tr></table></figure><p>org.apache.hadoop.hdfs.DataStreamer#sendPacket</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendPacket</span><span class="hljs-params">(DFSPacket packet)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">// write out data to remote datanode</span><br>    <span class="hljs-keyword">try</span> &#123;<br>      packet.writeTo(blockStream);z<br>      blockStream.flush();<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>      <span class="hljs-comment">// HDFS-3398 treat primary DN is down since client is unable to</span><br>      <span class="hljs-comment">// write to primary DN. If a failed or restarting node has already</span><br>      <span class="hljs-comment">// been recorded by the responder, the following call will have no</span><br>      <span class="hljs-comment">// effect. Pipeline recovery can handle only one node error at a</span><br>      <span class="hljs-comment">// time. If the primary node fails again during the recovery, it</span><br>      <span class="hljs-comment">// will be taken out then.</span><br>      errorState.markFirstNodeIfNotMarked();<br>      <span class="hljs-keyword">throw</span> e;<br>    &#125;<br>    lastPacket = Time.monotonicNow();<br>  &#125;<br></code></pre></td></tr></table></figure><p>大体写流程步骤：</p><ol><li>创建DFSClicent会创建一个<code>DFSOutputStream</code></li><li>创建<code>DFSOutputStream</code>时，<ol><li>创建<code>HdfsFileStatus</code> 文件状态信息</li><li>初始化packetSize(max&#x3D;16M)</li><li>创建一个<code>DataStreamer</code>流进程，用于对数据的排队，上传（），ack等操作。</li></ol></li><li><code>DataStreamer</code> 进程写数据步骤：<ol><li><p><code>setPipeline(nextBlockOutputStream());</code>向NameNode中申请块信息（可用的datanode节点)，即：获取第一个DataNode信息即所存储的块。</p></li><li><p>根据总的文件大小，和设定的packet大小，得到很多歌packet。拆分数据为到不同的packet中</p></li><li><p>将packet放入到queue。</p></li><li><p>执行发送Packet（从queue取出队列中DFSPacket发送到datanode1的block块中。）</p></li><li><p>当块中数据达到阈值（128M)时，关闭块，后续packet重新申请block，重复上述传输步骤。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendPacket</span><span class="hljs-params">(DFSPacket packet)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">// write out data to remote datanode</span><br>    <span class="hljs-keyword">try</span> &#123;<br>      packet.writeTo(blockStream);<br>      blockStream.flush();<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>      <span class="hljs-comment">// HDFS-3398 treat primary DN is down since client is unable to</span><br>      <span class="hljs-comment">// write to primary DN. If a failed or restarting node has already</span><br>      <span class="hljs-comment">// been recorded by the responder, the following call will have no</span><br>      <span class="hljs-comment">// effect. Pipeline recovery can handle only one node error at a</span><br>      <span class="hljs-comment">// time. If the primary node fails again during the recovery, it</span><br>      <span class="hljs-comment">// will be taken out then.</span><br>      errorState.markFirstNodeIfNotMarked();<br>      <span class="hljs-keyword">throw</span> e;<br>    &#125;<br>    lastPacket = Time.monotonicNow();<br>  &#125;<br></code></pre></td></tr></table></figure></li><li><p>副本同步+ack。</p></li></ol><p> <code>FSOutputSummer</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-title function_">write1</span><span class="hljs-params">(<span class="hljs-type">byte</span> b[], <span class="hljs-type">int</span> off, <span class="hljs-type">int</span> len)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-keyword">if</span>(count==<span class="hljs-number">0</span> &amp;&amp; len&gt;=buf.length) &#123;<br>      <span class="hljs-comment">// local buffer is empty and user buffer size &gt;= local buffer size, so</span><br>      <span class="hljs-comment">// simply checksum the user buffer and send it directly to the underlying</span><br>      <span class="hljs-comment">// stream</span><br>      <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">length</span> <span class="hljs-operator">=</span> buf.length;<br>      writeChecksumChunks(b, off, length);<br>      <span class="hljs-keyword">return</span> length;<br>    &#125;<br><br></code></pre></td></tr></table></figure><p> <code>DFSOutputStream</code>.writeChunk()时，将数据封装成packet，放入dataQueue中。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">protected</span> <span class="hljs-keyword">synchronized</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeChunk</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] b, <span class="hljs-type">int</span> offset, <span class="hljs-type">int</span> len,</span><br><span class="hljs-params">      <span class="hljs-type">byte</span>[] checksum, <span class="hljs-type">int</span> ckoff, <span class="hljs-type">int</span> cklen)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    writeChunkPrepare(len, ckoff, cklen);<br><br>    currentPacket.writeChecksum(checksum, ckoff, cklen);<br>    currentPacket.writeData(b, offset, len);<br>    currentPacket.incNumChunks();<br>    getStreamer().incBytesCurBlock(len);<br><br>    <span class="hljs-comment">// If packet is full, enqueue it for transmission</span><br>    <span class="hljs-keyword">if</span> (currentPacket.getNumChunks() == currentPacket.getMaxChunks() ||<br>        getStreamer().getBytesCurBlock() == blockSize) &#123;<br>      enqueueCurrentPacketFull();<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure></li></ol><p><code>new DFSOutputStream().start()</code></p><p>创建流时（<code>DFSOutputStream</code>），同时会启动一个<code>DataStreamer</code>线程 用于发送 packet。</p><p><code>DataStreamer</code>线程 发送的流程：</p><ol><li><p><code>setPipeline(nextBlockOutputStream());</code>（与namenode通信,在namenode中注册块信息和文件信息，返回datanode信息和储存信息）</p><ol><li>从datanode列表中中获取第一个可用的datanode建立<code>Socket</code></li><li>发送请求</li><li>ack确认</li><li>ack确认成功后，返回可用的块和节点信息</li><li>设置可用的节点和块信息。</li></ol></li><li><p><code>initDataStreaming</code> 初始化流，并启动一个ack进程。</p><ol><li><p>初始化*<code>data streaming</code>* ,其中单独有个线程有response来进行ack确认，保证数据传输的完整性。</p><p> <code>new ResponseProcessor(nodes)</code>.start()</p><p> <code>ResponseProcessor</code> extend Thread</p></li></ol></li><li><p>发送packet到datanode的block中，通过流的形式，使用ackqueue进行确认，保证数据完整性。</p><p> <code>dataQueue.removeFirst();</code></p><p> <code>ackQueue.addLast(one);</code></p><p> <code>sendPacket(one);</code></p><p> 将packet移除dataQueue，加入待确认的ackQueue，并发送packet。</p><ol><li>将packet通过流的形式发送到datanode1的block块中，当数据大小达到块大小，则关闭块；</li><li>后续的packet会重新申请block；再往新的block中写入数据。</li></ol></li><li><p>如果发送失败，会进行重试。</p><ol><li>失败重试成功，会去更新NameNode中的块信息</li><li>若是追加块信息，也会重新去更新NameNode中的块信息</li></ol></li><li><p>副本同步；如有hdfs设置副本超过1了，dn1,会向dn2，dn2再向dn3,进行数据同步操作(block级别同步)；此步骤也需要ack确认。</p><p> <code>setupPipelineForAppendOrRecovery</code></p><p> <code>handleDatanodeReplacement()</code></p></li><li><p>等待所有数据发送完成后，且副本同步成功，则视为整个写入流程完成，接着关闭相关资源</p><p> 如果是最后一个packet发送时，尝试等待allAcks确认，如果都成功，则清理资源。</p><p> <code>waitForAllAcks();</code></p><p> 将所有packet发送完成后，等待allAcks确认完成；关闭 发送线程 和 ack确认线程 ，清理queue。</p></li></ol><h1 id="读流程解读："><a href="#读流程解读：" class="headerlink" title="读流程解读："></a>读流程解读：</h1><ol><li><p>获取文件系统</p></li><li><p>打开文件系统时，通过文件路径，定位出文件所有的块信息。</p><p> <code>LocatedBlocks locatedBlocks = getLocatedBlocks(src, 0);</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LocatedBlocks</span> &#123;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> fileLength;<br>  <span class="hljs-comment">// array of blocks with prioritized locations</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> List&lt;LocatedBlock&gt; blocks;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> underConstruction;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> LocatedBlock lastLocatedBlock;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> isLastBlockComplete;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> FileEncryptionInfo fileEncryptionInfo;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> ErasureCodingPolicy ecPolicy;<br>&#125;<br><br>LocatedBlock <br></code></pre></td></tr></table></figure><p> <img src="/img/hadoop/hdfs_block.png" alt="hdfs_block"></p></li><li><p>根据块信息<code>LocatedBlock中的``DatanodeInfo[]返回可用的dataNode节点信息</code></p></li><li><p>通过返回的DataNode节点，建立连接访问块中数据</p><p> <code>DNAddrPair retval = chooseDataNode(targetBlock, null);</code></p></li><li><p>根据块的新的，访问实际数据<code>actualGetFromOneDataNode</code> <code>getBlockReader</code></p></li></ol><h1 id="hadoop-MR流程"><a href="#hadoop-MR流程" class="headerlink" title="hadoop-MR流程"></a>hadoop-MR流程</h1><h2 id="任务提交阶段："><a href="#任务提交阶段：" class="headerlink" title="任务提交阶段："></a>任务提交阶段：</h2><ol><li><p>生成JobID</p></li><li><p>拷贝配置和配置文件到工作目录中。</p></li><li><p>计算分片个数（FileInputFormat中；通过块的个数，默认情况下，等于文件块的个数），分片个数也等于map-task的个数。</p><ol><li><p>org.apache.hadoop.mapreduce.JobSubmitter#submitJobInternal</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-type">long</span> <span class="hljs-title function_">computeSplitSize</span><span class="hljs-params">(<span class="hljs-type">long</span> blockSize, <span class="hljs-type">long</span> minSize,</span><br><span class="hljs-params">                                <span class="hljs-type">long</span> maxSize)</span> &#123;<br>  <span class="hljs-keyword">return</span> Math.max(minSize, Math.min(maxSize, blockSize));<br>&#125;<br></code></pre></td></tr></table></figure></li></ol></li><li><p>客户端端提交Job</p><ol><li>如何提交到yarn，提交到ResourceManger，则会申请一台DataNode节点后启动appMster进程。</li></ol></li></ol><h2 id="MapTask阶段："><a href="#MapTask阶段：" class="headerlink" title="MapTask阶段："></a>MapTask阶段：</h2><p>org.apache.hadoop.mapred.MapTask#runNewMapper</p><p>org.apache.hadoop.mapred.MapTask#getSplitDetails</p><p>org.apache.hadoop.mapred.MapTask#createSortingCollector</p><p><code>job.getClasses(JobContext.*MAP_OUTPUT_COLLECTOR_CLASS_ATTR*, MapOutputBuffer.class);</code></p><p>org.apache.hadoop.mapred.MapTask.MapOutputBuffer#init</p><p>org.apache.hadoop.mapred.MapTask.MapOutputBuffer#flush</p><p>org.apache.hadoop.mapred.MapTask.MapOutputBuffer#sortAndSpill</p><p>org.apache.hadoop.util.IndexedSorter#sort(org.apache.hadoop.util.IndexedSortable, int, int, org.apache.hadoop.util.Progressable)</p><ol><li><p>接收来自InputFormat传递过来的KV值；</p></li><li><p>map方法处理逻辑并写出数据。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">map</span><span class="hljs-params">(KEYIN key, VALUEIN value, </span><br><span class="hljs-params">                     Context context)</span> <span class="hljs-keyword">throws</span> IOException, InterruptedException &#123;<br>    context.write((KEYOUT) key, (VALUEOUT) value);<br>  &#125;<br></code></pre></td></tr></table></figure></li><li><p>MapOutput阶段输出结果到临时文件：Shuffle阶段在MapTask中的部分。</p></li></ol><h2 id="Shuffle-阶段1："><a href="#Shuffle-阶段1：" class="headerlink" title="Shuffle 阶段1："></a>Shuffle 阶段1：</h2><p> org.apache.hadoop.mapred.MapTask.MapOutputBuffer</p><ol><li><p>初始化环形缓冲区。</p></li><li><p>将数据写入环形缓冲区</p></li><li><p>当数据达到缓冲区阈值时，</p></li><li><p>落盘前进行了分区和快排。</p><p> org.apache.hadoop.mapred.MapTask.MapOutputBuffer#compare</p><p> 先排序分区，再通过key排序。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compare</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span class="hljs-type">int</span> mi, <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> mj)</span> &#123;<br>      <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">kvi</span> <span class="hljs-operator">=</span> offsetFor(mi % maxRec);<br>      <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">kvj</span> <span class="hljs-operator">=</span> offsetFor(mj % maxRec);<br>      <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">kvip</span> <span class="hljs-operator">=</span> kvmeta.get(kvi + PARTITION);<br>      <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">kvjp</span> <span class="hljs-operator">=</span> kvmeta.get(kvj + PARTITION);<br>      <span class="hljs-comment">// sort by partition</span><br>      <span class="hljs-keyword">if</span> (kvip != kvjp) &#123;<br>        <span class="hljs-keyword">return</span> kvip - kvjp;<br>      &#125;<br>      <span class="hljs-comment">// sort by key</span><br>      <span class="hljs-keyword">return</span> comparator.compare(kvbuffer,<br>          kvmeta.get(kvi + KEYSTART),<br>          kvmeta.get(kvi + VALSTART) - kvmeta.get(kvi + KEYSTART),<br>          kvbuffer,<br>          kvmeta.get(kvj + KEYSTART),<br>          kvmeta.get(kvj + VALSTART) - kvmeta.get(kvj + KEYSTART));<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>对数据进行溢写到磁盘中。[spillN.out]</p></li></ol><p>至此mapTask阶段完成</p><h2 id="Shuffle阶段2："><a href="#Shuffle阶段2：" class="headerlink" title="Shuffle阶段2："></a>Shuffle阶段2：</h2><p>发生在map之后，</p><p>触发时在reduceTask中，但发生在reduce之前。</p><p>ReduceTask启时，也会启动</p><p>初始化shuffle时做的事情：</p><ol><li>初始化合并管理器<code>MergeManagerImpl</code> 初始化合并管理器后，线程运行，发现有合并的队列就进行合并。 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">org.apache.hadoop.mapreduce.task.reduce.MergeThread#run<br>org.apache.hadoop.mapred.Merger#merge(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.FileSystem, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;, java.util.List&lt;org.apache.hadoop.mapred.Merger.Segment&lt;K,V&gt;&gt;, <span class="hljs-type">int</span>, org.apache.hadoop.fs.Path, org.apache.hadoop.io.RawComparator&lt;K&gt;, org.apache.hadoop.util.Progressable, org.apache.hadoop.mapred.Counters.Counter, org.apache.hadoop.mapred.Counters.Counter, org.apache.hadoop.util.Progress)<br></code></pre></td></tr></table></figure><ol><li><p>其中又初始化了三个类型的合并管理器</p><p> 合并器即：合并（归并）线程，其中维护了一个linkedlist的待合并的队列。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">boolean</span> <span class="hljs-variable">allowMemToMemMerge</span> <span class="hljs-operator">=</span> <br>      jobConf.getBoolean(MRJobConfig.REDUCE_MEMTOMEM_ENABLED, <span class="hljs-literal">false</span>);<br>    <span class="hljs-keyword">if</span> (allowMemToMemMerge) &#123;<br>      <span class="hljs-built_in">this</span>.memToMemMerger = <br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntermediateMemoryToMemoryMerger</span>(<span class="hljs-built_in">this</span>,<br>                                             memToMemMergeOutputsThreshold);<br>      <span class="hljs-built_in">this</span>.memToMemMerger.start();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">this</span>.memToMemMerger = <span class="hljs-literal">null</span>;<br>    &#125;<br>    <br>    <span class="hljs-built_in">this</span>.inMemoryMerger = createInMemoryMerger();<br>    <span class="hljs-built_in">this</span>.inMemoryMerger.start();<br>    <br>    <span class="hljs-built_in">this</span>.onDiskMerger = <span class="hljs-keyword">new</span> <span class="hljs-title class_">OnDiskMerger</span>(<span class="hljs-built_in">this</span>);<br>    <span class="hljs-built_in">this</span>.onDiskMerger.start();<br></code></pre></td></tr></table></figure></li></ol></li></ol><p>步骤：</p><ol><li>接受来自MapOutput阶段输出的值。</li><li>将数据写入到Shuffer的Buffer中</li><li>当数据量达到一定阈值的时候，刷新到磁盘</li><li>Key合并排序[归并排序]刷写到磁盘。</li></ol><p>关键代码 ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java">org.apache.hadoop.mapred.ReduceTask#run<br>shuffleConsumerPlugin.run()<br>org.apache.hadoop.mapreduce.task.reduce.Shuffle#run<br>fetchers[i].start();<br>org.apache.hadoop.mapreduce.task.reduce.Fetcher#run<br><span class="hljs-comment">// shuffle 关键 1.拷贝或下载mapout的结果</span><br>org.apache.hadoop.mapreduce.task.reduce.Fetcher#copyFromHost<br>org.apache.hadoop.mapreduce.task.reduce.Fetcher#<span class="hljs-type">copyMapOutput</span><br><br><span class="hljs-variable">mapOutput</span> <span class="hljs-operator">=</span> merger.reserve(mapId, decompressedLength, id);<br>mapOutPut.doShuffle()<br>org.apache.hadoop.mapreduce.task.reduce.InMemoryMapOutput#doShuffle<br><span class="hljs-comment">//根据分区和key执行归并排序。</span><br>org.apache.hadoop.mapreduce.task.reduce.Shuffle#init<br>org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl#MergeManagerImpl<br><br>org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl.OnDiskMerger#merge<br>org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl.InMemoryMerger#merge<br><span class="hljs-comment">//最后将排序好的数据传递到Reduce</span><br></code></pre></td></tr></table></figure><h2 id="Reduce阶段"><a href="#Reduce阶段" class="headerlink" title="Reduce阶段"></a>Reduce阶段</h2><p>Shuffle完后，启动Reduce</p><p>根据自定义的Reduce函数，执行统计保存到指定的outPut存储中。</p><p>org.apache.hadoop.mapred.ReduceTask#runNewReducer</p><p>org.apache.hadoop.mapreduce.lib.chain.ChainReducer#run</p><p>org.apache.hadoop.mapreduce.lib.chain.Chain#runReducer</p><p>org.apache.hadoop.mapreduce.Reducer#run</p>]]></content>
    
    
    <summary type="html">阅读关于Hadoop中读写流程及Yarn提交任务的相关源码</summary>
    
    
    
    
    <category term="Hadoop" scheme="https://e-miao.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop3的一些重大升级</title>
    <link href="https://e-miao.github.io/hadoop/2022-11-08-Hadoop3%E7%9A%84%E4%B8%80%E4%BA%9B%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/"/>
    <id>https://e-miao.github.io/hadoop/2022-11-08-Hadoop3%E7%9A%84%E4%B8%80%E4%BA%9B%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</id>
    <published>2022-11-08T15:12:09.000Z</published>
    <updated>2022-11-08T15:12:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-HA中NameNode，ResourceManager支持超过2个"><a href="#一-HA中NameNode，ResourceManager支持超过2个" class="headerlink" title="一. HA中NameNode，ResourceManager支持超过2个"></a>一. HA中NameNode，ResourceManager支持超过2个</h1><p>在hadoop3以前 hdfs的HA和yarn的HA中，NN和RM支持两个，存在standby的单节点故障问题。<br>Hadoop3升级后，可以配置超过2个的NN和RM</p><h1 id="二-端口的变化"><a href="#二-端口的变化" class="headerlink" title="二. 端口的变化"></a>二. 端口的变化</h1><p>Namenode ports: 50470 –&gt; 9871, 50070–&gt; 9870, 8020 –&gt; 8020<br>Secondary NN ports: 50091 –&gt; 9869,50090 –&gt; 9868<br>Datanode ports: 50020 –&gt; 9867, 50010–&gt; 9866, 50475 –&gt; 9865, 50075 –&gt; 9864<br>Kms server ports: 16000 –&gt; 9600 (原先的16000与HMaster端口冲突)</p><table><thead><tr><th>端口名称</th><th>Hadoop2.x</th><th>Hadoop3.x</th></tr></thead><tbody><tr><td>NameNode内部通信端口</td><td>8020 &#x2F; 9000</td><td>8020 &#x2F; 9000&#x2F;9820</td></tr><tr><td>NameNode HTTP UI</td><td>50070</td><td>9870</td></tr><tr><td>MapReduce查看执行任务端口</td><td>8088</td><td>8088</td></tr><tr><td>历史服务器通信端口</td><td>19888</td><td>19888</td></tr></tbody></table><h1 id="三-HDFS纠删码"><a href="#三-HDFS纠删码" class="headerlink" title="三. HDFS纠删码"></a>三. HDFS纠删码</h1><p>Erasure coding纠删码技术简称EC，是一种数据保护技术。<br>引入纠删码后，节省了储存空间。以副本为3为例：<br>原来储存利用率为1&#x2F;3,另外两个副本占用2&#x2F;3<br>使用纠删码后，另外副本只需要存储纠删码，占用空间约2&#x2F;3 * 1&#x2F;2 -&gt; 1&#x2F;3<br>与副本相比纠删码是一种更节省空间的数据持久化存储方法。标准编码(比如Reed-Solomon(10,4))会有1.4 倍的空间开销；然而HDFS副本则会有3倍的空间开销。</p><h1 id="四-Shell脚本重写"><a href="#四-Shell脚本重写" class="headerlink" title="四. Shell脚本重写"></a>四. Shell脚本重写</h1><p>最明显的启动hdfs和yarn的进行<br>eg:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">hdfs --daemon start namenode<br>hdfs --daemon start datanode<br>hdfs --daemon start zkfc<br>hdfs --daemon start jouralnode<br><br><span class="hljs-comment"># ------ </span><br>yarn --daemon start resourcemanager<br>yarn --daemon start nodemanager<br></code></pre></td></tr></table></figure><h1 id="五-磁盘平衡"><a href="#五-磁盘平衡" class="headerlink" title="五. 磁盘平衡"></a>五. 磁盘平衡</h1><p>Hadoop2时，数据平衡只能在节点间进行平衡。<br>Hadoop3，datanode节点存储目录可以是多个，且单个DataNode节点的数据磁盘可以进行再平衡。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 默认关闭状态 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.disk.balancer.enable<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hdfs diskbalancer 对磁盘<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Hadoop3中个人认为较为重大的一些升级</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hadoop3.x-HA设置</title>
    <link href="https://e-miao.github.io/hadoop/%202022-11-08-Hadoop3-x-HA%E8%AE%BE%E7%BD%AE/"/>
    <id>https://e-miao.github.io/hadoop/%202022-11-08-Hadoop3-x-HA%E8%AE%BE%E7%BD%AE/</id>
    <published>2022-11-08T14:59:58.000Z</published>
    <updated>2022-11-08T14:59:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hadoop-HA"><a href="#Hadoop-HA" class="headerlink" title="Hadoop-HA"></a>Hadoop-HA</h1><h1 id="HDFS-NameNode-HA"><a href="#HDFS-NameNode-HA" class="headerlink" title="HDFS-NameNode-HA"></a>HDFS-NameNode-HA</h1><ol><li>依赖Zookeeper</li><li>每个nn会有一个ZKFC进程进行管理状态。</li><li>hadoop3.x可以启动N≥2个NN,可以超过2个，3个等。</li><li>Hadoop2.x及一下，只能启动两个NN作高可用。</li><li>NN做HA时，不在有2NN,由其他standby的NN同步active的NN的元数据信息(fsimage,edits)，替代2NN。<br> JournalNode负责edits文件的一致性。<ol><li>Fsimage：让一台NN生成数据，其他NN同步</li><li>Edits：引进新的模块JournalNode保证edits的文件数据一致性。</li><li>HA环境下 定期合并fsimage和edits由standby的NN完成。</li></ol></li></ol><h2 id="NameNode从standby切换到active过程。"><a href="#NameNode从standby切换到active过程。" class="headerlink" title="NameNode从standby切换到active过程。"></a>NameNode从standby切换到active过程。</h2><ol><li>原有active-nn与zk通信失败或死掉</li><li>standby上的nn的<strong>ZKFC</strong>发送进程kill旧的nn,防止原来的active-nn假死。</li><li>也可通过自定义脚本去杀死原有的nn再次确保原来nn死掉。</li><li>standby-nn在确保上述的步骤ok后，从standby切换为active。完成切换。</li></ol><h1 id="Yarn-ResourceManager-HA"><a href="#Yarn-ResourceManager-HA" class="headerlink" title="Yarn-ResourceManager-HA"></a>Yarn-ResourceManager-HA</h1><ol><li>依赖zookeeper</li><li>hadoop3.x可以有用2个以上(3,4个等）的RM</li><li>hadoop2.x只能有两个RM</li></ol><p>RM由备用切换到active过程。</p><p>通过注册到zk中的节点数，采取<strong>抢占式</strong>的方式获取节点进行切换。</p><ol><li>启动时，谁先对zk中的目录节点进行注册，谁就是active节点。</li><li>当原有active节点死掉，其余备用节点采取抢占式的方式对zk的rm的数据目录进行抢占式注册；谁先成功，谁就被激活为active</li><li>如果yarn有正在进行运行的任务，新切换的active节点将继续对其支持；任务任务运行时所存储的数据均在zk中。</li></ol><h1 id="HA配置文件"><a href="#HA配置文件" class="headerlink" title="HA配置文件"></a>HA配置文件</h1><h2 id="HDFS-HA"><a href="#HDFS-HA" class="headerlink" title="HDFS-HA"></a>HDFS-HA</h2><p>core-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;?xml-stylesheet type=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment">  you may not use this file except in compliance with the License.</span><br><span class="hljs-comment">  You may obtain a copy of the License at</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">  See the License for the specific language governing permissions and</span><br><span class="hljs-comment">  limitations under the License. See accompanying LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><br><span class="hljs-comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 把多个 NameNode 的地址组装成一个集群 mycluster --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://hacluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 hadoop 运行时产生文件的存储目录 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/opt/ha/hadoop-3.3.0/data<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 指定 zkfc 要连接的 zkServer 地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>ha.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:2181,hd002:2181,hd003:2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>hfds-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;?xml-stylesheet type=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment">  you may not use this file except in compliance with the License.</span><br><span class="hljs-comment">  You may obtain a copy of the License at</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">  See the License for the specific language governing permissions and</span><br><span class="hljs-comment">  limitations under the License. See accompanying LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><br><span class="hljs-comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-comment">&lt;!-- NameNode 数据存储目录 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.name.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>file://$&#123;hadoop.tmp.dir&#125;/name<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- DataNode 数据存储目录 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.datanode.data.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>file://$&#123;hadoop.tmp.dir&#125;/data<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- JournalNode 数据存储目录 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>$&#123;hadoop.tmp.dir&#125;/jn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 完全分布式集群名称 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.nameservices<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hacluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 集群中 NameNode 节点都有哪些 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.namenodes.hacluster<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>nn1,nn2,nn3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- NameNode 的 RPC 通信地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.hacluster.nn1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.hacluster.nn2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.hacluster.nn3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- NameNode 的 http 通信地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.hacluster.nn1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:9870<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.hacluster.nn2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002:9870<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.hacluster.nn3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003:9870<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 NameNode 元数据在 JournalNode 上的存放位置 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>qjournal://hd001:8485;hd002:8485;hd003:8485/hacluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 访问代理类：client 用于确定哪个 NameNode 为 Active --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.client.failover.proxy.provider.hacluster<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 配置隔离机制，即同一时刻只能有一台服务器对外响应 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>sshfence<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 使用隔离机制时需要 ssh 秘钥登录--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/miao/.ssh/id_rsa<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 启用 nn 故障自动转移 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Yarn-HA"><a href="#Yarn-HA" class="headerlink" title="Yarn-HA"></a>Yarn-HA</h2><p>  yarn-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="hljs-comment">  you may not use this file except in compliance with the License.</span><br><span class="hljs-comment">  You may obtain a copy of the License at</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">  See the License for the specific language governing permissions and</span><br><span class="hljs-comment">  limitations under the License. See accompanying LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-comment">&lt;!-- Site specific YARN configuration properties --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 启用 resourcemanager ha --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 声明3台 resourcemanager 的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster-yarn1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--指定 resourcemanager 的逻辑列表--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>rm1,rm2,rm3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ========== rm1 的配置 ========== --&gt;</span><br><span class="hljs-comment">&lt;!-- 指定 rm1 的主机名 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 指定 rm1 的 web 端地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:8088<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 指定 rm1 的内部通信地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.address.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:8032<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 指定 AM 向 rm1 申请资源的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:8030<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定供 NM 连接的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:8031<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- ========== rm2 的配置 ========== --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 rm2 的主机名 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002:8088<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.address.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002:8032<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002:8030<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd002:8031<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- ========== rm3 的配置 ========== --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 rm1 的主机名 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 rm1 的 web 端地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003:8088<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 rm1 的内部通信地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.address.rm3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003:8032<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 AM 向 rm1 申请资源的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003:8030<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定供 NM 连接的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm3<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd003:8031<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 zookeeper 集群的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hd001:2181,hd002:2181,hd003:2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 启用自动恢复 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.recovery.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 指定 resourcemanager 的状态信息存储在 zookeeper 集群 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.store.class<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 环境变量的继承 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.env-whitelist<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLAS SPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="新增节点-DataNode-NodeManager"><a href="#新增节点-DataNode-NodeManager" class="headerlink" title="新增节点(DataNode,NodeManager)"></a>新增节点(DataNode,NodeManager)</h1><p>新增节点， copy NameNode的hadoop目录，与其保持一致，<strong>删除data目录数据，及logs目录的日志。</strong></p><p>添加新节点的hostname到workers中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">/opt/ha/hadoop-3.3.0/etc/hadoop/workers<br>miao@hd001:/opt/ha/hadoop-3.3.0/etc/hadoop$ <span class="hljs-built_in">cat</span> workers<br>hd001<br>hd002<br>hd003<br>hd004<br></code></pre></td></tr></table></figure><p>添加完works同步works文件，并将hosts文件也添加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">miao@hd001:/opt/ha/hadoop-3.3.0/etc/hadoop$ <span class="hljs-built_in">cat</span> /etc/hosts<br>127.0.0.1 localhost<br>127.0.1.1 hd<br><br><span class="hljs-comment"># The following lines are desirable for IPv6 capable hosts</span><br>::1     ip6-localhost ip6-loopback<br>fe00::0 ip6-localnet<br>ff00::0 ip6-mcastprefix<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters<br><br>192.168.64.51 hd001<br>192.168.64.52 hd002<br>192.168.64.53 hd003<br>192.168.64.54 hd004<br></code></pre></td></tr></table></figure><p>同步works文件和hosts文件到其他节点。</p><p><strong>NameNode节点和ResourceManager不用重启</strong>。</p><p>在<strong>新节点上启动DataNode</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hdfs --daemon start datanode<br><span class="hljs-comment">#刷新节点信息</span><br>hfds dfsadmin -refreshNodes<br></code></pre></td></tr></table></figure><p>在<strong>新节点启动nodemanager</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn --daemon start nodemanager<br></code></pre></td></tr></table></figure><h1 id="HA自动不能自动切换"><a href="#HA自动不能自动切换" class="headerlink" title="HA自动不能自动切换"></a>HA自动不能自动切换</h1><h2 id="错误现象1"><a href="#错误现象1" class="headerlink" title="错误现象1"></a>错误现象1</h2><p> invalid privatekey</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">481</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: ====== <span class="hljs-symbol">Beginning</span> <span class="hljs-symbol">Service</span> <span class="hljs-symbol">Fencing</span> <span class="hljs-symbol">Process</span>... ======<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">481</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: <span class="hljs-symbol">Trying</span> method <span class="hljs-number">1</span>/<span class="hljs-number">2</span>: org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>(miao:<span class="hljs-number">22</span>)<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">485</span> <span class="hljs-symbol">WARN</span> org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>: <span class="hljs-symbol">Unable</span> to create <span class="hljs-symbol">SSH</span> session<br>com.jcraft.jsch.<span class="hljs-symbol">JSchException</span>: invalid privatekey: [<span class="hljs-symbol">B</span>@<span class="hljs-number">1</span>b7652da<br>        at com.jcraft.jsch.<span class="hljs-symbol">KeyPair</span>.load(<span class="hljs-symbol">KeyPair</span>.java:<span class="hljs-number">664</span>)<br>        at com.jcraft.jsch.<span class="hljs-symbol">KeyPair</span>.load(<span class="hljs-symbol">KeyPair</span>.java:<span class="hljs-number">561</span>)<br>        at com.jcraft.jsch.<span class="hljs-symbol">IdentityFile</span>.newInstance(<span class="hljs-symbol">IdentityFile</span>.java:<span class="hljs-number">40</span>)<br>        at com.jcraft.jsch.<span class="hljs-symbol">JSch</span>.addIdentity(<span class="hljs-symbol">JSch</span>.java:<span class="hljs-number">406</span>)<br>        at com.jcraft.jsch.<span class="hljs-symbol">JSch</span>.addIdentity(<span class="hljs-symbol">JSch</span>.java:<span class="hljs-number">366</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>.createSession(<span class="hljs-symbol">SshFenceByTcpPort</span>.java:<span class="hljs-number">121</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>.tryFence(<span class="hljs-symbol">SshFenceByTcpPort</span>.java:<span class="hljs-number">90</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>.fence(<span class="hljs-symbol">NodeFencer</span>.java:<span class="hljs-number">98</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.doFence(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">542</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.fenceOldActive(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">515</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.access$<span class="hljs-number">1100</span>(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">60</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>$<span class="hljs-symbol">ElectorCallbacks</span>.fenceOldActive(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">951</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.fenceOldActive(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">997</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.becomeActive(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">896</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.processResult(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">476</span>)<br>        at org.apache.zookeeper.<span class="hljs-symbol">ClientCnxn</span>$<span class="hljs-symbol">EventThread</span>.processEvent(<span class="hljs-symbol">ClientCnxn</span>.java:<span class="hljs-number">636</span>)<br>        at org.apache.zookeeper.<span class="hljs-symbol">ClientCnxn</span>$<span class="hljs-symbol">EventThread</span>.run(<span class="hljs-symbol">ClientCnxn</span>.java:<span class="hljs-number">510</span>)<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">485</span> <span class="hljs-symbol">WARN</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: <span class="hljs-symbol">Fencing</span> method org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>(miao:<span class="hljs-number">22</span>) was unsuccessful.<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">485</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: <span class="hljs-symbol">Trying</span> method <span class="hljs-number">2</span>/<span class="hljs-number">2</span>: org.apache.hadoop.ha.<span class="hljs-symbol">ShellCommandFencer</span>(/bin/true)<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">491</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">ShellCommandFencer</span>: <span class="hljs-symbol">Launched</span> fencing command <span class="hljs-string">&#x27;/bin/true&#x27;</span> with pid <span class="hljs-number">24463</span><br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">499</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: ====== <span class="hljs-symbol">Fencing</span> successful by method org.apache.hadoop.ha.<span class="hljs-symbol">ShellCommandFencer</span>(/bin/true) ======<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">499</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>: <span class="hljs-symbol">Writing</span> znode /hadoop-ha/hacluster/<span class="hljs-symbol">ActiveBreadCrumb</span> to indicate that the local node is the most recent active...<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">503</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>: <span class="hljs-symbol">Trying</span> to make <span class="hljs-symbol">NameNode</span> at hd003/<span class="hljs-number">192.168</span><span class="hljs-number">.64</span><span class="hljs-number">.53</span>:<span class="hljs-number">8020</span> active...<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">04</span>:<span class="hljs-number">14</span>:<span class="hljs-number">01</span>,<span class="hljs-number">692</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>: <span class="hljs-symbol">Successfully</span> transitioned <span class="hljs-symbol">NameNode</span> at hd003/<span class="hljs-number">192.168</span><span class="hljs-number">.64</span><span class="hljs-number">.53</span>:<span class="hljs-number">8020</span> to active state<br></code></pre></td></tr></table></figure><h2 id="错误现象2"><a href="#错误现象2" class="headerlink" title="错误现象2"></a>错误现象2</h2><p>Auth fail</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">02</span>:<span class="hljs-number">52</span>:<span class="hljs-number">38</span>,<span class="hljs-number">916</span> <span class="hljs-symbol">INFO</span> org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>.jsch: <span class="hljs-symbol">Disconnecting</span> from hd003 port <span class="hljs-number">22</span><br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">02</span>:<span class="hljs-number">52</span>:<span class="hljs-number">38</span>,<span class="hljs-number">917</span> <span class="hljs-symbol">WARN</span> org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>: <span class="hljs-symbol">Unable</span> to connect to hd003 as user miao<br>com.jcraft.jsch.<span class="hljs-symbol">JSchException</span>: <span class="hljs-symbol">Auth</span> fail<br>        at com.jcraft.jsch.<span class="hljs-symbol">Session</span>.connect(<span class="hljs-symbol">Session</span>.java:<span class="hljs-number">519</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>.tryFence(<span class="hljs-symbol">SshFenceByTcpPort</span>.java:<span class="hljs-number">99</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>.fence(<span class="hljs-symbol">NodeFencer</span>.java:<span class="hljs-number">98</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.doFence(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">542</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.fenceOldActive(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">515</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.access$<span class="hljs-number">1100</span>(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">60</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>$<span class="hljs-symbol">ElectorCallbacks</span>.fenceOldActive(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">951</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.fenceOldActive(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">997</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.becomeActive(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">896</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.processResult(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">476</span>)<br>        at org.apache.zookeeper.<span class="hljs-symbol">ClientCnxn</span>$<span class="hljs-symbol">EventThread</span>.processEvent(<span class="hljs-symbol">ClientCnxn</span>.java:<span class="hljs-number">636</span>)<br>        at org.apache.zookeeper.<span class="hljs-symbol">ClientCnxn</span>$<span class="hljs-symbol">EventThread</span>.run(<span class="hljs-symbol">ClientCnxn</span>.java:<span class="hljs-number">510</span>)<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">02</span>:<span class="hljs-number">52</span>:<span class="hljs-number">38</span>,<span class="hljs-number">917</span> <span class="hljs-symbol">WARN</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: <span class="hljs-symbol">Fencing</span> method org.apache.hadoop.ha.<span class="hljs-symbol">SshFenceByTcpPort</span>(null) was unsuccessful.<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">02</span>:<span class="hljs-number">52</span>:<span class="hljs-number">38</span>,<span class="hljs-number">917</span> <span class="hljs-symbol">ERROR</span> org.apache.hadoop.ha.<span class="hljs-symbol">NodeFencer</span>: <span class="hljs-symbol">Unable</span> to fence service by any configured method.<br><span class="hljs-number">2022</span><span class="hljs-number">-11</span><span class="hljs-number">-08</span> <span class="hljs-number">02</span>:<span class="hljs-number">52</span>:<span class="hljs-number">38</span>,<span class="hljs-number">917</span> <span class="hljs-symbol">WARN</span> org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>: <span class="hljs-symbol">Exception</span> handling the winning of election<br>java.lang.<span class="hljs-symbol">RuntimeException</span>: <span class="hljs-symbol">Unable</span> to fence <span class="hljs-symbol">NameNode</span> at hd003/<span class="hljs-number">192.168</span><span class="hljs-number">.64</span><span class="hljs-number">.53</span>:<span class="hljs-number">8020</span><br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.doFence(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">543</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.fenceOldActive(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">515</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>.access$<span class="hljs-number">1100</span>(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">60</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ZKFailoverController</span>$<span class="hljs-symbol">ElectorCallbacks</span>.fenceOldActive(<span class="hljs-symbol">ZKFailoverController</span>.java:<span class="hljs-number">951</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.fenceOldActive(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">997</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.becomeActive(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">896</span>)<br>        at org.apache.hadoop.ha.<span class="hljs-symbol">ActiveStandbyElector</span>.processResult(<span class="hljs-symbol">ActiveStandbyElector</span>.java:<span class="hljs-number">476</span>)<br>        at org.apache.zookeeper.<span class="hljs-symbol">ClientCnxn</span>$<span class="hljs-symbol">EventThread</span>.processEvent(<span class="hljs-symbol">ClientCnxn</span>.java:<span class="hljs-number">636</span>)<br>        at org.apache.zookeeper.<span class="hljs-symbol">ClientCnxn</span>$<span class="hljs-symbol">EventThread</span>.run(<span class="hljs-symbol">ClientCnxn</span>.java:<span class="hljs-number">510</span>)<br></code></pre></td></tr></table></figure><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>步骤：</p><ol><li>确保所有的NameNode节点间可以互相免密登录</li><li>配置ha-fencing规则为多个，防止其中一个失效 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span><br>          sshfence<br>          shell(/bin/true)<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure> 在本次的日志异常中，发现sshfence出现错误，提示 invalid privatekey，使用方式2shell切换成功。（shell(&#x2F;bin&#x2F;true)）<ol><li>或使用自定义脚本，对失效的namenode节点的namenode进程手动kill 配置指定shell脚本路径， <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!-- 配置隔离机制，即同一时刻只能有一台服务器对外响应 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;<br>        &lt;value&gt;<br>          sshfence(miao:22)<br>          &lt;!-- shell(/bin/true) --&gt;<br>          shell(/opt/ha/hadoop-3.3.0/etc/hadoop/fence_script.sh --nameservice=<span class="hljs-variable">$target_nameserviceid</span> <span class="hljs-variable">$target_host</span> <span class="hljs-variable">$target_port</span>)<br>        &lt;/value&gt;<br>    &lt;/property&gt;<br></code></pre></td></tr></table></figure> 编写shell脚本，保存到指定路径， 增加运行权限： <strong>chmod +x fence_script.sh</strong> <strong>并分发到各namenode节点,</strong> fence_script.sh <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----------fench----------&quot;</span><br>args=$*<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$args</span>&quot;</span><br>namespace=<span class="hljs-variable">$1</span><br>target_host=<span class="hljs-variable">$2</span><br>target_port=<span class="hljs-variable">$3</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;target_host=[<span class="hljs-variable">$&#123;target_host&#125;</span>] target_port=[<span class="hljs-variable">$&#123;target_port&#125;</span>] &quot;</span><br>nc -z <span class="hljs-variable">$target_host</span> <span class="hljs-variable">$target_port</span><br><br><span class="hljs-keyword">if</span> [[ $? == 0 ]];<span class="hljs-keyword">then</span><br>    nn_pid=`ssh <span class="hljs-variable">$&#123;target_host&#125;</span> lsof -i:8020 |grep LISTEN |awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>` <br>    ssh <span class="hljs-variable">$target_host</span> <span class="hljs-string">&quot;kill -9 <span class="hljs-variable">$&#123;nn_pid&#125;</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----------fench-end----------&quot;</span><br></code></pre></td></tr></table></figure></li></ol></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>Hadoop官网配置说明[<strong>dfs.ha.fencing.methods</strong>]：<a href="https://hadoop.apache.org/docs/r3.2.0/hadoop-project-dist/hadoop-hdfs/HDFSHighAvailabilityWithNFS.html">https://hadoop.apache.org/docs/r3.2.0/hadoop-project-dist/hadoop-hdfs/HDFSHighAvailabilityWithNFS.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hadoop-HA&quot;&gt;&lt;a href=&quot;#Hadoop-HA&quot; class=&quot;headerlink&quot; title=&quot;Hadoop-HA&quot;&gt;&lt;/a&gt;Hadoop-HA&lt;/h1&gt;&lt;h1 id=&quot;HDFS-NameNode-HA&quot;&gt;&lt;a href=&quot;#HDFS-Name</summary>
      
    
    
    
    <category term="Hadoop" scheme="https://e-miao.github.io/categories/Hadoop/"/>
    
    
    <category term="Hadoop" scheme="https://e-miao.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Java_JUC</title>
    <link href="https://e-miao.github.io/java/java-juc%E5%A4%8D%E4%B9%A0/"/>
    <id>https://e-miao.github.io/java/java-juc%E5%A4%8D%E4%B9%A0/</id>
    <published>2022-10-26T02:49:33.000Z</published>
    <updated>2022-10-26T02:49:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-JUC"><a href="#Java-JUC" class="headerlink" title="Java-JUC"></a>Java-JUC</h1><h1 id="JUC简介"><a href="#JUC简介" class="headerlink" title="JUC简介"></a>JUC简介</h1><p>java.util.concurrent</p><p>java并发编程，提高程序运行效率。</p><p>充分提供cpu多核。提高吞吐量。</p><p>问题：</p><ol><li>线程安全问题</li><li>线程锁问题</li><li>线程性能问题</li></ol><h1 id="2-线程"><a href="#2-线程" class="headerlink" title="2.线程"></a>2.线程</h1><ul><li>用户线程（User Thread）一般情况new Thread都是用户线程</li><li>守护线程 (Daemon Thread)<ul><li>一种特殊的线程，在后台默默的完成系统性的工作，比如垃圾回收线程</li><li>守护线程作为一个服务线程，当服务对象没有了就没必须继续运行，就自动结束了。</li></ul></li></ul><h1 id="3-CompletableFuture"><a href="#3-CompletableFuture" class="headerlink" title="3. CompletableFuture"></a>3. CompletableFuture</h1><p>异步执行任务</p><ol><li>Runnable</li><li>Callable 有返回</li><li>Future→FutureTask <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Creates a &#123;<span class="hljs-doctag">@code</span> FutureTask&#125; that will, upon running, execute the</span><br><span class="hljs-comment">     * given &#123;<span class="hljs-doctag">@code</span> Callable&#125;.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>  callable the callable task</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> NullPointerException if the callable is null</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FutureTask</span><span class="hljs-params">(Callable&lt;V&gt; callable)</span> &#123;<br>        <span class="hljs-keyword">if</span> (callable == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">NullPointerException</span>();<br>        <span class="hljs-built_in">this</span>.callable = callable;<br>        <span class="hljs-built_in">this</span>.state = NEW;       <span class="hljs-comment">// ensure visibility of callable</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Creates a &#123;<span class="hljs-doctag">@code</span> FutureTask&#125; that will, upon running, execute the</span><br><span class="hljs-comment">     * given &#123;<span class="hljs-doctag">@code</span> Runnable&#125;, and arrange that &#123;<span class="hljs-doctag">@code</span> get&#125; will return the</span><br><span class="hljs-comment">     * given result on successful completion.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> runnable the runnable task</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> result the result to return on successful completion. If</span><br><span class="hljs-comment">     * you don&#x27;t need a particular result, consider using</span><br><span class="hljs-comment">     * constructions of the form:</span><br><span class="hljs-comment">     * &#123;<span class="hljs-doctag">@code</span> Future&lt;?&gt; f = new FutureTask&lt;Void&gt;(runnable, null)&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> NullPointerException if the runnable is null</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FutureTask</span><span class="hljs-params">(Runnable runnable, V result)</span> &#123;<br>        <span class="hljs-built_in">this</span>.callable = Executors.callable(runnable, result);<br>        <span class="hljs-built_in">this</span>.state = NEW;       <span class="hljs-comment">// ensure visibility of callable</span><br>    &#125;<br></code></pre></td></tr></table></figure> 痛点：<ol><li>Thread</li></ol> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Allocates a new &#123;<span class="hljs-doctag">@code</span> Thread&#125; object. This constructor has the same</span><br><span class="hljs-comment">     * effect as &#123;<span class="hljs-doctag">@linkplain</span> #Thread(ThreadGroup,Runnable,String) Thread&#125;</span><br><span class="hljs-comment">     * &#123;<span class="hljs-doctag">@code</span> (null, target, name)&#125;.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>  target</span><br><span class="hljs-comment">     *         the object whose &#123;<span class="hljs-doctag">@code</span> run&#125; method is invoked when this thread</span><br><span class="hljs-comment">     *         is started. If &#123;<span class="hljs-doctag">@code</span> null&#125;, this thread&#x27;s run method is invoked.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>  name</span><br><span class="hljs-comment">     *         the name of the new thread</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Thread</span><span class="hljs-params">(Runnable target, String name)</span> &#123;<br>        init(<span class="hljs-literal">null</span>, target, name, <span class="hljs-number">0</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><ol><li><p>多线程，又返回，异步任务</p><ol><li>FutureTask构造注入，实现了多线程，异步，又返回</li></ol><p> <img src="/img/Java-JUC-IMGS/Untitled.png" alt="Untitled"></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FutureTask</span>&lt;V&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">RunnableFuture</span>&lt;V&gt;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Creates a &#123;<span class="hljs-doctag">@code</span> FutureTask&#125; that will, upon running, execute the</span><br><span class="hljs-comment">     * given &#123;<span class="hljs-doctag">@code</span> Callable&#125;.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span>  callable the callable task</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> NullPointerException if the callable is null</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FutureTask</span><span class="hljs-params">(Callable&lt;V&gt; callable)</span> &#123;<br>        <span class="hljs-keyword">if</span> (callable == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">NullPointerException</span>();<br>        <span class="hljs-built_in">this</span>.callable = callable;<br>        <span class="hljs-built_in">this</span>.state = NEW;       <span class="hljs-comment">// ensure visibility of callable</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Creates a &#123;<span class="hljs-doctag">@code</span> FutureTask&#125; that will, upon running, execute the</span><br><span class="hljs-comment">     * given &#123;<span class="hljs-doctag">@code</span> Runnable&#125;, and arrange that &#123;<span class="hljs-doctag">@code</span> get&#125; will return the</span><br><span class="hljs-comment">     * given result on successful completion.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> runnable the runnable task</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> result the result to return on successful completion. If</span><br><span class="hljs-comment">     * you don&#x27;t need a particular result, consider using</span><br><span class="hljs-comment">     * constructions of the form:</span><br><span class="hljs-comment">     * &#123;<span class="hljs-doctag">@code</span> Future&lt;?&gt; f = new FutureTask&lt;Void&gt;(runnable, null)&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> NullPointerException if the runnable is null</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FutureTask</span><span class="hljs-params">(Runnable runnable, V result)</span> &#123;<br>        <span class="hljs-built_in">this</span>.callable = Executors.callable(runnable, result);<br>        <span class="hljs-built_in">this</span>.state = NEW;       <span class="hljs-comment">// ensure visibility of callable</span><br>    &#125;<br></code></pre></td></tr></table></figure></li></ol><p> FutureTask优点：</p><p> 同时满足Runnable和Callable使用特点，配合线程池，提高程序效率。</p><p> 缺点：</p><ol><li><p>get():容易造成阻塞</p></li><li><p>isDone轮询: 耗费CPU资源</p></li><li><p><strong>Future→FutureTask → CompletableFuture</strong></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CompletableFuture</span>&lt;T&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Future</span>&lt;T&gt;, CompletionStage&lt;T&gt; <br></code></pre></td></tr></table></figure></li></ol><p> 函数式编程：</p><p> <img src="/img/Java-JUC-IMGS/Untitled%201.png" alt="Untitled"></p><ol><li>CompletableFuture为何出现<ol><li>提供了一种观察者模式类似的机制，可以让任务执行完成后通知监听的一方。</li><li>对异步线程，想要获取结果，改进了FutureTask get阻塞获取结果的方式。</li></ol></li></ol><p> 实现代码：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CompletableFuture</span>&lt;T&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Future</span>&lt;T&gt;, CompletionStage&lt;T&gt; &#123;<br></code></pre></td></tr></table></figure><p> <img src="/img/Java-JUC-IMGS/Untitled%202.png" alt="Untitled"></p><p> CompletionStage 是什么</p><p> <img src="/img/Java-JUC-IMGS/Untitled%203.png" alt="Untitled"></p><ol><li><p>CompletableFuture核心四个静态方法创建异步任务</p><ol><li><p>无返回值，两组：CompletableFuture.runAsync()</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Returns a new CompletableFuture that is asynchronously completed</span><br><span class="hljs-comment">     * by a task running in the &#123;<span class="hljs-doctag">@link</span> ForkJoinPool#commonPool()&#125; after</span><br><span class="hljs-comment">     * it runs the given action.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> runnable the action to run before completing the</span><br><span class="hljs-comment">     * returned CompletableFuture</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> the new CompletableFuture</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> CompletableFuture&lt;Void&gt; <span class="hljs-title function_">runAsync</span><span class="hljs-params">(Runnable runnable)</span> &#123;<br>        <span class="hljs-keyword">return</span> asyncRunStage(asyncPool, runnable);<br>    &#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Returns a new CompletableFuture that is asynchronously completed</span><br><span class="hljs-comment">     * by a task running in the given executor after it runs the given</span><br><span class="hljs-comment">     * action.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> runnable the action to run before completing the</span><br><span class="hljs-comment">     * returned CompletableFuture</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> executor the executor to use for asynchronous execution</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> the new CompletableFuture</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> CompletableFuture&lt;Void&gt; <span class="hljs-title function_">runAsync</span><span class="hljs-params">(Runnable runnable,</span><br><span class="hljs-params">                                                   Executor executor)</span> &#123;<br>        <span class="hljs-keyword">return</span> asyncRunStage(screenExecutor(executor), runnable);<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>有返回值，两组：CompletableFuture.supplyAsync()</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Returns a new CompletableFuture that is asynchronously completed</span><br><span class="hljs-comment">     * by a task running in the &#123;<span class="hljs-doctag">@link</span> ForkJoinPool#commonPool()&#125; with</span><br><span class="hljs-comment">     * the value obtained by calling the given Supplier.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> supplier a function returning the value to be used</span><br><span class="hljs-comment">     * to complete the returned CompletableFuture</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;U&gt; the function&#x27;s return type</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> the new CompletableFuture</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class="hljs-title function_">supplyAsync</span><span class="hljs-params">(Supplier&lt;U&gt; supplier)</span> &#123;<br>        <span class="hljs-keyword">return</span> asyncSupplyStage(asyncPool, supplier);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Returns a new CompletableFuture that is asynchronously completed</span><br><span class="hljs-comment">     * by a task running in the given executor with the value obtained</span><br><span class="hljs-comment">     * by calling the given Supplier.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> supplier a function returning the value to be used</span><br><span class="hljs-comment">     * to complete the returned CompletableFuture</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> executor the executor to use for asynchronous execution</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;U&gt; the function&#x27;s return type</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> the new CompletableFuture</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class="hljs-title function_">supplyAsync</span><span class="hljs-params">(Supplier&lt;U&gt; supplier,</span><br><span class="hljs-params">                                                       Executor executor)</span> &#123;<br>        <span class="hljs-keyword">return</span> asyncSupplyStage(screenExecutor(executor), supplier);<br>    &#125;<br></code></pre></td></tr></table></figure><p> 不指定线程池，默认使用ForkJoinPool.commonPool（守护线程池）</p></li></ol><p> CompletableFuture有点：</p><ol><li>异步任务结束是，会自动回调某个对象方法（相对FutureTask减少了阻塞和轮询查询结果）。</li><li>主线程设置好回调后，不再关心异步任务执行，异步任务之间可以顺序执行。 </li><li>异步任务执行出错是，会自动回调某个对象的方法。</li></ol><p>  join和get方法获取返回值区别：</p><ol><li>get() 编译时会做异常检查让代码抛出异常</li><li>join() 编译时不做检测。两者作用一样。</li></ol></li></ol><h1 id="4-Java-”锁“"><a href="#4-Java-”锁“" class="headerlink" title="4. Java ”锁“"></a>4. Java ”锁“</h1><p> 这里先说一些理论信息；后续有更具体的讲解。</p><h1 id="5-LockSupport和线程中断"><a href="#5-LockSupport和线程中断" class="headerlink" title="5. LockSupport和线程中断"></a>5. LockSupport和线程中断</h1><h2 id="线程中断的三种方法：-多线程之间协同时，中断另外的线程）"><a href="#线程中断的三种方法：-多线程之间协同时，中断另外的线程）" class="headerlink" title="线程中断的三种方法：(多线程之间协同时，中断另外的线程）"></a>线程中断的三种方法：(多线程之间协同时，中断另外的线程）</h2><hr><ol><li>使用volatile实现中断</li><li>使用atomicBoolean</li><li>使用Thread.interrupt</li></ol><p> Thread-interrupt 源码详解：3个方法：</p><ol><li><p>interrupt() &#x2F;&#x2F; </p><p> 1.1 线程处于正常状态：将中断标志位 设置为true，线程不受影响（不会立刻停止），需要线程配合才能中断线程。（不活动的线程，不会产生任何影响）</p><p> 1.2 如果线程处于阻塞状态（wait，join ,sleep中断状态将被清除) 调用interrupt()，线程会退出阻塞状态，并抛出interruptedException </p></li><li><p>isInterrupted() &#x2F;&#x2F;判断此线程是否被中断</p></li><li><p>静态方法：  static<code>interrupted()//返回当前线程中断标志位，并将中断标志位清除，重新置为false</code></p></li></ol></li></ol><h2 id="LockSupport-线程等待唤醒机制"><a href="#LockSupport-线程等待唤醒机制" class="headerlink" title="LockSupport(线程等待唤醒机制)"></a>LockSupport(线程等待唤醒机制)</h2><h3 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h3><p>用于创建锁和其他同步类的的基本线程阻塞原语 </p><p>LockSupport中的park(),unpark()的作用分别是阻塞线程和解除阻塞线程  </p><p>线程阻塞的工具类。</p><h3 id="线程等待唤醒方法"><a href="#线程等待唤醒方法" class="headerlink" title="线程等待唤醒方法"></a>线程等待唤醒方法</h3><ol><li>Object中wait()让线程等待，Object.notify()唤醒线程。</li><li>JUC包中的lock.Condition的await()让线程等待，使用signal()唤醒线程。</li><li>LockSupport类可以阻塞当前线程及唤醒指定被阻塞的线程。</li></ol><p>线程等待唤醒发展过程：</p><p><img src="/img/Java-JUC-IMGS/Untitled%204.png" alt="Untitled"></p><p>Object-awit-notify结论：</p><ol><li>Object中的awit和notify实现等待唤醒必须放在同步块中，且成对使用</li><li>先wait后notify才OK，否则顺序不对也不行。</li></ol><p>JUC中lock.Condition-awit-signal结论：</p><ol><li>线程必要获得并持有锁（及在lock.lock和unlock中间），且成对使用。</li><li>必须要先等待后唤醒（先awit后signal）。线程才能被唤醒。</li></ol><p>LockSupport结论：</p><ol><li>正常+无锁块需求。</li><li>之前错误的先唤醒后等待，LockSupport照样支持。park，unpark无先后顺序。</li><li>成双成对要牢记。</li><li>LockSupport通行证(permit)只能有且最多一个，不能累计。</li></ol><hr><h2 id="6-Java内存模型-JMM"><a href="#6-Java内存模型-JMM" class="headerlink" title="6. Java内存模型(JMM)"></a>6. Java内存模型(JMM)</h2><p><img src="/img/Java-JUC-IMGS/Untitled%205.png" alt="Untitled"></p><p>JMM作用： 屏蔽掉各种硬件和各操作系统的内存访问差异。让java程序在各平台达到一致的内存访问效果。</p><p>概念介绍：</p><p>JMM本身是一种抽象概念并不真实存在，仅仅是描述的一组约定和规范。通过这组规定定义了程序中（尤其是多线程）各个变量的读写访问方式并决定了一个线程对共享变量的写入 何时以及如何变成对另外 一个线程可见，关键技术点都是围绕多线程的 原子性，可见性，有序性 展开。</p><p>原则： </p><p>JMM关键技术点都是围绕多线程的 原子性，可见性，有序性展开的。</p><p>能干啥？</p><ol><li>通过JMM实现线程和主内存之间的抽象关系。</li><li>屏蔽各个硬件平台和操作系统的内存访问差异，让Java程序在各平台下达到统一的内存访问效果。</li></ol><p>三大特性：</p><ol><li>可见性：变量存放于主内存中是，每个线程有自己的本地内存，数据copy自主内存，操作完后写入主内存。主内存中的变量对所有线程可见。及时可见。</li><li>原子性：在多线程环境下；同一个操作不能被其他线程打断。</li><li>有序性：指令重 排序</li></ol><p><strong>小结</strong></p><ol><li>所有的共享变量都存储在物理主内存中 </li><li>每个线程都有自己独立的工作内存，里面保存该线程使用到的变量副本（主内存中该变量的拷贝）</li><li>线程对共享变量所有的操作都必须在自己的内存中操作完后，再写回主内存，不能直接在主内存中操作。</li><li>不同线程间无法直接访问其他线程的工作内存。线程间变量值的传递需要通过主内存完成。</li></ol><p>多线程先行发现原则之 happens-before</p><p>总原则： 可见和顺序性</p><ol><li>如果一个操作happens-before另一操作，那么第一个的操作结果对第二个操作可见，且第一个操作的执行顺序排在第二个操作之前。</li><li>两个操作之间存在happens-before关系，并不意味着一定要按照happens-before原则制定的顺序执行，如果重排后执行的结果与happens-before关系执行的结果一致。那么重排并不非法。</li><li>先行发生原则-8原则</li></ol><p><img src="/img/Java-JUC-IMGS/Untitled%206.png" alt="Untitled"></p><h2 id="7-volatile-与-JMM"><a href="#7-volatile-与-JMM" class="headerlink" title="7. volatile 与 JMM"></a>7. volatile 与 JMM</h2><p>volatile作用：让变量变动时，立即刷新回主内存中并发出通知，对其他线程可见和有序，其他线程也从主内存中读取。</p><p>特点：</p><ol><li>可见性</li><li>有序性，排序要求，禁止重排</li></ol><p>volatile凭什么可以保证可见性和有序性？</p><p>反编译后发现变量会用 ACC_VOLATILE修饰,</p><p>即：JVM编译时,对volatile修饰变量会按照JMM规范在相应位置插入内存屏障。</p><p><strong>内存屏蔽。Memory Barrier； 又称</strong> 内存栅栏，是一类同步屏障指令。使得CPU或编译器对 屏障指令前后所发出的操作 执行一个排序约束。</p><p>volatile无法保证原子性。</p><p>内存屏障作用：</p><ol><li>禁止指令重排序。</li><li>读屏障：Load Barrier，读指令之前插入读屏障，让线程临时内存中的数据失效，重新会到主内存中进行获取最新数据。</li><li>写屏障：Store Barrier，写指令之后插入写屏障，强制把写缓冲区的数据刷写回主内存中。</li></ol><p>细分四种：</p><ol><li>loadload</li><li>storestore</li><li>storeload</li><li>loadstore</li></ol><p><img src="/img/Java-JUC-IMGS/Untitled%207.png" alt="Untitled"></p><p><strong>volatile可见性</strong></p><p>工作内存和主内存间的原子操作性-<strong>读写过程</strong></p><p><img src="/img/Java-JUC-IMGS/Untitled%208.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%209.png" alt="Untitled"></p><p><strong>volatile不保证原子，使用场景：</strong></p><ol><li>运算结果并不依赖变量的当前值，或能够确保只有单一线程修改变量值</li><li>变量不需要与其他的状态变量共同参与不变约束。</li></ol><p><strong>禁止指令重排</strong></p><p><img src="/img/Java-JUC-IMGS/Untitled%2010.png" alt="Untitled"></p><p>volatile三句话总结：</p><p><img src="/img/Java-JUC-IMGS/Untitled%2011.png" alt="Untitled"></p><h2 id="8-CAS-Compare-And-Swap-原子操作性"><a href="#8-CAS-Compare-And-Swap-原子操作性" class="headerlink" title="8. CAS(Compare And Swap)+ 原子操作性"></a>8. CAS(Compare And Swap)+ 原子操作性</h2><p>atomic类，乐观锁思想。替换synchronized保证原子操作</p><p>cas参数：自旋</p><ol><li>V内存地址</li><li>A旧的预期值</li><li>B新的值</li></ol><p>CAS是JDK提供的非阻塞原子操作，通过硬件保证了比较-更新的原子性。</p><p>CAS是一条CPU的原子指令（cmpxchg指令）不会造成数据不一致问题。Unsafe提供的CAS方法底层实现即为CPU（cmpxchg）指令</p><p><img src="/img/Java-JUC-IMGS/Untitled%2012.png" alt="Untitled"></p><p>AtomicInteger利用 CAS+volatile和native方法保证原子操作，避免synchronized的高开销，执行效率大为提升。</p><p>CAS自旋jdk实现</p><p><img src="/img/Java-JUC-IMGS/Untitled%2013.png" alt="Untitled"></p><p>compareAndSawpxxx底层汇编代码：</p><p><img src="/img/Java-JUC-IMGS/Untitled%2014.png" alt="Untitled"></p><p> cmpxchg指令：</p><p><img src="/img/Java-JUC-IMGS/Untitled%2015.png" alt="Untitled"></p><p><strong>CAS与自旋锁</strong></p><p>自旋锁（spinlock）</p><p>cas是自旋锁基础，cas利用cpu指令保证了原子性，达到锁的效果</p><p>自旋：采用循环方式去获取锁（do-while),当线程发现锁被占用是，不断判断循环去获取锁，直到成功;优点：减少线程上下文切换，缺点：消耗CPU。   </p><p>CAS缺点：</p><ol><li>循环时间长，CPU消耗高</li><li>ABA问题</li></ol><p>ABA问题解决方案：</p><ol><li>增加版本号&#x2F;戳记流水(<code>AtomicStampedReference</code>)</li></ol><h2 id="9-原子类"><a href="#9-原子类" class="headerlink" title="9. 原子类"></a>9. 原子类</h2><p>CAS—&gt;unsafe(cpu指令)—&gt;do-while —&gt; ABA —&gt; 版本号&#x2F;时间戳<code>AtomicStampedReference（版本号、时间戳）</code></p><p><code>AtomicMarkableReference(true/false-AtomicStampedReference简化版)</code></p><p>共16个类</p><p><img src="/img/Java-JUC-IMGS/Untitled%2016.png" alt="Untitled"></p><p>基本类</p><p>数组类</p><p>原子引用</p><p>原子字段类型：更加细粒度的原子操作 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">import</span> java.util.concurrent.CountDownLatch;<br><span class="hljs-keyword">import</span> java.util.concurrent.atomic.AtomicIntegerFieldUpdater;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBank</span>&#123;<br>    String carNo=<span class="hljs-string">&quot;AA&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">volatile</span> <span class="hljs-type">int</span> money;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transfer</span><span class="hljs-params">(MyBank myBank)</span>&#123;<br>        fieldUpdater.getAndIncrement(myBank);<br>    &#125;<br>    AtomicIntegerFieldUpdater&lt;MyBank&gt; fieldUpdater= AtomicIntegerFieldUpdater.newUpdater(MyBank.class,<span class="hljs-string">&quot;money&quot;</span>);<br><br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AtomicIntegerFieldReDemo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> InterruptedException &#123;<br>        <span class="hljs-type">MyBank</span> <span class="hljs-variable">myBank</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyBank</span>();<br>        <span class="hljs-type">CountDownLatch</span> <span class="hljs-variable">cdl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CountDownLatch</span>(<span class="hljs-number">10</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(()-&gt;&#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">1000</span>; j++) &#123;<br>                    myBank.transfer(myBank);<br>                &#125;<br>                cdl.countDown();<br>            &#125;,String.valueOf(i)).start();<br>        &#125;<br>        cdl.await();<br>        System.out.println(myBank.money);<br>    &#125;<br>&#125;`<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">import</span> java.util.concurrent.CountDownLatch;<br><span class="hljs-keyword">import</span> java.util.concurrent.TimeUnit;<br><span class="hljs-keyword">import</span> java.util.concurrent.atomic.AtomicReferenceFieldUpdater;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCard</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">volatile</span> Boolean flag=Boolean.FALSE;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> InterruptedException &#123;<br><span class="hljs-comment">//        System.out.println(Thread.currentThread().getName()+&quot;\t init come in&quot;);</span><br>        <span class="hljs-keyword">if</span>(fieldUpdater.compareAndSet(<span class="hljs-built_in">this</span>,Boolean.FALSE,Boolean.TRUE))&#123;<br>            System.out.println(Thread.currentThread().getName()+<span class="hljs-string">&quot;\t init doing&quot;</span>);<br>            TimeUnit.SECONDS.sleep(<span class="hljs-number">2</span>);<br>            System.out.println(Thread.currentThread().getName()+<span class="hljs-string">&quot;\t init end&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            System.out.println(Thread.currentThread().getName()+<span class="hljs-string">&quot;\t 有其他线程正在初始化中&quot;</span>);<br>        &#125;<br>    &#125;<br>    AtomicReferenceFieldUpdater&lt;MyCard,Boolean&gt; fieldUpdater =<br>            AtomicReferenceFieldUpdater.newUpdater(MyCard.class,Boolean.class,<span class="hljs-string">&quot;flag&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AtomicReferenceFieldUpdaterDemo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> InterruptedException &#123;<br>        <span class="hljs-type">MyCard</span> <span class="hljs-variable">myCard</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyCard</span>();<br>        <span class="hljs-type">CountDownLatch</span> <span class="hljs-variable">cdl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CountDownLatch</span>(<span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">5</span>; i++) &#123;<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(()-&gt; &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    myCard.init();<br>                &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<span class="hljs-keyword">finally</span> &#123;<br>                    cdl.countDown();<br>                &#125;<br>            &#125;,String.valueOf(i)).start();<br>        &#125;<br>        cdl.await();<br>        System.out.println(myCard.flag);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>synchronized , AtomicLong,LongAdder, LongAccumulator对比</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"> <br></code></pre></td></tr></table></figure><p>LongAdder效率更高的原因：</p><p><strong>化整为零</strong></p><p>求和结果：Base+Cell[]</p><p>LongAdder源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">long</span> x)</span> &#123;<br>        Cell[] as; <span class="hljs-type">long</span> b, v; <span class="hljs-type">int</span> m; Cell a;<br>        <span class="hljs-keyword">if</span> ((as = cells) != <span class="hljs-literal">null</span> || !casBase(b = base, b + x)) &#123;<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">uncontended</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span> (as == <span class="hljs-literal">null</span> || (m = as.length - <span class="hljs-number">1</span>) &lt; <span class="hljs-number">0</span> ||<br>                (a = as[getProbe() &amp; m]) == <span class="hljs-literal">null</span> ||<br>                !(uncontended = a.cas(v = a.value, v + x)))<br>                longAccumulate(x, <span class="hljs-literal">null</span>, uncontended);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Handles cases of updates involving initialization, resizing,</span><br><span class="hljs-comment">     * creating new Cells, and/or contention. See above for</span><br><span class="hljs-comment">     * explanation. This method suffers the usual non-modularity</span><br><span class="hljs-comment">     * problems of optimistic retry code, relying on rechecked sets of</span><br><span class="hljs-comment">     * reads.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> x the value</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> fn the update function, or null for add (this convention</span><br><span class="hljs-comment">     * avoids the need for an extra field or function in LongAdder).</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> wasUncontended false if CAS failed before call</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">longAccumulate</span><span class="hljs-params">(<span class="hljs-type">long</span> x, LongBinaryOperator fn,</span><br><span class="hljs-params">                              <span class="hljs-type">boolean</span> wasUncontended)</span> &#123;<br>        <span class="hljs-type">int</span> h;<br>        <span class="hljs-keyword">if</span> ((h = getProbe()) == <span class="hljs-number">0</span>) &#123;<br>            ThreadLocalRandom.current(); <span class="hljs-comment">// force initialization</span><br>            h = getProbe();<br>            wasUncontended = <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">collide</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;                <span class="hljs-comment">// True if last slot nonempty</span><br>        <span class="hljs-keyword">for</span> (;;) &#123;<br>            Cell[] as; Cell a; <span class="hljs-type">int</span> n; <span class="hljs-type">long</span> v;<br>            <span class="hljs-keyword">if</span> ((as = cells) != <span class="hljs-literal">null</span> &amp;&amp; (n = as.length) &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">if</span> ((a = as[(n - <span class="hljs-number">1</span>) &amp; h]) == <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">if</span> (cellsBusy == <span class="hljs-number">0</span>) &#123;       <span class="hljs-comment">// Try to attach new Cell</span><br>                        <span class="hljs-type">Cell</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cell</span>(x);   <span class="hljs-comment">// Optimistically create</span><br>                        <span class="hljs-keyword">if</span> (cellsBusy == <span class="hljs-number">0</span> &amp;&amp; casCellsBusy()) &#123;<br>                            <span class="hljs-type">boolean</span> <span class="hljs-variable">created</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>                            <span class="hljs-keyword">try</span> &#123;               <span class="hljs-comment">// Recheck under lock</span><br>                                Cell[] rs; <span class="hljs-type">int</span> m, j;<br>                                <span class="hljs-keyword">if</span> ((rs = cells) != <span class="hljs-literal">null</span> &amp;&amp;<br>                                    (m = rs.length) &gt; <span class="hljs-number">0</span> &amp;&amp;<br>                                    rs[j = (m - <span class="hljs-number">1</span>) &amp; h] == <span class="hljs-literal">null</span>) &#123;<br>                                    rs[j] = r;<br>                                    created = <span class="hljs-literal">true</span>;<br>                                &#125;<br>                            &#125; <span class="hljs-keyword">finally</span> &#123;<br>                                cellsBusy = <span class="hljs-number">0</span>;<br>                            &#125;<br>                            <span class="hljs-keyword">if</span> (created)<br>                                <span class="hljs-keyword">break</span>;<br>                            <span class="hljs-keyword">continue</span>;           <span class="hljs-comment">// Slot is now non-empty</span><br>                        &#125;<br>                    &#125;<br>                    collide = <span class="hljs-literal">false</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!wasUncontended)       <span class="hljs-comment">// CAS already known to fail</span><br>                    wasUncontended = <span class="hljs-literal">true</span>;      <span class="hljs-comment">// Continue after rehash</span><br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a.cas(v = a.value, ((fn == <span class="hljs-literal">null</span>) ? v + x :<br>                                             fn.applyAsLong(v, x))))<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &gt;= NCPU || cells != as)<br>                    collide = <span class="hljs-literal">false</span>;            <span class="hljs-comment">// At max size or stale</span><br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!collide)<br>                    collide = <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cellsBusy == <span class="hljs-number">0</span> &amp;&amp; casCellsBusy()) &#123;<br>                    <span class="hljs-keyword">try</span> &#123;<br>                        <span class="hljs-keyword">if</span> (cells == as) &#123;      <span class="hljs-comment">// Expand table unless stale</span><br>                            Cell[] rs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cell</span>[n &lt;&lt; <span class="hljs-number">1</span>];<br>                            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; ++i)<br>                                rs[i] = as[i];<br>                            cells = rs;<br>                        &#125;<br>                    &#125; <span class="hljs-keyword">finally</span> &#123;<br>                        cellsBusy = <span class="hljs-number">0</span>;<br>                    &#125;<br>                    collide = <span class="hljs-literal">false</span>;<br>                    <span class="hljs-keyword">continue</span>;                   <span class="hljs-comment">// Retry with expanded table</span><br>                &#125;<br>                h = advanceProbe(h);<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cellsBusy == <span class="hljs-number">0</span> &amp;&amp; cells == as &amp;&amp; casCellsBusy()) &#123;<br>                <span class="hljs-type">boolean</span> <span class="hljs-variable">init</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>                <span class="hljs-keyword">try</span> &#123;                           <span class="hljs-comment">// Initialize table</span><br>                    <span class="hljs-keyword">if</span> (cells == as) &#123;<br>                        Cell[] rs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cell</span>[<span class="hljs-number">2</span>];<br>                        rs[h &amp; <span class="hljs-number">1</span>] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cell</span>(x);<br>                        cells = rs;<br>                        init = <span class="hljs-literal">true</span>;<br>                    &#125;<br>                &#125; <span class="hljs-keyword">finally</span> &#123;<br>                    cellsBusy = <span class="hljs-number">0</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (init)<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (casBase(v = base, ((fn == <span class="hljs-literal">null</span>) ? v + x :<br>                                        fn.applyAsLong(v, x))))<br>                <span class="hljs-keyword">break</span>;                          <span class="hljs-comment">// Fall back on using base</span><br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>小结：<ol><li>AtomicLong<ol><li>原理：<ol><li>CAS+自旋</li><li>incremenAndGet</li></ol></li><li>场景：<ol><li>低并发下的全局计算</li><li>AtomicLong能保证并发情况下计算准确性，内部通过CAS来解决并发安全性问题</li></ol></li><li>缺陷:<ol><li>高并发下性能急剧下降，原因：自旋会成为瓶颈</li></ol></li></ol></li><li>LongAdder<ol><li>原理：<ol><li>CAS+BASE+Cell数组分散</li><li>空间换时间并分散了热点数据</li></ol></li><li>场景：<ol><li>高并发下的全局计算</li></ol></li><li>缺陷：<ol><li>sum求和后还有计算线程计算的话，结果不准，需所有线程完成后求和，最终结果准确。</li></ol></li></ol></li></ol></li></ul><h2 id="10-ThreadLocal"><a href="#10-ThreadLocal" class="headerlink" title="10. ThreadLocal"></a>10. ThreadLocal</h2><p>每个线程都有自己的专属本地变量副本，人手一份。解决线程安全问题。</p><p>Thread </p><p>ThreadLocal.ThreadLocalMap localMap &#x3D; null</p><p>ThreadLocalMap&lt;WeakRefrence<ThreadLocal>,Object&gt; </p><p>演变：</p><p><a href="https://www.bilibili.com/video/BV1ar4y1x727?p=100&spm_id_from=pageDriver&vd_source=225ceefcd8902367a0cec6eb7334a132&t=469.2">https://www.bilibili.com/video/BV1ar4y1x727?p=100&spm_id_from&#x3D;pageDriver&amp;vd_source&#x3D;225ceefcd8902367a0cec6eb7334a132&amp;t&#x3D;469.2</a></p><p>before： 群雄逐鹿起纷争</p><p>after： 人手一份天下安</p><p><img src="/img/Java-JUC-IMGS/Untitled%2017.png" alt="Untitled"></p><p><strong>注意</strong></p><p>使用完ThreadLocal后，需使用ThreadLocal.remove()清空，防止内存泄漏（因为ThreadLocalMap中的k是弱引用，但是V是强引用，会导致V不能被回收，需要手动remove去将V设置为Null，进行手动回收）。</p><p>Thread-ThreadLocal-ThrealocalMap三者关系：</p><p><img src="/img/Java-JUC-IMGS/Untitled%2018.png" alt="Untitled"></p><p>几个引用：</p><ol><li>强引用 Reference （默认创建的对象均为强引用，垃圾回收不能回收）</li><li>软引用  SoftReference 空间充足时GC不回收，空间不足GC会回收</li><li>弱引用  WareReference 只要有GC，就会回收</li><li>虚引用  PhantomReference  get一致返回null，需配合引用队列使用ReferenceQueue使用</li></ol><p>软引用和弱引用应用场景：</p><p>图片高速缓存。防止OOM</p><p>GCRoot 和 四个引用的关系</p><p><img src="/img/Java-JUC-IMGS/Untitled%2019.png" alt="Untitled"></p><p>为什么源码中ThreadLocalMap的K使用弱引用：减少内存泄漏  </p><p><img src="/img/Java-JUC-IMGS/Untitled%2020.png" alt="Untitled"></p><ul><li><strong>使用小结</strong></li></ul><ol><li>使用 <code>ThreadLocal.*withInitial*(() -&gt; 0)</code> 初始化</li><li>建议使用static 修饰ThreadLocal</li><li>一定要记得使用Thread.remove()方法进行清理，防止内存泄漏。</li></ol><p>ThreadLocal小结：</p><ol><li>TL并不解决线程间共享数据问题</li><li>适用于变量在线程间隔离且在方法间共享场景</li><li>通过隐式的在不同线程内创建独立副本，避免线程安全问题。</li><li>每个线程持有一个只属于自己的Map，并维护TheadLocalMap对象与具体实例的映射，该Map只被持有它的线程访问，故不存在线程安全问题。</li><li>ThreadLocalMap的Entry对ThreadLocalMap为弱引用，避免了ThreadLocal对象无法被回收问题。</li><li>都会通过remove()- expungStaleEntry,cleanSomeSlots,replcaceStateEntry三个三个方法回收键为null的entry对象的值，防止内存泄漏,属于安全加固方法。</li></ol><p><img src="/img/Java-JUC-IMGS/Untitled%2021.png" alt="Untitled"></p><h2 id="Java对象内存布局与对象头"><a href="#Java对象内存布局与对象头" class="headerlink" title="Java对象内存布局与对象头"></a>Java对象内存布局与对象头</h2><p>new Object在JVM中存放位置 和 构成</p><p><img src="/img/Java-JUC-IMGS/Untitled%2022.png" alt="Untitled"></p><p>对象实例构成部分：</p><ol><li>对象头<ol><li>对象标记Mark Word<ol><li>HashCode</li><li>分代年龄</li><li>锁标记等信息</li></ol></li><li>类元信息（类型指针）Class Pointer</li><li>长度 length（对象数组专有）</li></ol></li><li>实例数据</li><li>对其填充</li></ol><p><img src="/img/Java-JUC-IMGS/Untitled%2023.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%2024.png" alt="Untitled"></p><h3 id="对象标记的结构组成"><a href="#对象标记的结构组成" class="headerlink" title="对象标记的结构组成"></a>对象标记的结构组成</h3><p><img src="/img/Java-JUC-IMGS/Untitled%2025.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%2026.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%2027.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%2028.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%2029.png" alt="Untitled"></p><h3 id="类元信息-类型指针）Class-Pointer"><a href="#类元信息-类型指针）Class-Pointer" class="headerlink" title="类元信息 (类型指针）Class Pointer"></a>类元信息 (类型指针）Class Pointer</h3><p>Object o &#x3D; new Object</p><p>Object  即为类型指针</p><p><img src="/img/Java-JUC-IMGS/Untitled%2030.png" alt="Untitled"></p><p>  对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象属于那个类的实例。</p><h3 id="JOL打印对象头信息"><a href="#JOL打印对象头信息" class="headerlink" title="JOL打印对象头信息"></a>JOL打印对象头信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.openjdk.jol.info.ClassLayout;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ObjectJOLDemo</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>();<br>        System.out.println(ClassLayout.parseInstance(o).toPrintable());<br>        <span class="hljs-type">Consumer</span> <span class="hljs-variable">consumer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Consumer</span>();<br>        System.out.println(ClassLayout.parseInstance(consumer).toPrintable());<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Consumer</span>&#123;<br><span class="hljs-comment">// 1. 第一种情况，无属性时，dv&#x27;xd&#x27;tb</span><br>    <span class="hljs-type">int</span> age;<br>    <span class="hljs-type">boolean</span> flag;<br>&#125; <br></code></pre></td></tr></table></figure><p>输出信息：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs prolog">java.lang.<span class="hljs-symbol">Object</span> object internals:<br> <span class="hljs-symbol">OFFSET</span>  <span class="hljs-symbol">SIZE</span>   <span class="hljs-symbol">TYPE</span> <span class="hljs-symbol">DESCRIPTION</span>                               <span class="hljs-symbol">VALUE</span><br>      <span class="hljs-number">0</span>     <span class="hljs-number">4</span>        (object header)                           <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> (<span class="hljs-number">00000001</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span>) (<span class="hljs-number">1</span>)<br>      <span class="hljs-number">4</span>     <span class="hljs-number">4</span>        (object header)                           <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> (<span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span>) (<span class="hljs-number">0</span>)<br>      <span class="hljs-number">8</span>     <span class="hljs-number">4</span>        (object header)                           <span class="hljs-number">28</span> <span class="hljs-number">0</span>f <span class="hljs-number">00</span> <span class="hljs-number">00</span> (<span class="hljs-number">00101000</span> <span class="hljs-number">00001111</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span>) (<span class="hljs-number">3880</span>)<br>     <span class="hljs-number">12</span>     <span class="hljs-number">4</span>        (loss due to the next object alignment)<br><span class="hljs-symbol">Instance</span> size: <span class="hljs-number">16</span> bytes<br><span class="hljs-symbol">Space</span> losses: <span class="hljs-number">0</span> bytes internal + <span class="hljs-number">4</span> bytes external = <span class="hljs-number">4</span> bytes total<br><br>com.company.<span class="hljs-symbol">Consumer</span> object internals:<br> <span class="hljs-symbol">OFFSET</span>  <span class="hljs-symbol">SIZE</span>      <span class="hljs-symbol">TYPE</span> <span class="hljs-symbol">DESCRIPTION</span>                               <span class="hljs-symbol">VALUE</span><br>      <span class="hljs-number">0</span>     <span class="hljs-number">4</span>           (object header)                           <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> (<span class="hljs-number">00000001</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span>) (<span class="hljs-number">1</span>)<br>      <span class="hljs-number">4</span>     <span class="hljs-number">4</span>           (object header)                           <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> (<span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span>) (<span class="hljs-number">0</span>)<br>      <span class="hljs-number">8</span>     <span class="hljs-number">4</span>           (object header)                           <span class="hljs-number">00</span> <span class="hljs-number">8</span>a <span class="hljs-number">07</span> <span class="hljs-number">00</span> (<span class="hljs-number">00000000</span> <span class="hljs-number">10001010</span> <span class="hljs-number">00000111</span> <span class="hljs-number">00000000</span>) (<span class="hljs-number">494080</span>)<br>     <span class="hljs-number">12</span>     <span class="hljs-number">4</span>       int <span class="hljs-symbol">Consumer</span>.age                              <span class="hljs-number">0</span><br>     <span class="hljs-number">16</span>     <span class="hljs-number">1</span>   boolean <span class="hljs-symbol">Consumer</span>.flag                             false<br>     <span class="hljs-number">17</span>     <span class="hljs-number">7</span>           (loss due to the next object alignment)<br><span class="hljs-symbol">Instance</span> size: <span class="hljs-number">24</span> bytes<br><span class="hljs-symbol">Space</span> losses: <span class="hljs-number">0</span> bytes internal + <span class="hljs-number">7</span> bytes external = <span class="hljs-number">7</span> bytes total<br></code></pre></td></tr></table></figure><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">java -<span class="hljs-symbol">XX</span>:+<span class="hljs-symbol">PrintCommandLineFlags</span> -version<br>-<span class="hljs-symbol">XX</span>:<span class="hljs-symbol">InitialHeapSize</span>=<span class="hljs-number">1073741824</span> -<span class="hljs-symbol">XX</span>:<span class="hljs-symbol">MaxHeapSize</span>=<span class="hljs-number">17179869184</span> -<span class="hljs-symbol">XX</span>:+<span class="hljs-symbol">PrintCommandLineFlags</span> -<span class="hljs-symbol">XX</span>:+<span class="hljs-symbol">UseCompressedClassPointers</span> -<span class="hljs-symbol">XX</span>:+<span class="hljs-symbol">UseCompressedOops</span> -<span class="hljs-symbol">XX</span>:+<span class="hljs-symbol">UseParallelGC</span><br>openjdk version <span class="hljs-string">&quot;1.8.0_312&quot;</span><br></code></pre></td></tr></table></figure><p>java 默认开启了类型指针压缩</p><ol><li><p>开启压缩后对象头占用 8(mark_word)+4(class_pointer)+4(对其补充) &#x3D; 16字节</p></li><li><p>关闭压缩（-XX:-UseCompressedClassPointers）</p><p> 对象头占用：8(mark_word)+8(class_pointer)&#x3D;16字节</p></li></ol><p>结论： 对象头占用16个字节。</p><h2 id="12-synchronized与锁升级"><a href="#12-synchronized与锁升级" class="headerlink" title="12. synchronized与锁升级"></a>12. synchronized与锁升级</h2><p><a href="https://www.bilibili.com/video/BV1ar4y1x727?p=121&share_source=copy_pc">https://www.bilibili.com/video/BV1ar4y1x727?p=121&share_source&#x3D;copy_pc</a></p><p>synchronized用的锁是存在Java对象头里的Mark Word中，锁升级主要依赖MarkWord中锁标志位 和 释放偏向锁标志位。</p><p>锁状态升级和对象头(mark-word)中的锁位关系 </p><p><img src="/img/Java-JUC-IMGS/Untitled%2031.png" alt="Untitled"></p><p><img src="/img/Java-JUC-IMGS/Untitled%2032.png" alt="Untitled"></p><p> 无锁： 0 01</p><ol><li><p><strong>偏向锁：单线程竞争 1 01</strong></p><ol><li>当线程A第一次竞争到锁时，通过操作修改MarkWord中的偏向线程ID、偏向模式。如果不存在其他线程竞争，则持有偏向锁的线程将永远不需要同步。</li><li>当一个对象一直被同一个线程竞争得到。此时锁的等级为偏向锁。（由于只有一个线程，那么该线程在后续访问时便自动获得锁）</li></ol></li><li><p><strong>轻量级锁  0 00</strong></p><ol><li><p>是什么？多线程竞争，但任一时刻最多只有一个线程竞争;不存在过于激烈，且没有线程阻塞。</p></li><li><p>主要作用</p><ol><li>有线程参与竞争，但是获取锁的冲突时间极短</li><li>本质就是自旋锁CAS.</li></ol><p> 作用总结：</p><ol><li>目的是在没有多线程竞争下，通过CAS减少重量级锁使用操作系统互斥量产生的性能消耗；先自旋，CAS自旋到达一定次数才升级阻塞（重量级锁）。</li><li>升级时机：当关闭偏向锁功能或多线程竞争偏向锁会导致锁升级为轻量锁。</li></ol></li><li><p>与偏向锁区别：</p><ol><li>争夺轻量锁失败时，自旋尝试抢占锁。</li><li>轻量锁每次退出同步块都需要释放锁，而偏向锁在竞争发生时才释放锁。</li></ol></li></ol></li><li><p><strong>重量级锁 010 指向互斥量的指针（monitor对象）</strong></p><ol><li>大量线程参与锁竞争，冲突性很高</li></ol></li><li><p><strong>小结</strong>：</p><ol><li><p>锁升级后hashcode去哪了？</p><ol><li>无锁状态下，hashcode和gc-age存放于对象头的mark-word中</li><li>偏向锁和hashCode无法一起共存，及对象计算过hashcode()则该对象无法被设置为偏向锁，直接升级为轻量级锁。若当前对象处于偏向锁时，再计算hashcode，则该对象会立刻升级为重量级锁。 </li><li>升级为轻量锁时，JVM会在当前线程的栈中创建一个锁记录（Lock Record) 用于存储对象的MarkWord拷贝。该拷贝可包含hashcode，gc-age等，释放锁后将这些信息写回到对象头中。轻量级锁可以与hashcode共存。</li><li>升级为重量级锁后， MarkWord保存的重量级锁指针，代表重量级锁的ObjectMonitor类里有字段记录非加锁状态下的MarkWord，锁释放后，也会将信息写回到对象头中。</li></ol></li><li><p>各个锁优缺点，synchronized锁升级和实现原理</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2033.png" alt="Untitled"></p></li><li><p>JIT-锁消除-锁粗化</p></li></ol><p> <strong>锁升级过程和逻辑图</strong> </p><p> <img src="/img/Java-JUC-IMGS/Untitled%2034.png" alt="Untitled"></p></li></ol><h2 id="13-AbstractQueuedSynchronizer之AQS"><a href="#13-AbstractQueuedSynchronizer之AQS" class="headerlink" title="13. AbstractQueuedSynchronizer之AQS"></a>13. AbstractQueuedSynchronizer之A<strong>QS</strong></h2><h3 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h3><ol><li><p>是什么?</p><ol><li><p>AQS 抽象队列同步器</p></li><li><p>用来实现锁或者其他同步组件的公共基础部分的抽象实现，是重量级基础框架及整个JUC体系基石，主要用于解决分配给”谁“的问题。</p></li><li><p>整体就是抽象一个FIFO队列来完成资源获取线程排队工作，通过Int变量表示持有锁的状态。</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2035.png" alt="Untitled"></p></li><li><p>基本结构：</p><p> 源码：</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2036.png" alt="Untitled"></p><p> CLH队列（双向队列）尾入头出</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2037.png" alt="Untitled"></p><p> AQS体系结构</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2038.png" alt="Untitled"></p></li><li><p>小结：</p><ol><li>AQS&#x3D;state（状态变量）+ CLH双端队列</li><li>有阻塞就需要排队，实现排队就必然有队列。</li><li><strong>volatile+cas机制实现了锁模板，保证了代码的同步性和可见性，而AQS封装了线程阻塞等待挂起，解锁唤醒其他线程的逻辑，AQS子类只需根据状态变量（state）判断获取锁，是否释放锁，使用LockSupport挂起，唤醒线程即可。</strong></li></ol></li></ol></li><li><p>AQS-内部类Node</p><ol><li><p>结构和属性说明：</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2039.png" alt="Untitled"></p><p> <img src="/img/Java-JUC-IMGS/Untitled%2040.png" alt="Untitled"></p></li></ol></li><li><p>ReentrantLock为例</p><ol><li><p>公平锁</p></li><li><p>非公平锁</p><p> 两者区别：</p><p> 公平锁比非公平锁多了一个判断列队中是否有前置Node <code>hasQueuedPredecessors()</code>，如果有则进入AQS队列进行排队，非公平则不判断直接进行抢锁。</p><p> 源码</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Acquires in exclusive mode, ignoring interrupts.  Implemented</span><br><span class="hljs-comment">     * by invoking at least once &#123;<span class="hljs-doctag">@link</span> #tryAcquire&#125;,</span><br><span class="hljs-comment">     * returning on success.  Otherwise the thread is queued, possibly</span><br><span class="hljs-comment">     * repeatedly blocking and unblocking, invoking &#123;<span class="hljs-doctag">@link</span></span><br><span class="hljs-comment">     * #tryAcquire&#125; until success.  This method can be used</span><br><span class="hljs-comment">     * to implement method &#123;<span class="hljs-doctag">@link</span> Lock#lock&#125;.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> arg the acquire argument.  This value is conveyed to</span><br><span class="hljs-comment">     *        &#123;<span class="hljs-doctag">@link</span> #tryAcquire&#125; but is otherwise uninterpreted and</span><br><span class="hljs-comment">     *        can represent anything you like.</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ReservedStackAccess</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">acquire</span><span class="hljs-params">(<span class="hljs-type">int</span> arg)</span> &#123;<br>        <span class="hljs-keyword">if</span> (!tryAcquire(arg) &amp;&amp;<br>            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))<br>            selfInterrupt();<br>    &#125;<br></code></pre></td></tr></table></figure></li></ol></li></ol><h3 id="ReentrantLock源码解析"><a href="#ReentrantLock源码解析" class="headerlink" title="ReentrantLock源码解析"></a>ReentrantLock源码解析</h3><p>总体步骤：非公平为例</p><ol><li>重试获取锁（cas获取state状态为）</li><li>获取不到锁进入队列进行排队(addWaiter)</li><li>队列中由上一个进程完成后，触发LockSupport.unpeak(thread)唤醒触发下一个线程的运行或锁的再次争抢。</li></ol><p>NonfairSync extends Sync extends AQS </p><p>lock.lock()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">NonfairSync</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Sync</span> &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">7316153563782823691L</span>;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * Performs lock.  Try immediate barge, backing up to normal</span><br><span class="hljs-comment">         * acquire on failure.</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@ReservedStackAccess</span><br>        <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">lock</span><span class="hljs-params">()</span> &#123;<br>            <span class="hljs-keyword">if</span> (compareAndSetState(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>))<br>                setExclusiveOwnerThread(Thread.currentThread());<br>            <span class="hljs-keyword">else</span><br>                acquire(<span class="hljs-number">1</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">tryAcquire</span><span class="hljs-params">(<span class="hljs-type">int</span> acquires)</span> &#123;<br>            <span class="hljs-keyword">return</span> nonfairTryAcquire(acquires);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>acquire(1)： 整体步骤：</p><ol><li>尝试获取锁，</li><li>如果尝试获取锁失败，则加入等待队列的队尾中。</li><li>在队列中排队，无限判断前一个线程是否Head，如果是Head  尝试获取锁执行，若不是在Head则利用LockSupport.peak()对线程进行挂起，直到其他线程完成后unlock锁后，当前线程排到Head再进行抢占锁。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ReservedStackAccess</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">acquire</span><span class="hljs-params">(<span class="hljs-type">int</span> arg)</span> &#123;<br>        <span class="hljs-keyword">if</span> (!tryAcquire(arg) &amp;&amp;<br>            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))<br>            selfInterrupt();<br>    &#125;<br></code></pre></td></tr></table></figure><pre><code class="hljs"> nonfairTryAcquire(1)</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">         * Performs non-fair tryLock.  tryAcquire is implemented in</span><br><span class="hljs-comment">         * subclasses, but both need nonfair try for trylock method.</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@ReservedStackAccess</span><br>        <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">nonfairTryAcquire</span><span class="hljs-params">(<span class="hljs-type">int</span> acquires)</span> &#123;<br>            <span class="hljs-keyword">final</span> <span class="hljs-type">Thread</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> Thread.currentThread();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> getState();<br>            <span class="hljs-keyword">if</span> (c == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">if</span> (compareAndSetState(<span class="hljs-number">0</span>, acquires)) &#123;<br>                    setExclusiveOwnerThread(current);<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (current == getExclusiveOwnerThread()) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">nextc</span> <span class="hljs-operator">=</span> c + acquires;<br>                <span class="hljs-keyword">if</span> (nextc &lt; <span class="hljs-number">0</span>) <span class="hljs-comment">// overflow</span><br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Maximum lock count exceeded&quot;</span>);<br>                setState(nextc);<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br></code></pre></td></tr></table></figure><p>addWaiter(Node mode)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Creates and enqueues node for current thread and given mode.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> the new node</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Node <span class="hljs-title function_">addWaiter</span><span class="hljs-params">(Node mode)</span> &#123;<br>        <span class="hljs-type">Node</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Node</span>(Thread.currentThread(), mode);<br>        <span class="hljs-comment">// Try the fast path of enq; backup to full enq on failure</span><br>        <span class="hljs-type">Node</span> <span class="hljs-variable">pred</span> <span class="hljs-operator">=</span> tail;<br>        <span class="hljs-keyword">if</span> (pred != <span class="hljs-literal">null</span>) &#123;<br>            node.prev = pred;<br>            <span class="hljs-keyword">if</span> (compareAndSetTail(pred, node)) &#123;<br>                pred.next = node;<br>                <span class="hljs-keyword">return</span> node;<br>            &#125;<br>        &#125;<br>        enq(node);<br>        <span class="hljs-keyword">return</span> node;<br>    &#125;<br></code></pre></td></tr></table></figure><p>acquireQueued(final Node node, int arg)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Acquires in exclusive uninterruptible mode for thread already in</span><br><span class="hljs-comment">     * queue. Used by condition wait methods as well as acquire.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> node the node</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> arg the acquire argument</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@code</span> true&#125; if interrupted while waiting</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ReservedStackAccess</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">acquireQueued</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Node node, <span class="hljs-type">int</span> arg)</span> &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">failed</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">interrupted</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">for</span> (;;) &#123;<br>                <span class="hljs-keyword">final</span> <span class="hljs-type">Node</span> <span class="hljs-variable">p</span> <span class="hljs-operator">=</span> node.predecessor();<br>                <span class="hljs-keyword">if</span> (p == head &amp;&amp; tryAcquire(arg)) &#123;<br>                    setHead(node);<br>                    p.next = <span class="hljs-literal">null</span>; <span class="hljs-comment">// help GC</span><br>                    failed = <span class="hljs-literal">false</span>;<br>                    <span class="hljs-keyword">return</span> interrupted;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;<br>                    parkAndCheckInterrupt())<br>                    interrupted = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span> (failed)<br>                cancelAcquire(node);<br>        &#125;<br>    &#125;<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Checks and updates status for a node that failed to acquire.</span><br><span class="hljs-comment">     * Returns true if thread should block. This is the main signal</span><br><span class="hljs-comment">     * control in all acquire loops.  Requires that pred == node.prev.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> pred node&#x27;s predecessor holding status</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> node the node</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@code</span> true&#125; if thread should block</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">shouldParkAfterFailedAcquire</span><span class="hljs-params">(Node pred, Node node)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">ws</span> <span class="hljs-operator">=</span> pred.waitStatus;<br>        <span class="hljs-keyword">if</span> (ws == Node.SIGNAL)<br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">             * This node has already set status asking a release</span><br><span class="hljs-comment">             * to signal it, so it can safely park.</span><br><span class="hljs-comment">             */</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (ws &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">             * Predecessor was cancelled. Skip over predecessors and</span><br><span class="hljs-comment">             * indicate retry.</span><br><span class="hljs-comment">             */</span><br>            <span class="hljs-keyword">do</span> &#123;<br>                node.prev = pred = pred.prev;<br>            &#125; <span class="hljs-keyword">while</span> (pred.waitStatus &gt; <span class="hljs-number">0</span>);<br>            pred.next = node;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">             * waitStatus must be 0 or PROPAGATE.  Indicate that we</span><br><span class="hljs-comment">             * need a signal, but don&#x27;t park yet.  Caller will need to</span><br><span class="hljs-comment">             * retry to make sure it cannot acquire before parking.</span><br><span class="hljs-comment">             */</span><br>            compareAndSetWaitStatus(pred, ws, Node.SIGNAL);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>     <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Convenience method to park and then check if interrupted</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@code</span> true&#125; if interrupted</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">parkAndCheckInterrupt</span><span class="hljs-params">()</span> &#123;<br>        LockSupport.park(<span class="hljs-built_in">this</span>);<br>        <span class="hljs-keyword">return</span> Thread.interrupted();<br>    &#125;<br></code></pre></td></tr></table></figure><p>cancelAcquire()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// Utilities for various versions of acquire</span><br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * Cancels an ongoing attempt to acquire.</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> node the node</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">cancelAcquire</span><span class="hljs-params">(Node node)</span> &#123;<br>      <span class="hljs-comment">// Ignore if node doesn&#x27;t exist</span><br>      <span class="hljs-keyword">if</span> (node == <span class="hljs-literal">null</span>)<br>          <span class="hljs-keyword">return</span>;<br><br>      node.thread = <span class="hljs-literal">null</span>;<br><br>      <span class="hljs-comment">// Skip cancelled predecessors</span><br>      <span class="hljs-type">Node</span> <span class="hljs-variable">pred</span> <span class="hljs-operator">=</span> node.prev;<br>      <span class="hljs-keyword">while</span> (pred.waitStatus &gt; <span class="hljs-number">0</span>)<br>          node.prev = pred = pred.prev;<br><br>      <span class="hljs-comment">// predNext is the apparent node to unsplice. CASes below will</span><br>      <span class="hljs-comment">// fail if not, in which case, we lost race vs another cancel</span><br>      <span class="hljs-comment">// or signal, so no further action is necessary.</span><br>      <span class="hljs-type">Node</span> <span class="hljs-variable">predNext</span> <span class="hljs-operator">=</span> pred.next;<br><br>      <span class="hljs-comment">// Can use unconditional write instead of CAS here.</span><br>      <span class="hljs-comment">// After this atomic step, other Nodes can skip past us.</span><br>      <span class="hljs-comment">// Before, we are free of interference from other threads.</span><br>      node.waitStatus = Node.CANCELLED;<br><br>      <span class="hljs-comment">// If we are the tail, remove ourselves.</span><br>      <span class="hljs-keyword">if</span> (node == tail &amp;&amp; compareAndSetTail(node, pred)) &#123;<br>          compareAndSetNext(pred, predNext, <span class="hljs-literal">null</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-comment">// If successor needs signal, try to set pred&#x27;s next-link</span><br>          <span class="hljs-comment">// so it will get one. Otherwise wake it up to propagate.</span><br>          <span class="hljs-type">int</span> ws;<br>          <span class="hljs-keyword">if</span> (pred != head &amp;&amp;<br>              ((ws = pred.waitStatus) == Node.SIGNAL ||<br>               (ws &lt;= <span class="hljs-number">0</span> &amp;&amp; compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) &amp;&amp;<br>              pred.thread != <span class="hljs-literal">null</span>) &#123;<br>              <span class="hljs-type">Node</span> <span class="hljs-variable">next</span> <span class="hljs-operator">=</span> node.next;<br>              <span class="hljs-keyword">if</span> (next != <span class="hljs-literal">null</span> &amp;&amp; next.waitStatus &lt;= <span class="hljs-number">0</span>)<br>                  compareAndSetNext(pred, predNext, next);<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>              unparkSuccessor(node);<br>          &#125;<br><br>          node.next = node; <span class="hljs-comment">// help GC</span><br>      &#125;<br>  &#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * Wakes up node&#x27;s successor, if one exists.</span><br><span class="hljs-comment">   *</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span> node the node</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">unparkSuccessor</span><span class="hljs-params">(Node node)</span> &#123;<br>      <span class="hljs-comment">/*</span><br><span class="hljs-comment">       * If status is negative (i.e., possibly needing signal) try</span><br><span class="hljs-comment">       * to clear in anticipation of signalling.  It is OK if this</span><br><span class="hljs-comment">       * fails or if status is changed by waiting thread.</span><br><span class="hljs-comment">       */</span><br>      <span class="hljs-type">int</span> <span class="hljs-variable">ws</span> <span class="hljs-operator">=</span> node.waitStatus;<br>      <span class="hljs-keyword">if</span> (ws &lt; <span class="hljs-number">0</span>)<br>          compareAndSetWaitStatus(node, ws, <span class="hljs-number">0</span>);<br><br>      <span class="hljs-comment">/*</span><br><span class="hljs-comment">       * Thread to unpark is held in successor, which is normally</span><br><span class="hljs-comment">       * just the next node.  But if cancelled or apparently null,</span><br><span class="hljs-comment">       * traverse backwards from tail to find the actual</span><br><span class="hljs-comment">       * non-cancelled successor.</span><br><span class="hljs-comment">       */</span><br>      <span class="hljs-type">Node</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> node.next;<br>      <span class="hljs-keyword">if</span> (s == <span class="hljs-literal">null</span> || s.waitStatus &gt; <span class="hljs-number">0</span>) &#123;<br>          s = <span class="hljs-literal">null</span>;<br>          <span class="hljs-keyword">for</span> (<span class="hljs-type">Node</span> <span class="hljs-variable">t</span> <span class="hljs-operator">=</span> tail; t != <span class="hljs-literal">null</span> &amp;&amp; t != node; t = t.prev)<br>              <span class="hljs-keyword">if</span> (t.waitStatus &lt;= <span class="hljs-number">0</span>)<br>                  s = t;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (s != <span class="hljs-literal">null</span>)<br>          LockSupport.unpark(s.thread);<br>  &#125;<br></code></pre></td></tr></table></figure><p>公平锁：</p><p>相比较非公平，会提前判断当前队列中是否有前置的Node，如果有前置Node则直接进行排队等待，不直接参与抢占锁。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">         * Fair version of tryAcquire.  Don&#x27;t grant access unless</span><br><span class="hljs-comment">         * recursive call or no waiters or is first.</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@ReservedStackAccess</span><br>        <span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">tryAcquire</span><span class="hljs-params">(<span class="hljs-type">int</span> acquires)</span> &#123;<br>            <span class="hljs-keyword">final</span> <span class="hljs-type">Thread</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> Thread.currentThread();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> getState();<br>            <span class="hljs-keyword">if</span> (c == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">if</span> (!hasQueuedPredecessors() &amp;&amp;<br>                    compareAndSetState(<span class="hljs-number">0</span>, acquires)) &#123;<br>                    setExclusiveOwnerThread(current);<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (current == getExclusiveOwnerThread()) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">nextc</span> <span class="hljs-operator">=</span> c + acquires;<br>                <span class="hljs-keyword">if</span> (nextc &lt; <span class="hljs-number">0</span>)<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Maximum lock count exceeded&quot;</span>);<br>                setState(nextc);<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="14-ReentrantLock-ReentrantReadWriteLock-StampedLock"><a href="#14-ReentrantLock-ReentrantReadWriteLock-StampedLock" class="headerlink" title="14. ReentrantLock,ReentrantReadWriteLock,StampedLock"></a>14. ReentrantLock,ReentrantReadWriteLock,StampedLock</h2><p>独占锁，读写锁，邮戳锁</p><p><img src="/img/Java-JUC-IMGS/Untitled%2041.png" alt="Untitled"></p><p>ReentrantReadWriteLock extends  <code>ReadWriteLock</code></p><ol><li>读写锁定义：<ol><li>一个资源类能够被多个读线程访问或被一个写线程访问，但不能同时存在读写线程。</li><li>一体两面，读写互斥，读读共享。</li><li></li></ol></li><li>2</li><li>3</li></ol><h3 id="锁演化"><a href="#锁演化" class="headerlink" title="锁演化"></a>锁演化</h3><p><img src="/img/Java-JUC-IMGS/Untitled%2042.png" alt="Untitled"></p><p>无锁→ synchronized、lock(RentrantLock) → ReentrantReadWriteLock  → stampedLock(邮戳锁）</p><p>synchronized, lock接口</p><p>多线程，不管读还是写，每次都只有一个线程获取锁，onlyone</p><ul><li><p>ReentrantReadWriteLock：</p><p>  优点：</p><ol><li>读写互斥，写写互斥。</li><li>读读共享，多线程并行</li><li>读多写少，读写锁Good</li></ol><p>  缺点：</p><ol><li>写锁饥饿问题（读没有完成时，写线程不能获取锁）</li><li>注意，锁降级</li></ol><p>  可重用—锁降级 写锁的降级，降级为读锁 </p><ol><li><p>如果同一个线程持有写锁，在没有释放写锁之前，可以继续获得读锁。这就是写锁的降级，降级为读锁 （可重入锁）</p></li><li><p>惯例规定，先获得写锁然后获得读锁，在释放写锁的 次序。</p></li><li><p>如果释放了写锁，那么就完全转换为读锁。</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2043.png" alt="Untitled"></p></li></ol><p>  <strong>释放写锁前立刻获得写锁，写后读，防止其他线程进行抢占，保证一个完整的锁降级过程。目的是保证数据可见性。</strong></p><p>  <strong>利用锁降级替代释放锁</strong>，防止数据出错。</p><p>  锁升级不可用（读锁升级 到写锁不可行）：线程持有读锁，写锁无法再获得，写线程会进入阻塞，需等待读锁完后写线程才能获得锁。</p><p>  ReentrantReadWriteLock 的读锁是悲观锁，即读的过程中不允许写。    </p></li><li><p>StampedLock（邮戳锁，版本锁）比读写锁更快</p><p>   <strong>读的过程中也允许写锁介入</strong></p><ol><li>是什么？<ol><li>是对ReentrantReadWriteLock优化，缓解（解决）写锁饥饿问题。</li><li>stamp（戳记，标签，时间戳）</li><li>不可重入，危险</li></ol></li><li>解决锁饥饿问题<ol><li>使用公平锁new ReentrantReadWriteLock(true),但会牺牲系统吞吐量。</li><li>StampedLock乐观读锁；获得乐观读锁后，还需要对结果进行校验，读的时候允许其他线程尝试获取写锁不会被阻塞。</li></ol></li><li>3中控制读，写访问模式。<ol><li>写模式，writelock</li><li>读模式（悲观），readlock </li><li>乐观读 optimistic reading:无锁控制，类似数据库中的乐观锁，支持读写并发，很乐观认为读取时没人修改，假如被修改再实现升级为悲观读模式。</li></ol></li><li>缺点：<ol><li>stampedLock不支持可重入，没有Re开头 </li><li>StampedLock的悲观读和写锁都不支持条件变量（Condition）</li><li>使用StampedLock一定不要调用中断操作，即：interrupt()方法。</li></ol><h2 id="JUC总结-回顾"><a href="#JUC总结-回顾" class="headerlink" title="JUC总结-回顾"></a>JUC总结-回顾</h2><p> <img src="/img/Java-JUC-IMGS/Untitled%2044.png" alt="Untitled"></p><p> <img src="/img/Java-JUC-IMGS/Untitled%2045.png" alt="Untitled"></p><ol><li>锁</li></ol><p> <img src="/img/Java-JUC-IMGS/Untitled%2046.png" alt="Untitled"></p><ol><li><p>JMM Java内存定义规范。</p></li><li><p>synchronized</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2047.png" alt="Untitled"></p><p> <img src="/img/Java-JUC-IMGS/Untitled%2048.png" alt="Untitled"></p></li></ol><p> CAS</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2049.png" alt="Untitled"></p><p> volatile</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2050.png" alt="Untitled"></p><p> LockSupport</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2051.png" alt="Untitled"></p><p> AQS</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2052.png" alt="Untitled"></p><p> <img src="/img/Java-JUC-IMGS/Untitled%2053.png" alt="Untitled"></p><p> ThreadLocal</p><p> <img src="/img/Java-JUC-IMGS/Untitled%2054.png" alt="Untitled"></p><p> 原子增强类Atomic</p></li></ol></li></ul>]]></content>
    
    
    <summary type="html">java JUC相关知识</summary>
    
    
    
    <category term="Java" scheme="https://e-miao.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://e-miao.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22设置静态IP</title>
    <link href="https://e-miao.github.io/linux/Ubuntu22%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/"/>
    <id>https://e-miao.github.io/linux/Ubuntu22%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/</id>
    <published>2022-10-25T23:47:26.000Z</published>
    <updated>2022-10-25T23:47:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu设置静态IP"><a href="#Ubuntu设置静态IP" class="headerlink" title="Ubuntu设置静态IP"></a>Ubuntu设置静态IP</h1><p>通过netplan设置静态IP</p><h2 id="1-编辑配置文件"><a href="#1-编辑配置文件" class="headerlink" title="1. 编辑配置文件"></a>1. 编辑配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/netplan <br>sudo vim 00-installer-config.yaml<br></code></pre></td></tr></table></figure><p>设置为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">enp0s1:</span><br>      <span class="hljs-comment">#dhcp4: true</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">addresses:</span><br>        <span class="hljs-comment">#设置想要的不冲突的静态IP地址</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.64</span><span class="hljs-number">.30</span><span class="hljs-string">/24</span><br>      <span class="hljs-attr">routes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">to:</span> <span class="hljs-string">default</span><br>          <span class="hljs-attr">via:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.64</span><span class="hljs-number">.1</span><br>      <span class="hljs-attr">nameservers:</span><br>        <span class="hljs-attr">addresses:</span> [<span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span>,<span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span>,<span class="hljs-number">192.168</span><span class="hljs-number">.64</span><span class="hljs-number">.1</span>]<br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br><br></code></pre></td></tr></table></figure><h2 id="2-使配置文件生效"><a href="#2-使配置文件生效" class="headerlink" title="2.使配置文件生效"></a>2.使配置文件生效</h2><p>保存退出后,apply使设置生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo netplan apply<br></code></pre></td></tr></table></figure><p>查看ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip a<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">手动设置Ubuntu22，使用静态IP</summary>
    
    
    
    <category term="Linux" scheme="https://e-miao.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://e-miao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-GithubCI(github-actions)自动部署</title>
    <link href="https://e-miao.github.io/blog/2022-07-19-Hexo-GithubCI%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://e-miao.github.io/blog/2022-07-19-Hexo-GithubCI%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</id>
    <published>2022-07-18T21:10:47.000Z</published>
    <updated>2022-07-18T21:10:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>正常部署博客时，需手动执行命令进行部署；期望每次写完代码后，提交代码到源码仓库后自动编译部署到xxx.github.io中。</p><h1 id="手动部署"><a href="#手动部署" class="headerlink" title="手动部署"></a>手动部署</h1><p>先配置theme主题下的_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:xxx/xxx.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>手动执行部署命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><h1 id="Github-Actions部署"><a href="#Github-Actions部署" class="headerlink" title="Github-Actions部署"></a>Github-Actions部署</h1><ol><li><p>博客源码存放yyy仓库<br>当源码提交到源码仓库yyy主分支，执行github-actions将代码编译，部署到git-pages(xxx.github.io)仓库中。</p></li><li><p>git-pages仓库：为xxx.github.io</p></li></ol><h2 id="创建ssh-key"><a href="#创建ssh-key" class="headerlink" title="创建ssh-key"></a>创建ssh-key</h2><p>在源码跟目录中执行创建ssh-key命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -f github-page-deploy-key<br></code></pre></td></tr></table></figure><p>此时会得到两个文件：github-page-deploy-key，github-page-deploy-key.pub<br>github-page-deploy-key为私钥；<br>github-page-deploy-key.pub为公钥</p><h2 id="将私钥添加到源码仓库的actions中"><a href="#将私钥添加到源码仓库的actions中" class="headerlink" title="将私钥添加到源码仓库的actions中"></a>将私钥添加到源码仓库的actions中</h2><p><img src="/img/blog/github_actions1.png"><br>填写name，记住此name(此处称为部署KEY)，value填写私钥(github-page-deploy-key)中的内容，用vscode打开复制出<br><img src="/img/blog/github_actions2.png"></p><h2 id="将公钥添加到xxx-github-io仓库中"><a href="#将公钥添加到xxx-github-io仓库中" class="headerlink" title="将公钥添加到xxx.github.io仓库中"></a>将公钥添加到xxx.github.io仓库中</h2><p>复制公钥github-page-deploy-key.pub中的内容。添加到xxx.github.io仓库中的deploy_keys中,title随意取名。<br><img src="/img/blog/github_actions3.png"><br><img src="/img/blog/github_actions4.png"></p><h2 id="编辑deploy-yml文件"><a href="#编辑deploy-yml文件" class="headerlink" title="编辑deploy.yml文件"></a>编辑deploy.yml文件</h2><p>在源码根目录中创建如下目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p .github/workflows/<br></code></pre></td></tr></table></figure><p>.github&#x2F;workflows&#x2F;目录下新建 deploy.yml文件<br>deploy.yml文件内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">blog_ci</span><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]<br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build_and_deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">contains(github.event.head_commit.message,</span> <span class="hljs-string">&#x27;#deploy&#x27;</span><span class="hljs-string">)</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;12&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Prepare</span> <span class="hljs-string">ssh</span> <span class="hljs-string">env</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh</span><br><span class="hljs-string">          echo &quot;$SSH_DEPLOY_KEY&quot; | tr -d &#x27;\r&#x27; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">          ssh-keyscan -H &#x27;github.com&#x27; &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string"></span>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">SSH_DEPLOY_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.部署KEY</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Prepare</span> <span class="hljs-string">hexo</span> <span class="hljs-string">and</span> <span class="hljs-string">npm</span> <span class="hljs-string">env</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          npm install -g hexo-cli</span><br><span class="hljs-string">          npm install</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Prepare</span> <span class="hljs-string">git</span> <span class="hljs-string">env</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          git config --global user.email your@qq.com</span><br><span class="hljs-string">          git config --global user.name your_username</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">Blog</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">| </span><br><span class="hljs-string">          hexo clean</span><br><span class="hljs-string">          hexo g</span><br><span class="hljs-string">          hexo d</span><br></code></pre></td></tr></table></figure><p>记住替换 部署KEY名称；<br>替换git的user.email 和 user.name为你的xxx.github.io仓库的登录邮箱和登录名。</p><h2 id="自动部署历史查看"><a href="#自动部署历史查看" class="headerlink" title="自动部署历史查看"></a>自动部署历史查看</h2><p>将源码推送到源码仓库yyy主分支后，触发执行deploy.yml编译提交流程。<br><img src="/img/blog/github_actions5.png"></p><p>参考：</p><ul><li><a href="https://docs.github.com/cn/actions/quickstart">github-actions</a></li><li><a href="https://razeen.me/posts/use-github-action-to-deploy-your-hexo-blog/">Github Actions 初体验之自动化部署 Hexo 博客</a></li></ul>]]></content>
    
    
    <summary type="html">利用Github Actions自动部署Hexo博客，替代手动部署</summary>
    
    
    
    <category term="Blog" scheme="https://e-miao.github.io/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>迁移博客使用Hexo</title>
    <link href="https://e-miao.github.io/blog/2022-07-08-%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Hexo/"/>
    <id>https://e-miao.github.io/blog/2022-07-08-%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Hexo/</id>
    <published>2022-07-08T18:42:56.000Z</published>
    <updated>2022-07-08T18:42:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>就觉得Fluid这个主题好看，但是在jekyll中没找到合适的替代品，所以迁移使用Hexo。</p><h1 id="Hexo使用"><a href="#Hexo使用" class="headerlink" title="Hexo使用"></a>Hexo使用</h1><p><a href="https://hexo.io/zh-cn/docs/index.html">Hexo使用文档</a></p><h1 id="主题使用"><a href="#主题使用" class="headerlink" title="主题使用"></a>主题使用</h1><p><a href="https://hexo.fluid-dev.com/docs/guide/">Hexo-Theme-Fluid</a></p>]]></content>
    
    
    <summary type="html">最近将博客逐步迁移，使用Hexo+github.io替换原来的jekyll+github.io</summary>
    
    
    
    <category term="Blog" scheme="https://e-miao.github.io/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>Flink消费Kafka时遇到的一些问题汇总</title>
    <link href="https://e-miao.github.io/flink/2021-12-31-Flink-kafka%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://e-miao.github.io/flink/2021-12-31-Flink-kafka%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</id>
    <published>2021-12-31T00:00:00.000Z</published>
    <updated>2021-12-31T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>记录一些在使用flink消费kafka时,遇到一些优化问题和框架问题,不定时更新一些新的问题.</p><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">flink: 1.13.2<br>kafka: 2.5.0<br>hadoop: 3.2.1<br>centos 7<br></code></pre></td></tr></table></figure><h2 id="flink-checkpoint警告日志"><a href="#flink-checkpoint警告日志" class="headerlink" title="flink checkpoint警告日志"></a>flink checkpoint警告日志</h2><ul><li><p>日志1:</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs log">[DataStreamer for file /flink/checkpoints/xxx083408/097a5dc4d32c739760d33baea57f9679/shared/7832d571-5039-4c15-ae7f-99c874c64c55] WARN  org.apache.hadoop.hdfs.DataStreamer  - Caught exception<br>java.lang.InterruptedException: null<br>        at java.lang.Object.wait(Native Method)<br>        at java.lang.Thread.join(Thread.java:1252)<br>        at java.lang.Thread.join(Thread.java:1326)<br>        at org.apache.hadoop.hdfs.DataStreamer.closeResponder(DataStreamer.java:986)<br></code></pre></td></tr></table></figure></li><li><p>原因:</p><p>  hadoop自身BUG<br>  文档说明: <a href="https://issues.apache.org/jira/browse/HDFS-10429">https://issues.apache.org/jira/browse/HDFS-10429</a></p></li><li><p>日志2:</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs log">block BP-1644493283-172.34.242.137-1636089673161:blk_1076991017_3256384] WARN  org.apache.hadoop.hdfs.DataStreamer  - DataStreamer Exception<br>java.nio.channels.ClosedByInterruptException: null<br>        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)<br>        at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:477)<br>        at org.apache.hadoop.net.SocketOutputStream$Writer.performIO(SocketOutputStream.java:63)<br>        at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:142)<br>        at org.apache.hadoop.net.SocketOutputStream.write(SocketOutputStream.java:159)<br>        at org.apache.hadoop.net.SocketOutputStream.write(SocketOutputStream.java:117)<br>        at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)<br>        at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)<br>        at java.io.DataOutputStream.flush(DataOutputStream.java:123)<br>        at org.apache.hadoop.hdfs.DataStreamer.run(DataStreamer.java:775)<br></code></pre></td></tr></table></figure><ul><li>原因:<br>  flink论坛给出由于hadoop bug造成.<br>  link: <a href="https://issues.apache.org/jira/browse/FLINK-13228">https://issues.apache.org/jira/browse/FLINK-13228</a></li></ul></li></ul><h2 id="flink消费kafka事务超时问题"><a href="#flink消费kafka事务超时问题" class="headerlink" title="flink消费kafka事务超时问题"></a>flink消费kafka事务超时问题</h2><p>日志现象:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs log">Map -&gt; Sink: late_log_to_kafka)-xxxxx-51, producerId=19575, epoch=9071] has been open for 304327 ms. This is close to or even exceeding the transaction timeout of 300000 ms.<br></code></pre></td></tr></table></figure><ul><li>flink官网文档建议<br>增加超时时间: <figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pf"><span class="hljs-number">1</span>. 调整kafka-broker中transaction.<span class="hljs-keyword">max</span>.<span class="hljs-keyword">timeout</span>.ms时间<br>transaction.<span class="hljs-keyword">max</span>.<span class="hljs-keyword">timeout</span>.ms:默认<span class="hljs-number">15</span><span class="hljs-keyword">min</span><br><br><span class="hljs-number">2</span>. 调整flink-kafka-producer<br>transaction.<span class="hljs-keyword">timeout</span>.ms: 默认<span class="hljs-number">1</span>hour<br>实际使用中 transaction.<span class="hljs-keyword">timeout</span>.ms设置了 <span class="hljs-number">5</span><span class="hljs-keyword">min</span>,因为出现此问题,增大到<span class="hljs-number">12</span><span class="hljs-keyword">min</span>.(主要是不想去设置kafka-borker,需要重启)<br><br>kafkaProp.put(ProducerConfig.TRANSACTION_TIMEOUT_CONFIG, <span class="hljs-number">12</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>);//<span class="hljs-number">12</span><span class="hljs-keyword">min</span><br><br></code></pre></td></tr></table></figure>link: <a href="https://nightlies.apache.org/flink/flink-docs-release-1.13/docs/connectors/datastream/kafka/#kafka-producers-and-fault-tolerance">https://nightlies.apache.org/flink/flink-docs-release-1.13/docs/connectors/datastream/kafka/#kafka-producers-and-fault-tolerance</a></li></ul><h2 id="flink-checkpoint失败优化"><a href="#flink-checkpoint失败优化" class="headerlink" title="flink-checkpoint失败优化"></a>flink-checkpoint失败优化</h2><ul><li><p>现象</p><p>  flink exactly_one 消费kafka时,kafka峰值流量过大,且分区较多时(且机器资源有限),容易导致checkpoint-data过大,checkpoint失败或超时.</p></li><li><p>解决方法: </p><p>  增加 kafkaProducersPoolSize 大小,默认5.根据实际情况增大其值.</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">* &lt;li&gt;decrease number of max concurrent checkpoints<br>* &lt;li&gt;make checkpoints more <span class="hljs-title function_">reliable</span> <span class="hljs-params">(so that they complete faster)</span><br>* &lt;li&gt;increase the delay between checkpoints<br>* &lt;li&gt;increase the size of &#123;<span class="hljs-meta">@link</span> FlinkKafkaInternalProducer&#125;s pool<br></code></pre></td></tr></table></figure></li><li><p>参考源码:</p><p>  flink-kafka-producer</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * Creates a FlinkKafkaProducer for a given topic. The sink produces its input to the topic. It</span><br><span class="hljs-comment">    * accepts a &#123;<span class="hljs-doctag">@link</span> KafkaSerializationSchema&#125; and possibly a custom &#123;<span class="hljs-doctag">@link</span></span><br><span class="hljs-comment">    * FlinkKafkaPartitioner&#125;.</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> defaultTopic The default topic to write data to</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> serializationSchema A serializable serialization schema for turning user objects into</span><br><span class="hljs-comment">    *     a kafka-consumable byte[] supporting key/value messages</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> producerConfig Configuration properties for the KafkaProducer. &#x27;bootstrap.servers.&#x27; is</span><br><span class="hljs-comment">    *     the only required argument.</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> semantic Defines semantic that will be used by this producer (see &#123;<span class="hljs-doctag">@link</span></span><br><span class="hljs-comment">    *     FlinkKafkaProducer.Semantic&#125;).</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> kafkaProducersPoolSize Overwrite default KafkaProducers pool size (see &#123;<span class="hljs-doctag">@link</span></span><br><span class="hljs-comment">    *     FlinkKafkaProducer.Semantic#EXACTLY_ONCE&#125;).</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FlinkKafkaProducer</span><span class="hljs-params">(</span><br><span class="hljs-params">            String defaultTopic,</span><br><span class="hljs-params">            KafkaSerializationSchema&lt;IN&gt; serializationSchema,</span><br><span class="hljs-params">            Properties producerConfig,</span><br><span class="hljs-params">            FlinkKafkaProducer.Semantic semantic,</span><br><span class="hljs-params">            <span class="hljs-type">int</span> kafkaProducersPoolSize)</span> &#123;<br>        <span class="hljs-built_in">this</span>(<br>                defaultTopic,<br>                <span class="hljs-literal">null</span>,<br>                <span class="hljs-literal">null</span>, <span class="hljs-comment">/* keyed schema and FlinkKafkaPartitioner */</span><br>                serializationSchema,<br>                producerConfig,<br>                semantic,<br>                kafkaProducersPoolSize);<br>    &#125;<br></code></pre></td></tr></table></figure><p>  Semantic.EXACTLY_ONCE</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * Semantics that can be chosen.</span><br><span class="hljs-comment">    * &lt;li&gt;&#123;<span class="hljs-doctag">@link</span> #EXACTLY_ONCE&#125;</span><br><span class="hljs-comment">    * &lt;li&gt;&#123;<span class="hljs-doctag">@link</span> #AT_LEAST_ONCE&#125;</span><br><span class="hljs-comment">    * &lt;li&gt;&#123;<span class="hljs-doctag">@link</span> #NONE&#125;</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">Semantic</span> &#123;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">        * Semantic.EXACTLY_ONCE the Flink producer will write all messages in a Kafka transaction</span><br><span class="hljs-comment">        * that will be committed to Kafka on a checkpoint.</span><br><span class="hljs-comment">        *</span><br><span class="hljs-comment">        * &lt;p&gt;In this mode &#123;<span class="hljs-doctag">@link</span> FlinkKafkaProducer&#125; sets up a pool of &#123;<span class="hljs-doctag">@link</span></span><br><span class="hljs-comment">        * FlinkKafkaInternalProducer&#125;. Between each checkpoint a Kafka transaction is created,</span><br><span class="hljs-comment">        * which is committed on &#123;<span class="hljs-doctag">@link</span> FlinkKafkaProducer#notifyCheckpointComplete(long)&#125;. If</span><br><span class="hljs-comment">        * checkpoint complete notifications are running late, &#123;<span class="hljs-doctag">@link</span> FlinkKafkaProducer&#125; can run</span><br><span class="hljs-comment">        * out of &#123;<span class="hljs-doctag">@link</span> FlinkKafkaInternalProducer&#125;s in the pool. In that case any subsequent</span><br><span class="hljs-comment">        * &#123;<span class="hljs-doctag">@link</span> FlinkKafkaProducer#snapshotState(FunctionSnapshotContext)&#125; requests will fail and</span><br><span class="hljs-comment">        * &#123;<span class="hljs-doctag">@link</span> FlinkKafkaProducer&#125; will keep using the &#123;<span class="hljs-doctag">@link</span> FlinkKafkaInternalProducer&#125; from</span><br><span class="hljs-comment">        * the previous checkpoint. To decrease the chance of failing checkpoints there are four</span><br><span class="hljs-comment">        * options:</span><br><span class="hljs-comment">        * &lt;li&gt;decrease number of max concurrent checkpoints</span><br><span class="hljs-comment">        * &lt;li&gt;make checkpoints more reliable (so that they complete faster)</span><br><span class="hljs-comment">        * &lt;li&gt;increase the delay between checkpoints</span><br><span class="hljs-comment">        * &lt;li&gt;increase the size of &#123;<span class="hljs-doctag">@link</span> FlinkKafkaInternalProducer&#125;s pool</span><br><span class="hljs-comment">        */</span><br>        EXACTLY_ONCE,<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">        * Semantic.AT_LEAST_ONCE the Flink producer will wait for all outstanding messages in the</span><br><span class="hljs-comment">        * Kafka buffers to be acknowledged by the Kafka producer on a checkpoint.</span><br><span class="hljs-comment">        */</span><br>        AT_LEAST_ONCE,<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">        * Semantic.NONE means that nothing will be guaranteed. Messages can be lost and/or</span><br><span class="hljs-comment">        * duplicated in case of failure.</span><br><span class="hljs-comment">        */</span><br>        NONE<br>    &#125;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">Flink消费Kafka时遇到的一些问题汇总,不定时更新.</summary>
    
    
    
    <category term="Flink" scheme="https://e-miao.github.io/categories/Flink/"/>
    
    <category term="Kafka" scheme="https://e-miao.github.io/categories/Flink/Kafka/"/>
    
    
  </entry>
  
  <entry>
    <title>Flink Write Data to Clickhouse 遇到的一些问题.</title>
    <link href="https://e-miao.github.io/flink/2021-11-29-FlinkWriteToClickhouse%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://e-miao.github.io/flink/2021-11-29-FlinkWriteToClickhouse%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</id>
    <published>2021-11-29T00:00:00.000Z</published>
    <updated>2021-11-29T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>由于公司业务和框架因素,目前将Clickhouse作为数仓唯一的存储选择.<br>现将一些个人在使用Flink写数据到Clickhouse遇到的一些问题做一些笔记.</p><h2 id="Clickhouse简介"><a href="#Clickhouse简介" class="headerlink" title="Clickhouse简介:"></a>Clickhouse简介:</h2><p>clickhouse是列式分布式存储系统,ClickHouse是一个用于联机分析(OLAP)的列式数据库管理系统(DBMS)。<br><a href="https://clickhouse.com/docs/zh/">官网简介</a></p><h2 id="问题一-如果保证-Flink-Sink-to-Clickhouse-有效一次"><a href="#问题一-如果保证-Flink-Sink-to-Clickhouse-有效一次" class="headerlink" title="问题一: 如果保证 Flink Sink to Clickhouse 有效一次"></a>问题一: 如果保证 Flink Sink to Clickhouse 有效一次</h2><p>这个问题是刚到公司,分配给我的. 这里说一下我简单的思路和方案.<br>截至目前(2021年11月29日),前几天看到网上阿里已经实现了基于自身Clickhouse的有效一次性入库方案(类似于StreamSinkFile的二次提交)<br>但是需要结合clickhouse的源码修改才能完成</p><p><a href="https://mp.weixin.qq.com/s/8H2bxYUBmPzHl3Ae6WVWJg">阿里巴巴相关文档</a></p><p>目前官方版本Clickhouse不具备事务.</p><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><ol><li><p>将Clickhouse的表引擎改为:  ReplacingMergeTree (目前是MergeTree)</p><ul><li>优点: 满足幂等性,多次写入后数据最终能保证正确性.</li><li>缺点: 当表数据很多时,ReplacingMergeTree对CPU和内存消耗很高.不适用于目前业务中.(目前业务将ods层数据都存到CH中,且是单节点.)</li></ul></li><li><p>将kf_partition,kf_offset写入ch的表中,使topic和表一一对应.offset由kafka维护,不一致时,删除ch中多余数据.</p><ul><li>优点: 能基本保证数据正确性.</li><li>缺点: 不能使用Flink的自动重启机制,需要每次重启时,比对CH与Kafka的对应分区offset.</li><li>缺点: 当CH负载过于高时,重启任务删除数据时,不能正常删除掉.数据准确性受限于CH负载.</li></ul></li><li><p>当任务重启时,使用kafka中的offset点直接启动任务,下一个小时通过hive或者具备事务性或幂等性的存储结构回插到CH(CH删除当前小时数据或分钟) </p><ul><li>优点: 能保证数据准确性</li><li>缺点: 资源消耗更多(需要额外的事务性分布式存储系统或集群资源消耗,目前公司不希望使用更多资源,就是”优化”.)</li><li>缺点: 当前重启小时CH中数据不够准确,需要下一个小时数据回插后数据才具备准确性.</li></ul></li></ol><p>最终使用了方案2.不要问为啥(成本控制?)</p><h2 id="问题二-Clickhouse删除数据时提示-空间不足"><a href="#问题二-Clickhouse删除数据时提示-空间不足" class="headerlink" title="问题二: Clickhouse删除数据时提示 空间不足"></a>问题二: Clickhouse删除数据时提示 空间不足</h2><ol><li>问题场景:</li></ol><p>因为问题一解决方案2是基于保持clickhouse中数据的分区和offset与kafka的分区和offset一致,<br>当任务重启(失败重启或手动重启)时,回去校验offset一致情况 .<br>如果有不一致情况会将clickhouse中多余的数据删除其实保持一致.<br>同时:<br>users.xml 设置了同步修改数据属性.(因为是单节点所以设置1.多节点和副本情况设置2)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mutations_sync</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">mutations_sync</span>&gt;</span> <br></code></pre></td></tr></table></figure><p>导致了任务重启时删除多个按分区删除语句时提示空间不足:<br>日志如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs log">dealCkAndKfOffsetNoEqual count=[8211] ;exec-sql=[alter table  db01.test_table  delete where toDate(`logdate`)=&#x27;2021-11-30&#x27; and kf_partition=6 and kf_partition&gt;=14152053083 and kf_offset&lt;=14152061943]<br>ru.yandex.clickhouse.except.ClickHouseException: ClickHouse exception, code: 341, host: 172.34.6.84, port: 8123; Code: 341, e.displayText() = DB::Exception: Exception hap<br>pened during execution of mutation &#x27;mutation_8222580.txt&#x27; with part &#x27;20210819_662942_690500_6_8222579&#x27; reason: &#x27;Code: 243, e.displayText() = DB::Exception: Cannot reserve<br> 54.68 GiB, not enough space (version 21.8.11.4 (official build))&#x27;. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTA<br>TION query (version 21.8.11.4 (official build))<br><br>        at ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:58)<br>        at ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:28)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.checkForErrorAndThrow(ClickHouseStatementImpl.java:876)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.getInputStream(ClickHouseStatementImpl.java:616)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:117)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:100)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:95)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:90)<br>        at ru.yandex.clickhouse.ClickHouseStatementImpl.execute(ClickHouseStatementImpl.java:226)<br>        at flink_demo.utils.ClickhouseUtils.execSql(ClickhouseUtils.java:44)<br>        at flink_demo.utils.ClickhouseUtils.execSql(ClickhouseUtils.java:32)<br>        at flink_demo.utils.FlinkUtils.dealCkAndKfOffsetNoEqual(FlinkUtils.java:373)<br>        at flink_demo.FlinkWriteLogOdsCKQueue.main(FlinkWriteLogOdsCKQueue.java:52)<br>        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>        at java.lang.reflect.Method.invoke(Method.java:498)<br>        at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:355)<br>        at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:222)<br>        at org.apache.flink.client.ClientUtils.executeProgram(ClientUtils.java:114)<br>        at org.apache.flink.client.cli.CliFrontend.executeProgram(CliFrontend.java:812)<br>        at org.apache.flink.client.cli.CliFrontend.run(CliFrontend.java:246)<br>        at org.apache.flink.client.cli.CliFrontend.parseAndRun(CliFrontend.java:1054)<br>        at org.apache.flink.client.cli.CliFrontend.lambda$main$10(CliFrontend.java:1132)<br>        at java.security.AccessController.doPrivileged(Native Method)<br>        at javax.security.auth.Subject.doAs(Subject.java:422)<br>        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)<br>        at org.apache.flink.runtime.security.contexts.HadoopSecurityContext.runSecured(HadoopSecurityContext.java:41)<br>        at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:1132)<br>Caused by: java.lang.Throwable: Code: 341, e.displayText() = DB::Exception: Exception happened during execution of mutation &#x27;mutation_8222580.txt&#x27; with part &#x27;20210819_662<br>942_690500_6_8222579&#x27; reason: &#x27;Code: 243, e.displayText() = DB::Exception: Cannot reserve 54.68 GiB, not enough space (version 21.8.11.4 (official build))&#x27;. This error ma<br>ybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTATION query (version 21.8.11.4 (official build))<br><br>                at ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:53)<br>        ... 28 more<br>ru.yandex.clickhouse.except.ClickHouseException: ClickHouse exception, code: 341, host: 172.34.6.84, port: 8123; Code: 341, e.displayText() = DB::Exception: Exception hap<br>pened during execution of mutation &#x27;mutation_8222580.txt&#x27; with part &#x27;20210819_662942_690500_6_8222579&#x27; reason: &#x27;Code: 243, e.displayText() = DB::Exception: Cannot reserve<br> 54.68 GiB, not enough space (version 21.8.11.4 (official build))&#x27;. This error maybe retryable or not. In case of unretryable error, mutation can be killed with KILL MUTA<br>TION query (version 21.8.11.4 (official build))<br></code></pre></td></tr></table></figure><p>在执行时CH内存使用较高,如图<br><img src="https://i.loli.net/2021/11/30/mnYWsLOuB35Adrj.png" alt="内存使用图"><br>同时参考了文章: <a href="https://cloud.tencent.com/developer/article/1704570">https://cloud.tencent.com/developer/article/1704570</a> </p><p>发现执行sql报错提示空间不足,是由因为对指定分区执行了 DELETE WHERE 条件删除，不在删除分区的分区文件，这些分区文件进入了 clone 流程,所以造成提示空间不足</p><p>如有其他关键问题.后期再继续更新.</p>]]></content>
    
    
    <summary type="html">Flink Write Data to Clickhouse 遇到的一些问题.</summary>
    
    
    
    <category term="Flink" scheme="https://e-miao.github.io/categories/Flink/"/>
    
    <category term="Clickhouse" scheme="https://e-miao.github.io/categories/Flink/Clickhouse/"/>
    
    
  </entry>
  
  <entry>
    <title>Flume 优化</title>
    <link href="https://e-miao.github.io/flume/2021-11-19-flume-%E4%BC%98%E5%8C%96/"/>
    <id>https://e-miao.github.io/flume/2021-11-19-flume-%E4%BC%98%E5%8C%96/</id>
    <published>2021-11-19T00:00:00.000Z</published>
    <updated>2021-11-19T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flume优化"><a href="#Flume优化" class="headerlink" title="Flume优化"></a>Flume优化</h1><h2 id="背景和现象"><a href="#背景和现象" class="headerlink" title="背景和现象"></a>背景和现象</h2><ul><li><p>现象 </p><p>  因数据堆积(job停止没有自动重启)后,flink任务将数据消费完成到kafka-topic中,flume消费堆积数据到hdfs(s3)时,数据消费过慢.</p></li><li><p>原因</p><p>  修改了kafka的压缩方式,由snappy改为了 zstd,zstd在解压时速率较慢,同时由于堆积造成flume消费kafka时,网速远没达到预期.</p></li></ul><h2 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2><h3 id="升级机器配置"><a href="#升级机器配置" class="headerlink" title="升级机器配置"></a>升级机器配置</h3><p>在原有机器上调整了以下配置后,flume机器网速依然没有提升.平均值大约在42MB&#x2F;s</p><p>原机器 配置: 4C 16GB</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs conf"># source<br>a1.sources.r1.batchSize = 40000 # 原有值 10000<br>a1.sources.r1.batchDurationMillis = 500 # 原有值 1000<br><br># sink<br>a1.sinks.k1.hdfs.batchSize = 5000 # 原有1000<br></code></pre></td></tr></table></figure><p>升级了新机器</p><p>32C 64GB后调整了批次大小和间隔时间,依然没有对消费能力有较大提升,最终平均网速也只在50MB&#x2F;s左右,没有达到预想中的提升.</p><h3 id="修改自定义拦截器"><a href="#修改自定义拦截器" class="headerlink" title="修改自定义拦截器"></a>修改自定义拦截器</h3><p>通过火焰图发现了拦截效果过慢,大约占用了40-45%的效率时间.</p><p>火焰图使用参考其官网: <a href="https://github.com/jvm-profiling-tools/async-profiler">火焰图github官网</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -ef |grep flume<br><span class="hljs-comment">#拿到进程id -&gt; pid</span><br><br>/profiler.sh -d 30 -f pid_xxx.html pid<br><br></code></pre></td></tr></table></figure><p>优化前火焰图:<br><img src="https://i.loli.net/2021/11/29/azbCdjQGpK8OEsn.png"></p><p>通过查看自定义拦截器代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> Event <span class="hljs-title function_">intercept</span><span class="hljs-params">(Event event)</span> &#123;<br>       Map&lt;String, String&gt; headers = event.getHeaders();<br>       <span class="hljs-type">String</span> <span class="hljs-variable">log</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(event.getBody(), StandardCharsets.UTF_8);<br>       JSONObject.parseObject(log);<br>       <span class="hljs-type">JSONObject</span> <span class="hljs-variable">jsonObject</span> <span class="hljs-operator">=</span> JSON.parseObject(log);<br>       <span class="hljs-keyword">if</span> (jsonObject.containsKey(<span class="hljs-string">&quot;key&quot;</span>)) &#123;<br>           headers.put(<span class="hljs-string">&quot;timestamp&quot;</span>, jsonObject.getString(<span class="hljs-string">&quot;timestamp&quot;</span>));<br>           headers.put(<span class="hljs-string">&quot;xxx&quot;</span>, jsonObject.getString(<span class="hljs-string">&quot;xxx&quot;</span>));<br>           headers.put(<span class="hljs-string">&quot;yyy&quot;</span>, jsonObject.getString(<span class="hljs-string">&quot;yyy&quot;</span>));<br>           <span class="hljs-keyword">return</span> event;<br>       &#125; <span class="hljs-keyword">else</span> &#123;<br>           <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>       &#125;<br>   &#125;<br><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">public</span> List&lt;Event&gt; <span class="hljs-title function_">intercept</span><span class="hljs-params">(List&lt;Event&gt; events)</span> &#123;<br>       List&lt;Event&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>       <span class="hljs-keyword">for</span> (Event event : events) &#123;<br>           <span class="hljs-type">Event</span> <span class="hljs-variable">intercept</span> <span class="hljs-operator">=</span> intercept(event);<br>           <span class="hljs-keyword">if</span>(intercept != <span class="hljs-literal">null</span>)&#123;<br>               list.add(intercept);<br>           &#125;<br>       &#125;<br>       <span class="hljs-keyword">return</span> list;<br>   &#125;<br></code></pre></td></tr></table></figure><p>优化后的拦截器代码:使用多多线程解析 List<Event> events,同时去除了重复的JSONObject.parseObject(log);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Event <span class="hljs-title function_">intercept</span><span class="hljs-params">(Event event)</span> &#123;<br>    Map&lt;String, String&gt; headers = event.getHeaders();<br>    <span class="hljs-type">JSONObject</span> <span class="hljs-variable">jsonObject</span> <span class="hljs-operator">=</span> JSON.parseObject(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(event.getBody(), StandardCharsets.UTF_8));<br>    <span class="hljs-keyword">if</span> (jsonObject.containsKey(<span class="hljs-string">&quot;key&quot;</span>)) &#123;<br>        headers.put(<span class="hljs-string">&quot;timestamp&quot;</span>, jsonObject.getString(<span class="hljs-string">&quot;timestamp&quot;</span>));<br>        headers.put(<span class="hljs-string">&quot;xxx&quot;</span>, jsonObject.getString(<span class="hljs-string">&quot;xxx&quot;</span>));<br>        headers.put(<span class="hljs-string">&quot;yyy&quot;</span>, jsonObject.getString(<span class="hljs-string">&quot;yyy&quot;</span>));<br>        <span class="hljs-keyword">return</span> event;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;Event&gt; <span class="hljs-title function_">intercept</span><span class="hljs-params">(List&lt;Event&gt; events)</span> &#123;<br>    List&lt;Event&gt; list = events.stream()<br>            .parallel()<br>            .map(event -&gt; intercept(event))<br>            .filter(e -&gt; e != <span class="hljs-literal">null</span>).collect(Collectors.toList());<br>    <span class="hljs-keyword">return</span> list;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>小结:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">这里总结以下:  events.stream().parallel() 并行执行,当events 个数多的时候效果更好.<br>同时需要属性jdk8+的lamada表达式及内部原理.<br>这里涉及到后期优化kafka消费者的读取批次参数了.<br>这对拦截器的效率提升巨大.<br></code></pre></td></tr></table></figure></li></ul><p>来看一下优化拦截器后的火焰图:<br><img src="https://i.loli.net/2021/11/29/8ohcMwQ7tWx6kIr.png"></p><h3 id="修改kafka读取批次和channel大小及sink的批次大小"><a href="#修改kafka读取批次和channel大小及sink的批次大小" class="headerlink" title="修改kafka读取批次和channel大小及sink的批次大小."></a>修改kafka读取批次和channel大小及sink的批次大小.</h3><p>在高配机器上上传修改后拦截器jar后,不修改kafka消费参数时,提升效果来到了72MB&#x2F;s,但是还是没有达到预期100MB+的理想情况.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">a1.sources.r1.batchSize</span> <span class="hljs-string">=</span> <span class="hljs-number">40000</span><br><span class="hljs-string">a1.sources.r1.batchDurationMillis</span> <span class="hljs-string">=</span> <span class="hljs-number">500</span><br><span class="hljs-string">a1.sources.r1.kafka.consumer.max.poll.records</span> <span class="hljs-string">=</span> <span class="hljs-number">40000</span> <span class="hljs-comment">#这个和a1.sources.r1.batchSize很关键</span><br></code></pre></td></tr></table></figure><p>kafka.consumer.max.poll.records: 消费者批次拉取数据大小<br>a1.sources.r1.batchSize : flume的source批次写入channel时的大小.</p><p>修改上了上述参数后,重启flume,flume消费机器网速来到120MB&#x2F;s达到了理想情况.</p><h2 id="优化总结"><a href="#优化总结" class="headerlink" title="优化总结"></a>优化总结</h2><ol><li>在flume拦截使用多线程时,首先需要批次数据更多更有利,同时和cpu个数和频率也有关一定关系.</li><li>flume-source:kafka-consumer批次拉取也很关键.如果设置大小.对1也有影响.</li></ol>]]></content>
    
    
    <summary type="html">Flume优化读取kafka写入HDFS文件系统，提高吞吐量</summary>
    
    
    
    <category term="Flume" scheme="https://e-miao.github.io/categories/Flume/"/>
    
    
  </entry>
  
  <entry>
    <title>macos中遇到的一些问题</title>
    <link href="https://e-miao.github.io/other/2021-11-03-macos%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://e-miao.github.io/other/2021-11-03-macos%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</id>
    <published>2021-11-03T00:00:00.000Z</published>
    <updated>2021-11-03T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>记录自己在使用MacOS中遇到的一些问题.</p><h2 id="Bash版本问题-gt-date命令问题"><a href="#Bash版本问题-gt-date命令问题" class="headerlink" title="Bash版本问题-&gt;date命令问题"></a>Bash版本问题-&gt;date命令问题</h2><ul><li>场景:<br>自己在使用date命令时发现,本机mac和linux环境的中执行效果不一样;<br>linux可以正常执行,但是mac不行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># linux 环境下</span><br>[root@localhost]~<span class="hljs-comment"># date -d &quot;2021-01-01 00:00:00&quot; +&quot;%Y%m%d&quot;</span><br>20210101<br><br><span class="hljs-comment"># mac</span><br>~ ❯ <span class="hljs-built_in">date</span> -d <span class="hljs-string">&quot;2021-01-01 00:00:00&quot;</span> +<span class="hljs-string">&quot;%Y%m%d&quot;</span><br>usage: <span class="hljs-built_in">date</span> [-jnRu] [-d dst] [-r seconds] [-t west] [-v[+|-]val[ymwdHMS]] ...<br>            [-f <span class="hljs-built_in">fmt</span> <span class="hljs-built_in">date</span> | [[[mm]<span class="hljs-built_in">dd</span>]HH]MM[[cc]yy][.ss]] [+format]<br></code></pre></td></tr></table></figure><ul><li>原因<br>查看bash版本发现:疑是版本问题.同时在升级完bash版本后无效,发现原因是: macos date 命令未遵循Linux规范</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#mac bash version</span><br>~ ❯ bash -version <br>GNU bash, version 3.2.57(1)-release (arm64-apple-darwin21)<br>Copyright (C) 2007 Free Software Foundation, Inc.<br><br><span class="hljs-comment"># linux bash version</span><br>[root@localhost]~<span class="hljs-comment"># bash -version</span><br>GNU bash， 版本 4.2.46(2)-release (x86_64-redhat-linux-gnu)<br>Copyright (C) 2011 Free Software Foundation, Inc.<br>许可证 GPLv3+: GNU GPL 许可证版本3或者更高 &lt;http://gnu.org/licenses/gpl.html&gt;<br></code></pre></td></tr></table></figure><ul><li>解决方案</li></ul><p>升级bash,升级后无效; 最后发现:macos date 命令未遵循Linux规范,暂时无解.</p><ol><li>macos date <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">date</span> -v -1d -j -f <span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span> <span class="hljs-string">&#x27;2021-10-01&#x27;</span> +<span class="hljs-string">&quot;%Y/%m/%d&quot;</span><br>2021/09/30<br></code></pre></td></tr></table></figure></li><li>linux date<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">date</span> -d<span class="hljs-string">&#x27;-1 day 2021-10-01&#x27;</span> +<span class="hljs-string">&quot;%Y/%m/%d&quot;</span><br>2021/09/30<br></code></pre></td></tr></table></figure></li></ol><h2 id="M1-MacOS-RocksDB报错"><a href="#M1-MacOS-RocksDB报错" class="headerlink" title="M1 MacOS RocksDB报错"></a>M1 MacOS RocksDB报错</h2><p>librocksdbjni-osx.jnilib’ (mach-o file, but is an incompatible architecture (have ‘x86_64’, need ‘arm64e’))</p><p>现象: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs log">Caused by: java.lang.UnsatisfiedLinkError: /private/var/folders/yy/bzy10qzx6tqdtl8c6rglyc5m0000gn/T/rocksdb-lib-3af5f881382477b5f054b9f48837917c/librocksdbjni-osx.jnilib: dlopen(/private/var/folders/yy/bzy10qzx6tqdtl8c6rglyc5m0000gn/T/rocksdb-lib-3af5f881382477b5f054b9f48837917c/librocksdbjni-osx.jnilib, 0x0001): tried: &#x27;/private/var/folders/yy/bzy10qzx6tqdtl8c6rglyc5m0000gn/T/rocksdb-lib-3af5f881382477b5f054b9f48837917c/librocksdbjni-osx.jnilib&#x27; (mach-o file, but is an incompatible architecture (have &#x27;x86_64&#x27;, need &#x27;arm64e&#x27;)), &#x27;/usr/lib/librocksdbjni-osx.jnilib&#x27; (no such file)<br>at java.lang.ClassLoader$NativeLibrary.load(Native Method)<br>at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1950)<br>at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1832)<br>at java.lang.Runtime.load0(Runtime.java:811)<br>at java.lang.System.load(System.java:1088)<br>at org.rocksdb.NativeLibraryLoader.loadLibraryFromJar(NativeLibraryLoader.java:78)<br>at org.rocksdb.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:56)<br>at org.apache.flink.contrib.streaming.state.EmbeddedRocksDBStateBackend.ensureRocksDBIsLoaded(EmbeddedRocksDBStateBackend.java:860)<br>... 17 more<br><br></code></pre></td></tr></table></figure><p>暂时无法解决,尚未支持M1 <a href="https://github.com/facebook/rocksdb/issues/7720">https://github.com/facebook/rocksdb/issues/7720</a></p><p>2022年07月19日更新：<br>RocksDB 6.29.4.1 版本已更新支持：<a href="https://github.com/facebook/rocksdb/issues/7720#issuecomment-1079648907">https://github.com/facebook/rocksdb/issues/7720#issuecomment-1079648907</a><br>maven: <a href="https://mvnrepository.com/artifact/org.rocksdb/rocksdbjni">https://mvnrepository.com/artifact/org.rocksdb/rocksdbjni</a></p><h2 id="“xxxxxx”已损坏，无法打开。-您应该将它移到废纸篓。"><a href="#“xxxxxx”已损坏，无法打开。-您应该将它移到废纸篓。" class="headerlink" title="“xxxxxx”已损坏，无法打开。 您应该将它移到废纸篓。"></a>“xxxxxx”已损坏，无法打开。 您应该将它移到废纸篓。</h2><p>发生这种情况是因为app开发者没有付费获得Apple开发者许可证；导致app对于Macos系统没有得到公证许可。<br>解决方案</p><ul><li>方法1：绕过公证<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo xattr -rd com.apple.quarantine /Applications/xxxxxx.app<br></code></pre></td></tr></table></figure>或<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo xattr -rd com.apple.quarantine <br></code></pre></td></tr></table></figure></li><li>方案2：安装时绕过公证<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install librewolf --no-quarantine <br></code></pre></td></tr></table></figure></li></ul><p>参考文章：<br>方法1：<a href="https://macwk.com/article/macos-file-damage">https://macwk.com/article/macos-file-damage</a><br>方法2：<a href="https://librewolf.net/docs/faq/#how-do-i-get-native-messaging-to-work-1">https://librewolf.net/docs/faq/#how-do-i-get-native-messaging-to-work-1</a></p><h1 id="打开终端提示-”You-have-mail“"><a href="#打开终端提示-”You-have-mail“" class="headerlink" title="打开终端提示 ”You have mail“"></a>打开终端提示 ”You have mail“</h1><p>执行mail命令，接着删除文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mail<br>d *<br></code></pre></td></tr></table></figure><p>删除mail相关文件 <strong>记得替换USERNAME为本地电脑的用户名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf /var/mail/USENAME<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">macos中遇到的一些问题</summary>
    
    
    
    <category term="Other" scheme="https://e-miao.github.io/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>Flink1.13.2手动编译</title>
    <link href="https://e-miao.github.io/flink/2021-09-10-Flink1.13.2%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91/"/>
    <id>https://e-miao.github.io/flink/2021-09-10-Flink1.13.2%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91/</id>
    <published>2021-09-10T00:00:00.000Z</published>
    <updated>2021-09-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flink1-13-2手动编译"><a href="#Flink1-13-2手动编译" class="headerlink" title="Flink1.13.2手动编译"></a>Flink1.13.2手动编译</h1><h2 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 系统</span><br><span class="hljs-attribute">Linux</span> <span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1127</span>.el7.x86_64 #<span class="hljs-number">1</span> SMP Tue Mar <span class="hljs-number">31</span> <span class="hljs-number">23</span>:<span class="hljs-number">36</span>:<span class="hljs-number">51</span> UTC <span class="hljs-number">2020</span> x86_64 x86_64 x86_64 GNU/Linux<br><br><span class="hljs-comment"># jdk maven</span><br><span class="hljs-attribute">Apache</span> Maven <span class="hljs-number">3</span>.<span class="hljs-number">6</span>.<span class="hljs-number">3</span> (cecedd343002696d0abb50b32b541b8a6ba2883f)<br><span class="hljs-attribute">Maven</span> home: /home/apache-maven-<span class="hljs-number">3</span>.<span class="hljs-number">6</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">Java</span> version: <span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-<span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-openjdk-<span class="hljs-number">1.8.0.252</span>.b09-<span class="hljs-number">2</span>.el7_8.x86_64/jre<br><span class="hljs-attribute">Default</span> locale: en_US, platform encoding: UTF-<span class="hljs-number">8</span><br><span class="hljs-attribute">OS</span> name: <span class="hljs-string">&quot;linux&quot;</span>, version: <span class="hljs-string">&quot;3.10.0-1127.el7.x86_64&quot;</span>, arch: <span class="hljs-string">&quot;amd64&quot;</span>, family: <span class="hljs-string">&quot;unix&quot;</span><br><span class="hljs-comment"># flink</span><br><span class="hljs-attribute">flink</span>-<span class="hljs-number">1</span>.<span class="hljs-number">13</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="编译步骤"><a href="#编译步骤" class="headerlink" title="编译步骤"></a>编译步骤</h2><h3 id="1-解压源码"><a href="#1-解压源码" class="headerlink" title="1.解压源码"></a>1.解压源码</h3><h3 id="2-执行编译"><a href="#2-执行编译" class="headerlink" title="2.执行编译"></a>2.执行编译</h3><p>指定hadoop版本，scala版本，hive版本等信息</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mvn</span> clean install -T4C -DskipTests -Dfast -Dhadoop.version=<span class="hljs-number">3</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span> -Dscala-<span class="hljs-number">2</span>.<span class="hljs-number">11</span> -Dhive.version=<span class="hljs-number">3</span>.<span class="hljs-number">1</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><strong>如果环境中正常的情况，上述步骤可以正常编译出符合自己环境的flink运行包</strong></p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><ul><li><p>flink-shaded-hadoop编译失败时，下载flink-shaded编译后在进行flink编译</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mvn clean install -DskipTests -Dmaven.javadoc.<span class="hljs-attribute">skip</span>=<span class="hljs-literal">true</span> -Dcheckstyle.<span class="hljs-attribute">skip</span>=<span class="hljs-literal">true</span> -Drat.<span class="hljs-attribute">skip</span>=<span class="hljs-literal">true</span> -pl flink-shaded-hadoop-2-parent/flink-shaded-hadoop-2-uber -am -Dhadoop.<span class="hljs-attribute">version</span>=3.2.1<br></code></pre></td></tr></table></figure></li><li><p>如果出现依赖问题增加仓库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">repositories</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jetty<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>jetty Repository<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://repo.hortonworks.com/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">releases</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>daily<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">releases</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">snapshots</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">checksumPolicy</span>&gt;</span>warn<span class="hljs-tag">&lt;/<span class="hljs-name">checksumPolicy</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">snapshots</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">layout</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span>      <br><span class="hljs-tag">&lt;/<span class="hljs-name">repositories</span>&gt;</span><br><br></code></pre></td></tr></table></figure></li><li><p>flink-yarn-test编译失败，跳过</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>$&#123;java.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>$&#123;java.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 略过测试代码的编译 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skip</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skip</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- The semantics of this option are reversed, see MCOMPILER-209. --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">useIncrementalCompilation</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">useIncrementalCompilation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">compilerArgs</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- Prevents recompilation due to missing package-info.class, see MCOMPILER-205 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">arg</span>&gt;</span>-Xpkginfo:always<span class="hljs-tag">&lt;/<span class="hljs-name">arg</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">compilerArgs</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span>  <br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Flink1.13.2手动编译</summary>
    
    
    
    <category term="Flink" scheme="https://e-miao.github.io/categories/Flink/"/>
    
    <category term="Complie" scheme="https://e-miao.github.io/categories/Flink/Complie/"/>
    
    
  </entry>
  
  <entry>
    <title>Python编译打包为并生成deb(带桌面图标)</title>
    <link href="https://e-miao.github.io/python/2021-09-08-Python%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85%E4%B8%BA%E5%B9%B6%E7%94%9F%E6%88%90deb(%E5%B8%A6%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87)/"/>
    <id>https://e-miao.github.io/python/2021-09-08-Python%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85%E4%B8%BA%E5%B9%B6%E7%94%9F%E6%88%90deb(%E5%B8%A6%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87)/</id>
    <published>2021-09-08T00:00:00.000Z</published>
    <updated>2021-09-08T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python编译打包为并生成deb-带桌面图标"><a href="#Python编译打包为并生成deb-带桌面图标" class="headerlink" title="Python编译打包为并生成deb(带桌面图标)"></a>Python编译打包为并生成deb(带桌面图标)</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">Ubuntu20.<span class="hljs-number">04</span><br>Python3.<span class="hljs-number">8</span><br><br># 项目未打包前目录结构<br>tree -L <span class="hljs-number">2</span><br>❯ tree -L <span class="hljs-number">2</span><br>.<br>├── application.png<br>├── debbuild<br>│   ├── DEBIAN<br>│   └── usr<br>├── exec_cmd.<span class="hljs-keyword">py</span><br>├── main.<span class="hljs-keyword">py</span><br>├── __pycache__<br>│   └── main.cpython-<span class="hljs-number">38</span>.pyc<br>├── random_wallpaper.<span class="hljs-keyword">py</span><br><br><br></code></pre></td></tr></table></figure><h2 id="1-安装pyinstaller"><a href="#1-安装pyinstaller" class="headerlink" title="1 安装pyinstaller"></a>1 安装pyinstaller</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> pyinstaller<br></code></pre></td></tr></table></figure><h2 id="2-将main编译为二进制可执行文件"><a href="#2-将main编译为二进制可执行文件" class="headerlink" title="2 将main编译为二进制可执行文件"></a>2 将main编译为二进制可执行文件</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs css">pyinstaller -F <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span>  打包ubuntu下的可执行文件<br>pyinstaller -F -w <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span>  不带控制台的打包<br># 带有图标的<br>pyinstaller -F -w -<span class="hljs-selector-tag">i</span> application<span class="hljs-selector-class">.png</span> <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span>  打包指定ubuntu下的可执行文件的图标打包<br><br># 编译完成后目录：<br>❯ tree -L <span class="hljs-number">2</span><br>.<br>├── application<span class="hljs-selector-class">.png</span><br>├── build<br>│   └── <span class="hljs-selector-tag">main</span><br>├── dist<br>│   └── <span class="hljs-selector-tag">main</span><br>├── exec_cmd<span class="hljs-selector-class">.py</span><br>├── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span><br>├── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.spec</span><br>├── __pycache__<br>│   └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.cpython-38</span><span class="hljs-selector-class">.pyc</span><br>├── random_wallpaper<span class="hljs-selector-class">.py</span><br>└── venv<br>    ├── bin<br>    ├── include<br>    ├── lib<br>    ├── lib64 -&gt; lib<br>    └── pyvenv<span class="hljs-selector-class">.cfg</span><br><br></code></pre></td></tr></table></figure><p><strong>dist&#x2F;main为当前系统可执行文件</strong></p><h2 id="3-将可执行文件打包为deb并且设置桌面图标（Ubuntu环境）"><a href="#3-将可执行文件打包为deb并且设置桌面图标（Ubuntu环境）" class="headerlink" title="3 将可执行文件打包为deb并且设置桌面图标（Ubuntu环境）"></a>3 将可执行文件打包为deb并且设置桌面图标（Ubuntu环境）</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir debbuild &amp;&amp; cd debbuild<br><span class="hljs-comment">#以 debbuild 根目录，创建如下目录和文件</span><br>DEBIAN,usr<span class="hljs-regexp">/lib/</span>RandomWallPaper ,usr<span class="hljs-regexp">/lib/</span>share<span class="hljs-regexp">/applications ,usr/</span>lib<span class="hljs-regexp">/share/i</span>cons<br>❯ tree<br>.<br>├── DEBIAN<br>│   └── control<br>└── usr<br>    ├── lib<br>    │   └── RandomWallpaper<br>    │       └── main<br>    └── share<br>        ├── applications<br>        │   └── RandomWallpaper.desktop<br>        └── icons<br>            └── RandomWallpaper.png<br><br></code></pre></td></tr></table></figure><p><strong>usr&#x2F;lib&#x2F;RandomWallPaper&#x2F;main 这个文件就是可执行二进制文件，来自于dist&#x2F;main ; RandomWallpaper.png 图标文件为自定义</strong></p><h3 id="3-1-control"><a href="#3-1-control" class="headerlink" title="3.1 control"></a>3.1 control</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Package:</span> RandomWallpaper<br><span class="hljs-symbol">Version:</span> <span class="hljs-number">1.0</span><span class="hljs-number">.0</span><br><span class="hljs-symbol">Architecture:</span> amd64<br><span class="hljs-symbol">Maintainer:</span> lius<br><span class="hljs-symbol">Description:</span> random <span class="hljs-keyword">set</span> desktop background img <span class="hljs-keyword">and</span> lock img<br></code></pre></td></tr></table></figure><h3 id="3-2-RandomWallpaper-desktop"><a href="#3-2-RandomWallpaper-desktop" class="headerlink" title="3.2 RandomWallpaper.desktop"></a>3.2 RandomWallpaper.desktop</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Desktop Entry]</span><br><span class="hljs-attr">Name</span>=RandomWallpaper<br><span class="hljs-attr">Comment</span>=An example<br><span class="hljs-attr">Exec</span>=/usr/lib/RandomWallpaper/main<br><span class="hljs-attr">Icon</span>=/usr/share/icons/RandomWallpaper.png<br><span class="hljs-attr">Terminal</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">Type</span>=Application<br><span class="hljs-attr">X-Ubuntu-Touch</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">Categories</span>=Development<br></code></pre></td></tr></table></figure><h2 id="4-执行打包"><a href="#4-执行打包" class="headerlink" title="4 执行打包"></a>4 执行打包</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">cd</span> ..<br><span class="hljs-selector-id">#---------------</span>#<br>❯ <span class="hljs-selector-tag">tree</span> <span class="hljs-selector-tag">-L</span> <span class="hljs-number">2</span><br>.<br>├── <span class="hljs-selector-tag">application</span><span class="hljs-selector-class">.ico</span><br>├── <span class="hljs-selector-tag">application</span><span class="hljs-selector-class">.png</span><br>├── <span class="hljs-selector-tag">build</span><br>│   └── <span class="hljs-selector-tag">main</span><br>├── <span class="hljs-selector-tag">debbuild</span><br>│   ├── <span class="hljs-selector-tag">DEBIAN</span><br>│   └── <span class="hljs-selector-tag">usr</span><br>├── <span class="hljs-selector-tag">dist</span><br>│   └── <span class="hljs-selector-tag">main</span><br>├── <span class="hljs-selector-tag">exec_cmd</span><span class="hljs-selector-class">.py</span><br>├── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.py</span><br>├── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.spec</span><br>├── <span class="hljs-selector-tag">pk</span><span class="hljs-selector-class">.sh</span><br>├── <span class="hljs-selector-tag">__pycache__</span><br>│   └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.cpython-38</span><span class="hljs-selector-class">.pyc</span><br>├── <span class="hljs-selector-tag">randomWallpaper1</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.amd64</span><span class="hljs-selector-class">.deb</span><br>├── <span class="hljs-selector-tag">random_wallpaper</span><span class="hljs-selector-class">.py</span><br>└── <span class="hljs-selector-tag">venv</span><br>    ├── <span class="hljs-selector-tag">bin</span><br>    ├── <span class="hljs-selector-tag">include</span><br>    ├── <span class="hljs-selector-tag">lib</span><br>    ├── <span class="hljs-selector-tag">lib64</span> <span class="hljs-selector-tag">-</span>&gt; <span class="hljs-selector-tag">lib</span><br>    └── <span class="hljs-selector-tag">pyvenv</span><span class="hljs-selector-class">.cfg</span><br><span class="hljs-selector-id">#----------------------</span>#<br><br><span class="hljs-selector-tag">sudo</span> <span class="hljs-selector-tag">dpkg</span> <span class="hljs-selector-tag">-b</span> <span class="hljs-selector-tag">debbuild</span>  <span class="hljs-selector-tag">randomWallpaper1</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.amd64</span><span class="hljs-selector-class">.deb</span><br></code></pre></td></tr></table></figure><h2 id="5-验证安装"><a href="#5-验证安装" class="headerlink" title="5 验证安装"></a>5 验证安装</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">sudo dpkg -<span class="hljs-selector-tag">i</span> randomWallpaper1.<span class="hljs-number">0.0</span><span class="hljs-selector-class">.amd64</span><span class="hljs-selector-class">.deb</span><br><br></code></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>翻阅资料发现pyinstaller在某个版本后，不再支持交叉编译，因为兼容性太差。需要对应操作系统的可执行文件，需要到相应的操作系统下进行编译。 </p><p><strong>（But Golang 可以，所以后期有类似的应用程序，尽量都会使用go进行编写）</strong></p>]]></content>
    
    
    <summary type="html">Python编译打包为并生成deb(带桌面图标)，目前仅适用于Ubuntu</summary>
    
    
    
    <category term="Python" scheme="https://e-miao.github.io/categories/Python/"/>
    
    
  </entry>
  
</feed>
